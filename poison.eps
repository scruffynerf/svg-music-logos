%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 193 193 
%%LanguageLevel: 2
%%Creator: CorelDRAW 11
%%Title: 71572.eps
%%CreationDate: Sun Dec 29 11:50:12 2002
%%For: ldn
%%DocumentProcessColors: Cyan Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 2 def
/CMYKMarks true def
/UseLevel 2 def
%Build: CorelDRAW 11 Version 11.633
%Color profile: Disabled
/CorelIsEPS true def
%%BeginResource: procset wCorel11Dict 11.0 0
/wCorel11Dict 300 dict def wCorel11Dict begin
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge
{pop}{exch pop}ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch
rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll
eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1
exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}
repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1
roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index
.114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb
/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray
ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor
get def/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict
/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor
sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop
/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where{pop
/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld
}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{
pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse
/setoverprint where{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where
{pop}{/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1
roll mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/Corelsetcustomcolor_exists false def/setcustomcolor where{pop
/Corelsetcustomcolor_exists true def}if CorelIsSeps true eq CorelIsInRIPSeps
false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{findcmykcustomcolor exch setcustomcolor}ifelse
SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage
where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi
true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop
daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs
{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors
dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255
div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul
cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{
4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div
$dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3
add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat
0 $dat length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse
/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$fil 4 eq
{CorelShfillDoFill}{$t $c $m $y $k $n $o @scc_5{wfill}{@np}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{
matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M $Y $K
$N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}{@np}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{
5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{
/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{
@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{
@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq{/$ink_5 -1 def}
{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5(Magenta)eq{/$ink_5 1
def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{CurrentInkName_5(Black)eq
{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}ifelse}ifelse}bd/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg false def}
ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.0
/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true def}{@gs $t $c $m $y $k $n $o
@scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd/$pyf xd/$pxf xd/$pn xd}bd
/CorelPtrnDoFill{@gs $ctm setmatrix $pm concat CorelPtrnSetBBox wclip @sv Bburx
Bbury $pm itransform/$tury xd/$turx xd Bbllx Bblly $pm itransform/$tlly xd
/$tllx xd newpath $tllx $tlly m $tllx $tury l $turx $tury l $turx $tlly l $tllx
$tlly m @cp pathbbox @rs/$tury xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx
sub def/$hei $tury $tlly sub def @gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{
$t $c $m $y $k $n $o @scc_5{SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei
scale <00> 8 1 false[8 0 0 1 0 0]{}imagemask}{/$bkg true def}ifelse}if}ifelse
@gr $wid 0 gt $hei 0 gt and{$pn cvlit load aload pop/$pd xd 3 -1 roll sub
/$phei xd exch sub/$pwid xd $wid $pwid div ceiling 1 add/$tlx xd $hei $phei div
ceiling 1 add/$tly xd currentdict/CorelPtrnL2Pattern known $psy 0 eq and $psx 0
eq and{CorelPtrnL2Pattern}{$psx 0 eq{CorelPtrnTileVeritcal}{CorelPtrnTileHoriz
}ifelse}ifelse}if @gr @np/$bkg false def}bd/CorelPtrnSetBBox{pathbbox/$ury xd
/$urx xd/$lly xd/$llx xd}bd/CorelPtrnSetFirstTile{$tllx $pxf add dup $tllx gt
{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei add}if/$ty xd}bd/p{/$pm
xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}bd/CorelPtrnDraw{@ep}bd
/CorelPtrnPutTile{@sv/$in true def 2 copy dup $lly le{/$in false def}if $phei
sub $ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add $llx le{
/$in false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl 0
$phei rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1 roll 3
index sub Tl matrix currentmatrix/$ctm xd CorelPtrnDraw pop pop pop pop}{pop
pop}ifelse @rs}bd/CorelPtrnTileHoriz{CorelPtrnSetFirstTile 0 1 $tly 1 sub{dup
$psx mul $tx add{dup $llx gt{$pwid sub}{exit}ifelse}loop exch $phei mul $ty
exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy 3 -1 roll add exch CorelPtrnPutTile
pop}for pop pop}for}bd/CorelPtrnTileVeritcal{CorelPtrnSetFirstTile 0 1 $tlx 1
sub{dup $pwid mul $tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}
{exit}ifelse}loop 0 1 $tly 1 sub{$phei mul 3 copy sub CorelPtrnPutTile pop}for
pop pop}for}bd L2? UseLevel 2 ge and{/CorelPtrnL2Pattern{@sv[$pn cvlit load
aload pop pop]$pwid $phei $pn cvlit load aload pop pop pop pop pathbbox pop pop
2 index sub exch 3 index sub 4 -2 roll pop pop exch matrix identmatrix
translate/PatternMatrix xd/PatternYStep xd/PatternXStep xd/PatternBBox xd
currentdict/PatternMainDict xd <</PaintType 1/PatternType 1/TilingType 1/BBox
PatternBBox/XStep PatternXStep/YStep PatternYStep/PaintProc{begin
PatternMainDict begin $ctm currentmatrix pop 0 CorelPtrnDraw end end}bind >>
PatternMatrix makepattern setpattern fill @rs}def}if
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel11Dict begin
@BeginSysCorelDict
@ssa
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
0.00000 0.00000 192.75591 192.75591 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
0.00000 192.75591 m
192.75591 192.75591 L
192.75591 0.00000 L
0.00000 0.00000 L
0.00000 192.75591 L
@c
F

@rax %Note: Object
8.50394 67.05694 184.25197 104.65427 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
184.25197 67.05694 m
8.50394 67.05694 L
8.50394 104.65427 L
184.25197 104.65427 L
184.25197 67.05694 L
@c
F

@rax %Note: Object
13.62501 83.59739 178.10135 125.69896 @E
 0 O 0 @g
0.60 0.00 0.99 0.00 k
/$fm 0 def
176.64463 109.55650 m
162.94989 128.12145 137.98261 120.83131 137.98261 120.83131 C
138.70488 120.18274 139.67178 118.95080 140.47370 118.50463 C
140.47370 118.50463 147.76980 118.88504 147.77178 118.88504 C
151.29241 118.88504 155.17276 118.39606 158.56157 117.45213 C
161.77124 116.55751 165.52687 115.08009 167.83455 112.58504 C
170.95521 109.21238 170.65956 103.44047 167.30391 100.33370 C
166.63861 103.22391 166.41411 111.72756 162.37672 111.72756 C
160.53704 111.72756 158.47455 111.69581 156.65499 111.69581 C
155.70028 111.48265 154.87398 110.71417 154.30876 109.55650 C
153.38636 109.67868 152.70491 111.25984 151.62151 111.50334 C
136.42243 111.50334 L
133.94381 111.73691 130.37329 110.88085 126.98135 109.55055 C
126.52384 109.83146 129.24340 111.75534 127.76088 111.75534 C
121.54507 111.79587 114.44712 112.43679 108.71291 110.73260 C
106.06620 112.72025 102.05546 110.97638 99.28885 111.50334 C
98.28567 111.05717 97.72498 109.59732 96.60132 109.55650 C
95.26535 112.29250 92.63027 111.70602 89.66381 111.70602 C
87.60841 111.63742 L
90.23499 112.41298 93.82734 114.75893 95.15055 117.03033 C
95.99272 118.49074 96.15090 120.66945 95.42891 122.21065 C
94.18564 123.58970 92.43326 125.21197 90.62872 125.69896 C
60.99080 125.69896 L
54.13351 120.22299 48.11811 113.89635 41.54173 107.81235 C
40.98529 107.29786 39.43843 107.08271 38.71134 106.82872 C
37.73934 106.48885 36.76904 106.14699 35.79732 105.80740 C
33.85162 105.12850 31.89543 104.48107 29.95398 103.79169 C
26.27773 102.48661 22.35713 101.06759 19.00828 99.04167 C
17.37978 98.05606 15.93128 96.61238 14.87622 95.02554 C
14.27896 94.12724 13.66951 93.12208 13.63011 92.03783 C
13.47931 87.87657 16.44265 87.34649 16.44576 87.37115 C
17.16208 93.18954 29.46019 96.53159 29.46019 96.53159 C
25.40041 93.90614 26.26413 92.67846 28.26765 91.26454 C
38.05228 91.26454 L
42.66425 95.11824 46.67443 99.90369 51.52706 103.51332 C
55.45701 104.31581 59.73874 105.13361 63.66869 105.66709 C
61.76211 103.76107 59.82803 102.54019 59.62762 100.39039 C
59.10633 98.11871 59.54712 95.76709 61.15124 94.18507 C
64.51994 90.73814 69.29235 90.21005 74.06447 90.85946 C
83.24759 84.45118 95.39858 81.85465 106.98746 84.81600 C
111.68079 86.07345 116.13203 90.57572 117.37446 95.32063 C
117.93628 95.32063 L
119.66060 93.33326 122.30759 91.87285 124.87323 91.06214 C
129.36501 89.80413 133.57502 91.50831 137.58576 92.60306 C
137.98488 91.84422 138.80098 91.03833 139.82457 90.79030 C
141.86183 90.79030 144.37389 90.77272 146.72098 90.77272 C
156.67824 100.16759 L
157.05298 97.63427 157.15304 95.27981 157.63408 93.21165 C
158.09272 91.95080 159.02334 91.05052 160.21729 90.65679 C
162.80306 90.65679 166.62047 90.65679 169.54781 90.65679 C
172.23420 91.95420 174.39987 94.18507 176.28435 96.69940 C
178.40976 100.14690 178.85112 105.98712 176.64463 109.55650 C
@c
92.16935 105.60331 m
92.04917 104.99499 90.36170 103.02321 89.83984 102.61701 C
89.84750 102.62268 90.03600 103.55102 90.04989 103.66044 C
90.09751 104.02639 89.82142 105.54350 89.30211 105.60331 C
92.16935 105.60331 L
@c
68.98195 97.48800 m
68.80309 97.72668 69.28016 98.86139 69.28016 98.86139 C
69.42132 98.14847 69.75780 97.48800 69.75780 97.48800 C
68.98195 97.48800 L
@c
75.78850 98.84891 m
75.05376 98.27263 73.33512 97.51918 72.41443 97.87153 C
71.64000 98.16718 70.80945 99.19134 70.97272 100.03861 C
71.27603 101.61468 73.52731 102.44891 74.74394 103.17430 C
75.77745 103.79112 76.87757 104.29115 78.01483 104.68460 C
78.77310 104.94567 79.91320 105.44230 80.68989 105.40431 C
81.21203 102.68306 77.59587 100.26709 75.78850 98.84891 C
@c
78.73002 92.76151 m
79.74539 93.23943 80.28283 92.94094 80.28283 92.94094 C
81.05953 92.16425 81.29849 91.62624 81.29849 91.62624 C
80.22302 91.56643 78.73002 92.76151 78.73002 92.76151 C
@c
78.85871 116.77153 m
78.45619 116.58387 78.13502 116.44469 78.02674 116.40586 C
77.08082 116.06230 74.79213 115.37915 73.91367 115.11354 C
72.33420 114.73030 61.28079 111.88318 61.28079 112.29364 C
61.28079 112.65222 66.76526 117.56353 68.07458 118.87257 C
71.85203 118.87654 75.63770 118.85499 79.41231 118.86831 C
80.48920 118.87200 81.45921 119.04888 81.45921 118.24186 C
81.45921 117.55219 79.38369 117.01672 78.85871 116.77153 C
@c
107.18816 94.95553 m
105.82526 91.79206 102.37635 89.76387 99.08816 89.31770 C
94.95751 88.99285 86.93943 89.65474 83.20961 90.79030 C
86.73392 90.90992 L
90.22535 91.06214 L
94.87729 95.64548 99.44107 100.06894 104.41361 104.40850 C
105.77764 101.73203 107.83020 98.40302 107.18816 94.95553 C
@c
117.07654 100.82494 m
116.65843 102.85569 115.52343 103.79735 115.04551 105.25776 C
116.44894 105.25776 119.22633 105.21496 120.62976 105.21496 C
119.62630 104.21093 117.81269 103.17345 117.07654 100.82494 C
@c
137.50980 103.89203 m
136.88192 102.00614 136.01537 100.93153 134.50989 99.62646 C
133.46589 98.72164 132.19994 97.96450 130.88069 97.49877 C
130.69644 97.43329 130.51106 97.37405 130.32482 97.32076 C
129.84491 97.18271 127.29005 96.60246 127.29005 97.59969 C
127.29005 99.32400 129.53197 100.87342 130.76731 101.66202 C
132.11802 102.52517 133.41118 103.55754 134.89852 104.18145 C
135.72283 104.52671 138.07587 105.59225 137.50980 103.89203 C
@c
146.58321 102.25843 m
146.77143 103.80274 146.66400 104.93150 146.58321 105.62060 C
147.69893 105.62060 148.37244 105.59027 149.09216 105.59027 C
148.73074 104.69792 147.62608 103.63238 146.58321 102.25843 C
@c
F

@rax %Note: Object
138.54756 93.43219 175.80274 121.25112 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
174.40384 110.45707 m
176.81329 107.04444 175.76929 101.74422 173.84145 98.49203 C
172.39606 96.40403 170.22359 94.51616 168.05565 93.43219 C
158.78013 93.43219 L
158.19364 96.56617 157.40277 100.78951 156.72217 104.42126 C
145.16164 93.43219 L
142.88457 93.43219 140.86346 93.43219 138.54756 93.47272 C
156.98296 110.82274 L
158.33225 110.82274 160.10022 110.82274 162.20580 110.82274 C
164.40605 97.72894 L
165.16857 96.88564 166.15219 98.15017 166.69502 98.69244 C
169.58580 101.26233 171.51307 104.75490 170.34860 108.89121 C
167.89918 115.31594 160.95260 118.12620 154.92954 119.69263 C
150.31191 120.81657 144.93231 120.77660 139.91329 120.45543 C
146.49704 121.90054 154.52844 121.25792 160.91235 119.49165 C
165.93194 117.72510 171.11169 115.15550 174.40384 110.45707 C
@c
F

@rax %Note: Object
60.33005 93.03647 93.50306 110.77257 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
75.27458 94.07169 m
75.27912 94.07310 75.28422 94.07509 75.28932 94.07622 C
76.21087 94.36479 77.10831 94.74435 77.98224 95.16302 C
78.23764 95.28576 78.49162 95.41077 78.74419 95.53833 C
79.09597 95.71493 79.44406 95.89975 79.78762 96.09222 C
80.13543 96.28753 80.52009 96.47688 80.83729 96.71981 C
84.11357 99.23613 87.46980 102.59121 87.15033 106.70428 C
86.79061 106.70428 L
85.19102 106.70428 83.30797 106.70428 82.27559 106.70428 C
82.26227 106.58154 82.22542 106.45654 82.20047 106.33550 C
81.99638 105.34280 81.76847 104.34841 81.36369 103.41496 C
80.97080 102.50759 80.41238 101.69150 79.75899 100.95222 C
79.12035 100.22995 78.41140 99.56324 77.66674 98.95068 C
76.96460 98.37354 76.21200 97.87124 75.38031 97.49962 C
74.89644 97.28277 74.39811 97.10164 73.89581 96.93269 C
73.04825 96.64753 72.17178 96.44655 71.28283 96.34734 C
70.46787 96.25606 69.57099 96.16819 68.77984 96.43238 C
67.25027 96.94318 66.53310 98.93991 67.26047 100.33228 C
68.60438 102.90501 71.35824 104.60920 73.92529 105.74646 C
78.67956 108.86088 85.18876 108.22139 90.98561 108.22139 C
91.62085 108.85663 92.70595 109.80397 93.50306 110.69773 C
88.45937 110.69773 80.85855 111.01720 78.51969 110.33830 C
77.03065 109.90630 75.56145 109.39209 74.08035 108.93118 C
72.54113 108.45241 70.98917 108.00085 69.47858 107.43477 C
68.02809 106.89165 66.65301 106.20454 65.36324 105.34535 C
64.04457 104.46690 62.69386 103.48214 61.70315 102.23178 C
60.51487 100.73197 59.74724 97.95260 60.89641 96.21921 C
61.57361 95.19761 62.71313 94.35146 63.83565 93.88318 C
65.87178 93.03335 68.17351 92.91118 70.34655 93.13398 C
72.00964 93.30378 73.67556 93.57335 75.27458 94.07169 C
@c
F

@rax %Note: Object
70.27654 86.00088 126.21742 110.69773 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
113.99641 108.00879 m
114.26627 108.08107 114.61465 108.09496 114.88592 108.09496 C
117.29169 108.09496 119.63906 108.09496 122.04567 108.09439 C
122.26195 108.09439 122.81017 108.09496 123.42331 108.09496 C
124.21502 108.83254 124.87691 109.52306 126.21742 110.69773 C
121.78772 110.69773 117.35773 110.69603 112.92775 110.69717 C
110.87943 110.69802 108.51619 109.95591 106.94268 108.61313 C
106.54044 108.26986 106.19121 107.85798 105.92504 107.40132 C
105.27761 106.29411 105.33572 105.06472 105.69061 103.87106 C
106.36753 101.58775 107.85146 99.60066 108.31493 97.24450 C
108.43540 96.63335 108.49833 95.98167 108.40025 95.36258 C
108.40025 95.36258 107.28170 88.30630 94.75115 88.30630 C
91.89836 88.30630 88.95883 88.56737 86.16161 89.12494 C
83.34454 89.68620 80.64765 90.66784 78.16847 92.12457 C
76.75767 92.95285 75.41235 93.89849 74.09679 94.86935 C
72.68967 95.90797 71.47474 97.18724 70.27654 98.45348 C
73.09587 92.67987 81.54907 89.29077 81.54907 89.29077 C
96.80910 83.02507 106.20709 87.63477 106.20709 87.63477 C
108.06435 88.39899 109.91594 89.45830 111.33156 90.89943 C
112.65024 92.24362 113.62734 93.93222 113.99386 95.78976 C
114.35953 97.63937 114.27732 99.75770 113.38441 101.44998 C
112.56066 103.01046 111.16942 105.06784 112.30243 106.83978 C
112.68340 107.43364 113.31609 107.82652 113.99641 108.00879 C
@c
F

@rax %Note: Object
117.67805 92.82586 150.24047 110.78249 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
150.24047 110.78249 m
149.27357 109.69058 148.68879 109.03011 147.84831 108.08220 C
144.34441 108.03515 143.14224 108.08220 138.21959 108.08220 C
137.60306 108.08220 132.78076 106.83184 130.51077 105.35329 C
128.36466 103.95553 126.07002 102.60539 125.00929 100.12422 C
123.45931 96.49814 128.26176 95.95191 130.50567 96.53159 C
133.01121 97.17846 135.92636 98.92290 137.30683 101.14724 C
138.22838 102.63118 138.76384 104.85581 138.76384 106.59742 C
143.95606 106.59742 L
143.95606 106.59742 144.54737 99.02891 133.12346 94.08217 C
126.79313 91.34192 117.67805 93.15014 117.67805 98.85033 C
117.67805 106.06819 134.88775 110.78249 138.18274 110.78249 C
142.83524 110.78249 145.61008 110.74252 150.24047 110.78249 C
@c
F

@rax %Note: Object
14.23701 90.50542 93.50759 124.80888 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
93.39506 122.12050 m
92.83351 123.60501 91.54942 123.88592 90.30586 124.60791 C
61.21843 124.80888 L
41.59928 106.71420 L
36.82488 105.34989 32.21121 103.62501 27.51676 102.06000 C
22.50170 99.65282 14.23701 97.56709 14.23701 90.50542 C
16.12261 94.59751 20.61609 95.56101 24.06643 97.44576 C
27.75742 98.89030 31.64910 100.45531 35.42060 101.09707 C
33.09364 98.60995 30.68674 96.60387 28.11883 94.19669 C
27.91814 93.59461 L
36.38324 93.59461 L
49.30243 105.34989 L
83.20479 113.05332 L
86.37392 113.93575 89.58359 114.85928 92.03102 117.46687 C
93.23461 118.70986 93.75619 120.47584 93.39506 122.12050 C
@c
80.84324 116.57650 m
80.38630 116.36986 79.91008 116.20233 79.44775 116.05436 C
77.39717 115.39786 75.30633 114.83887 73.22769 114.27987 C
69.24813 113.21065 65.22917 112.28230 61.20312 111.40384 C
60.07294 111.15723 58.94306 110.91061 57.81146 110.66939 C
57.24085 110.54778 56.67024 110.42731 56.09962 110.30683 C
55.74501 110.23228 54.73474 110.20450 54.47820 109.96413 C
54.48983 109.97518 66.43417 121.15786 66.43417 121.15786 C
66.43417 121.15786 81.36312 121.15786 81.43625 121.15786 C
82.78044 121.15786 83.81792 120.16998 83.29606 118.85357 C
82.85216 117.73417 81.89858 117.05244 80.84324 116.57650 C
@c
F

@rax %Note: Object
97.07329 108.23414 106.71222 110.73969 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
97.07329 108.23414 m
104.09528 108.23414 L
106.71222 110.73969 L
99.69024 110.73969 L
97.07329 108.23414 L
@c
F

@rax %Note: Object
81.45836 93.52942 102.24794 106.71052 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
102.24794 106.71052 m
95.22652 106.71052 L
81.45836 93.52942 L
88.48006 93.52942 L
102.24794 106.71052 L
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel11Dict 11.0 0
%%EOF
