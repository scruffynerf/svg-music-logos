%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 13.0.1%%For: (DhoSoneR) ()%%Title: (deathfromabove.eps)%%CreationDate: 9/28/09 2:21 PM%%BoundingBox: 58 -5 784 577%%HiResBoundingBox: 58.835 -4.80762 783.6553 576.7666%%DocumentProcessColors: Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 0.858823 0.85098 0.788235 1 ([Registro])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 421.5 296.7754 421.5 296.7754%AI3_TileBox: 114.9448 -98.3623 726.9453 693.6377%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 841.8898 595.2756%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -361 742.2754 1 1566 895 26 0 0 73 75 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Calcando) (Calco \(base\).aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Plugin Pincel de dispersi\227n de Adobe) (Herramienta Pincel d#15EEA5.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Plugin Pincel de dispersi\227n de Adobe) (Herramienta Pincel d#15EEA5.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Plugin Fusiones de Adobe) (Fusiones en directo.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Destello.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Plugin Pincel caligr\207fico de Adobe) (Herramienta Pincel c#15EE39.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Plugin Pincel de motivo de Adobe) (Herramienta Pincel de arte.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Plugin Pincel de motivo de Adobe) (Herramienta Pincel de arte.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Plugin Pincel de arte de Adobe) (Herramienta Pincel de arte.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Plugin Pincel de arte de Adobe) (Herramienta Pincel de arte.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (S\222mbolos de Adobe) (S\222mbolos.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Forma compuesta de Adobe) (Buscatrazos \(base\).aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Plugin de envolventes de Adobe) (Envolvente y Deformar.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Plugin Pintura interactiva de Adobe) (Pintura interactiva.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.858823 0.85098 0.788235 1 ([Registro]) 0 Xs([Registro])PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Capa 1) Ln0 Auu*u1 D0 O1 g0 J 0 j 1 w 4 M []0 d1 XR401.0454 533.646 m400.0137 535.3413 395.8721 533.9229 393.6128 534.3896 C392.853 539.5762 385.917 538.5864 380.9766 539.5923 C368.6279 552.9995 355.3867 558.5815 334.8931 564.8643 c324.7168 567.9829 313.9146 572.3447 305.1616 574.5264 c300.4204 575.708 293.5044 576.6553 289.5537 576.7559 c278.9932 577.0254 267.7539 572.04 256.106 571.5532 c246.5771 571.1548 236.8867 573.624 227.8613 573.04 c203.335 571.4502 179.0835 558.9521 162.4531 549.2549 c153.5972 544.0908 150.8975 538.4429 144.6143 532.1597 c142.0474 529.5928 138.7129 528.6392 136.438 526.2139 c129.8125 519.1479 126.3403 509.689 120.8301 502.4282 c117.6011 498.1753 111.1782 497.0337 110.4238 491.2798 C113.3438 490.3911 114.5254 495.0391 116.3696 492.7661 C107.0093 477.5981 94.2622 461.8545 88.8687 445.1963 C89.1704 445.9688 91.75 447.8052 91.0986 445.1963 C91.7031 430.7168 86.2163 422.3291 82.1787 412.4917 C86.9619 410.9385 84.4722 404.7676 83.666 400.5996 C84.9604 400.3867 87.6553 402.9731 87.3823 399.8564 C82.2363 378.6738 87.9956 353.9561 85.1523 329.2451 C87.7549 328.1987 87.4917 333.7476 88.8687 331.4746 C88.5215 321.9712 91.8237 310.9507 93.3281 303.9741 c94.147 300.1758 93.2471 295.5137 94.0713 291.3389 c95.749 282.834 100.3608 276.0654 94.8145 269.04 C96.064 253.0381 92.978 234.0322 94.8145 217.7539 c97.0459 197.9785 94.6543 173.9648 93.3281 159.0352 c92.7534 152.5654 88.6924 146.9717 88.8687 140.4531 C84.1138 140.0049 84.0947 134.8203 82.9219 130.79 C75.4155 123.4902 67.4648 126.7051 62.1104 119.6406 c52.0337 106.3467 67.9336 86.3936 73.2598 78.0176 c82.4795 63.5186 86.0137 58.0225 104.4775 62.4082 C122.1802 74.3818 141.9351 90.7471 155.7632 110.7217 c160.7534 117.9287 169.1226 137.6631 178.062 126.3301 C177.8687 121.7949 177.3149 118.2617 177.3188 113.6943 c177.355 64.2119 207.0435 33.2529 233.0645 5.91992 C244.6821 -1.16211 260.2578 -3.11133 276.1743 -4.4873 c281.1118 -4.91309 286.4824 -4.91504 291.04 -4.4873 c342.9478 0.391602 376.646 35.5088 406.2471 61.666 C410.4766 70.0723 415.0996 78.085 421.1138 84.707 C428.3906 74.0869 432.0361 65.9404 440.4385 57.2061 c450.4717 46.7754 460.293 38.7256 471.6563 30.4482 c483.4268 21.874 488.166 14.9238 503.6182 10.3789 c525.6035 3.91309 546.6016 4.04785 572.7422 5.91992 c601.8594 8.00488 629.791 14.4424 643.3525 30.4482 c646.9863 34.7363 647.2842 40.6914 649.2988 46.0566 c650.6475 49.6436 652.8945 52.3916 653.7598 55.7197 c656.9258 67.9229 651.8887 78.7324 653.0156 93.626 c654.2969 110.5596 656.2471 128.0752 659.7051 145.6563 C667.5508 146.4805 674.9033 147.8008 684.2334 147.1426 C700.6484 124.9072 731.957 117.5645 756.3311 103.2891 C779.7832 110.4355 788.7354 140.4941 780.8604 168.6973 C769.7471 174.293 756.6875 171.3135 749.6426 178.3594 c746.7354 181.2656 746.7949 187.0586 744.4385 192.4814 c743.0879 195.5908 741.0723 196.918 740.7217 199.1719 c739.3652 207.8896 742.5029 217.6865 737.749 226.6729 C741.4463 231.5498 739.6709 241.1475 738.4932 247.4854 C741.5605 252.4463 739.7295 257.4189 739.9795 263.8359 c740.1895 269.2441 742.0967 275.0557 742.208 280.1875 c742.2656 282.8193 740.8535 285.5957 740.7217 288.3652 c740.4961 293.1533 742.5723 297.813 742.208 301.7437 c741.8711 305.3926 740.0068 309.9287 739.2354 313.6362 c736.4268 327.1416 734.8271 339.1938 734.7754 354.5161 c734.75 362.6743 732.2129 371.2666 732.5469 379.7881 c732.6445 382.2925 734.1357 384.7695 734.0332 387.2207 c733.7578 393.73 729.1807 400.2617 727.3438 406.5459 c725.2871 413.5781 723.7158 421.457 722.8838 428.8438 c719.2227 461.3296 714.9463 485.4243 700.585 507.6318 c695.2939 515.8149 688.2363 520.5249 681.2607 526.2139 c660.5859 543.0747 633.2227 557.1992 610.6484 570.8101 C600.585 571.4287 590.2607 575.2002 580.1748 574.5264 c575.2373 574.1968 570.5205 571.3887 565.3096 570.8101 c558.8477 570.0928 551.7705 571.4893 545.2412 570.8101 c537.8506 570.042 530.1738 566.0806 522.1992 564.8643 c514.4961 563.689 506.374 564.8057 499.9004 563.3774 c493.25 561.9092 488.0039 556.0259 482.0615 553.7148 c477.8984 552.0942 472.707 552.4043 468.6826 550.7417 c463.4102 548.5615 459.0664 542.6626 453.8184 541.0786 c439.2051 536.6699 425.4805 530.7451 413.6812 523.9834 C408.6895 526.4248 403.167 528.3354 401.0454 533.646 Cf*U*u0 D0 g413.6812 523.9834 m425.4805 530.7451 439.2051 536.6699 453.8184 541.0786 c459.0664 542.6626 463.4102 548.5615 468.6826 550.7417 c472.707 552.4043 477.8984 552.0942 482.0615 553.7148 c488.0039 556.0259 493.25 561.9092 499.9004 563.3774 c506.374 564.8057 514.4961 563.689 522.1992 564.8643 c530.1738 566.0806 537.8506 570.042 545.2412 570.8101 c551.7705 571.4893 558.8477 570.0928 565.3096 570.8101 c570.5205 571.3887 575.2373 574.1968 580.1748 574.5264 c590.2607 575.2002 600.585 571.4287 610.6484 570.8101 C633.2227 557.1992 660.5859 543.0747 681.2607 526.2139 c688.2363 520.5249 695.2939 515.8149 700.585 507.6318 c714.9463 485.4243 719.2227 461.3296 722.8838 428.8438 c723.7158 421.457 725.2871 413.5781 727.3438 406.5459 c729.1807 400.2617 733.7578 393.73 734.0332 387.2207 c734.1357 384.7695 732.6445 382.2925 732.5469 379.7881 c732.2129 371.2666 734.75 362.6743 734.7754 354.5161 c734.8271 339.1938 736.4268 327.1416 739.2354 313.6362 c740.0068 309.9287 741.8711 305.3926 742.208 301.7437 c742.5723 297.813 740.4961 293.1533 740.7217 288.3652 c740.8535 285.5957 742.2656 282.8193 742.208 280.1875 c742.0967 275.0557 740.1895 269.2441 739.9795 263.8359 c739.7295 257.4189 741.5605 252.4463 738.4932 247.4854 C739.6709 241.1475 741.4463 231.5498 737.749 226.6729 C742.5029 217.6865 739.3652 207.8896 740.7217 199.1719 c741.0723 196.918 743.0879 195.5908 744.4385 192.4814 c746.7949 187.0586 746.7354 181.2656 749.6426 178.3594 c756.6875 171.3135 769.7471 174.293 780.8604 168.6973 C788.7354 140.4941 779.7832 110.4355 756.3311 103.2891 C731.957 117.5645 700.6484 124.9072 684.2334 147.1426 C674.9033 147.8008 667.5508 146.4805 659.7051 145.6563 C656.2471 128.0752 654.2969 110.5596 653.0156 93.626 c651.8887 78.7324 656.9258 67.9229 653.7598 55.7197 c652.8945 52.3916 650.6475 49.6436 649.2988 46.0566 c647.2842 40.6914 646.9863 34.7363 643.3525 30.4482 c629.791 14.4424 601.8594 8.00488 572.7422 5.91992 c546.6016 4.04785 525.6035 3.91309 503.6182 10.3789 c488.166 14.9238 483.4268 21.874 471.6563 30.4482 c460.293 38.7256 450.4717 46.7754 440.4385 57.2061 c432.0361 65.9404 428.3906 74.0869 421.1138 84.707 C415.0996 78.085 410.4766 70.0723 406.2471 61.666 C376.646 35.5088 342.9478 0.391602 291.04 -4.4873 c286.4824 -4.91504 281.1118 -4.91309 276.1743 -4.4873 c260.2578 -3.11133 244.6821 -1.16211 233.0645 5.91992 C207.0435 33.2529 177.355 64.2119 177.3188 113.6943 c177.3149 118.2617 177.8687 121.7949 178.062 126.3301 C169.1226 137.6631 160.7534 117.9287 155.7632 110.7217 c141.9351 90.7471 122.1802 74.3818 104.4775 62.4082 C86.0137 58.0225 82.4795 63.5186 73.2598 78.0176 c67.9336 86.3936 52.0337 106.3467 62.1104 119.6406 c67.4648 126.7051 75.4155 123.4902 82.9219 130.79 C84.0947 134.8203 84.1138 140.0049 88.8687 140.4531 C88.6924 146.9717 92.7534 152.5654 93.3281 159.0352 c94.6543 173.9648 97.0459 197.9785 94.8145 217.7539 c92.978 234.0322 96.064 253.0381 94.8145 269.04 C100.3608 276.0654 95.749 282.834 94.0713 291.3389 c93.2471 295.5137 94.147 300.1758 93.3281 303.9741 c91.8237 310.9507 88.5215 321.9712 88.8687 331.4746 C87.4917 333.7476 87.7549 328.1987 85.1523 329.2451 C87.9956 353.9561 82.2363 378.6738 87.3823 399.8564 C87.6553 402.9731 84.9604 400.3867 83.666 400.5996 C84.4722 404.7676 86.9619 410.9385 82.1787 412.4917 C86.2163 422.3291 91.7031 430.7168 91.0986 445.1963 C91.75 447.8052 89.1704 445.9688 88.8687 445.1963 C94.2622 461.8545 107.0093 477.5981 116.3696 492.7661 C114.5254 495.0391 113.3438 490.3911 110.4238 491.2798 C111.1782 497.0337 117.6011 498.1753 120.8301 502.4282 c126.3403 509.689 129.8125 519.1479 136.438 526.2139 c138.7129 528.6392 142.0474 529.5928 144.6143 532.1597 c150.8975 538.4429 153.5972 544.0908 162.4531 549.2549 c179.0835 558.9521 203.335 571.4502 227.8613 573.04 c236.8867 573.624 246.5771 571.1548 256.106 571.5532 c267.7539 572.04 278.9932 577.0254 289.5537 576.7559 c293.5044 576.6553 300.4204 575.708 305.1616 574.5264 c313.9146 572.3447 324.7168 567.9829 334.8931 564.8643 c355.3867 558.5815 368.6279 552.9995 380.9766 539.5923 C385.917 538.5864 392.853 539.5762 393.6128 534.3896 C395.8721 533.9229 400.0137 535.3413 401.0454 533.646 C403.167 528.3354 408.6895 526.4248 413.6812 523.9834 Cf1 D574.9707 467.4941 m576.6953 467.7314 577.8262 467.375 578.6875 466.751 C579.2139 469.7559 577.9756 470.9941 574.9707 470.4678 C574.9707 469.4766 574.9707 468.4854 574.9707 467.4941 Cf574.2285 457.0889 m578.7412 455.6553 581.9072 452.876 587.6074 452.6294 C587.873 456.3638 587.1504 459.1089 586.1201 461.5483 C582.7207 463.3516 578.2959 464.1294 574.2285 465.2646 C574.2285 462.5396 574.2285 459.814 574.2285 457.0889 Cf603.2158 454.8589 m597.8555 455.3145 593.4707 460.3149 589.0938 459.3184 C588.6748 455.9268 590.4102 454.6895 589.8379 451.1421 C603.9521 445.4365 620.1279 441.793 635.9199 437.7637 C626.6807 445.124 609.2754 444.3184 603.2158 454.8589 Cf568.2822 430.3306 m575.3672 431.9175 581.8926 434.0635 591.3242 433.3042 C591.6992 439.6245 588.8867 442.7583 589.0938 448.9121 C583.3682 450.6196 579.1035 453.7876 572.7422 454.8589 C570.8975 447.041 568.4922 439.7832 568.2822 430.3306 Cf232.3213 406.5459 m241.6533 404.4741 253.2251 400.6279 262.0518 403.5728 c266.0776 404.9155 272.6519 411.1323 277.6611 414.7222 c293.5884 426.1348 308.2598 441.0781 323.0005 450.3989 C322.9165 451.3062 322.7783 452.1592 321.5142 451.8862 C294.6685 433.8862 266.7998 416.9121 232.3213 406.5459 Cf595.041 432.5601 m604.9453 431.3271 618.293 434.7104 629.2305 433.3042 c631.9551 432.9531 637.6729 432.082 639.6367 431.0737 c648.4248 426.562 642.1006 417.9971 641.8662 411.0054 c641.6328 404.0581 644.8057 398.7324 641.8662 392.4233 c640.4307 389.3438 636.8213 388.1235 635.1777 385.7339 c631.6895 380.6675 631.6387 374.0835 626.2568 370.125 C626.2344 376.3608 625.9004 384.5728 617.3379 384.2476 C614.0098 390.5806 612.3145 398.5493 605.4463 401.3428 C594.583 396.8457 580.6406 395.4272 574.9707 385.7339 C581.8242 377.0859 599.7412 374.5879 612.8789 376.8145 C605.4209 366.9814 587.8447 367.3633 572.7422 370.125 C569.3232 326.3857 572.5186 286.1279 565.3096 247.4854 C569.876 242.3887 571.5742 234.4258 571.998 225.1855 C570.7295 221.7471 566.8682 220.9023 566.7959 216.2666 C569.875 213.3193 570.5859 210.6113 570.5117 205.8613 C573.2744 205.5771 572.4551 208.8721 575.7148 208.0908 C577.5586 204.7324 581.7715 203.7412 582.4053 199.1719 C585.3418 200.6934 586.2158 204.2803 589.0938 205.8613 C590.3682 205.9883 592.0166 201.6455 592.0664 205.1172 C602.5596 218.4443 602.9561 239.2256 605.4463 260.8633 C608.252 267.2402 617.4893 269.9727 624.7705 276.4727 c634.3369 285.0088 654.2529 302.1201 632.9473 309.1768 C627.2578 307.6802 622.79 304.9639 616.5957 303.9741 C616.9209 306.5288 616.3008 308.1392 615.8516 309.9199 C614.3125 310.3623 610.9688 309.001 610.6484 310.6631 C613.0938 324.229 608.5723 343.0552 619.5684 349.3135 C624.8027 346.6187 624.0117 337.9004 625.5146 331.4746 C627.9785 330.8042 628.7383 335.604 629.9746 333.7046 C630.877 329.269 629.2334 318.7793 633.6914 320.3252 C633.7471 329.0933 634.376 341.9717 639.6367 347.8271 C639.8926 337.9092 635.834 332.3052 636.6641 321.8125 C638.6895 319.3779 642.3203 318.5493 641.8662 313.6362 C644.042 313.4424 644.1494 315.3169 646.3262 315.1226 C646.415 312.9814 645.9199 310.2573 647.0693 309.1768 C653.0234 314.3755 655.8135 326.6909 662.6787 328.502 C658.2695 321.8179 645.8643 305.4136 658.2188 298.0273 C660.5449 299.665 661.4414 302.7334 665.6514 302.4868 C662.1934 298.2949 656.0205 293.0645 660.4482 285.3926 C665.375 286.6689 668.5313 293.6494 675.3145 290.5947 C673.418 287.0391 666.8037 288.2031 666.3945 283.1611 C669.1006 280.6943 672.3555 285.8828 674.5703 283.9043 C673.2959 280.4717 668.5928 280.4688 667.8809 276.4727 C669.1885 276.0439 672.248 277.3701 672.3418 275.7295 C670.9805 272.8779 668.0303 271.6162 668.625 266.8105 C673.9385 269.0645 677.4238 273.0107 682.7471 276.4727 c689 280.5391 694.9697 280.043 701.3291 282.418 c704.7979 283.7139 705.9092 286.8223 710.248 286.8779 c713.1455 286.917 715.2275 284.6035 717.6807 283.9043 c723.9258 282.1299 730.5674 281.7646 737.0059 279.4453 C734.7803 301.3179 701.8008 290.7051 686.4629 290.5947 C698.4707 298.165 723.8633 298.23 736.2617 292.0811 C736.9063 296.937 732.5713 296.813 731.0605 299.5137 C732.748 300.0552 736.8584 298.1748 736.2617 301 C736.8154 303.2881 734.2227 302.4292 734.7754 304.7173 C721.3203 304.7314 704.1826 308.0718 689.4375 305.4604 c686.9375 305.0176 685.0723 301.5996 682.0029 303.9741 C689.5879 309.2808 707.3818 312.4326 720.6533 310.6631 c726.0098 309.9487 731.6465 305.0908 734.7754 309.9199 C729.5361 326.3936 696.0215 319.5527 683.4893 316.6089 C687.1006 323.8555 698.5938 322.7163 707.2754 324.7856 c709.9512 325.4238 712.002 327.5679 714.707 327.7588 c721.3926 328.228 725.8867 323.4238 731.0605 324.0425 C731.4463 329.3833 728.4893 331.3833 728.0869 335.9341 C715.5283 339.4175 696.3799 343.4204 684.2334 336.6777 C692.7861 350.999 712.9082 342.6709 727.3438 341.8809 C725.1553 346.3828 720.5488 348.4653 719.167 353.7729 C707.6934 361.1699 687.0039 355.6934 675.3145 357.4893 C684.6191 365.3511 703.3193 362.8145 714.707 360.4629 C709.8594 362.4546 704.9873 372.6152 699.8428 375.3281 c683.2051 384.1025 664.2168 394.2305 678.2871 416.2085 C653.1143 430.1807 621.8223 438.0356 592.0664 447.4258 C591.0215 443.2354 593.7891 436.8867 595.041 432.5601 Cf565.3096 428.1006 m565.6953 429.2007 566.4092 429.9741 566.7959 431.0737 C565.79 431.3081 565.376 432.1323 563.8232 431.8169 C563.7129 429.9736 563.6836 428.2104 565.3096 428.1006 Cf568.2822 415.4653 m562.5527 407.5303 568.3779 397.8096 571.998 390.937 C581.7832 397.7515 593.9199 402.2148 608.4189 404.3159 C619.2207 411.002 610.3398 423.6357 597.2695 421.4116 C595.3447 418.7598 597.708 415.2583 598.0137 412.4917 C594.8516 413.79 595.292 418.6909 593.5527 421.4116 C582.7314 421.8271 575.373 418.7793 568.2822 415.4653 Cf687.9502 401.3428 m689.2734 403.4883 692.7324 403.4985 693.1523 406.5459 C693.0137 408.6362 691.8594 409.7124 689.4375 409.5186 C688.7168 406.8623 684.4697 403.7935 687.9502 401.3428 Cf131.2354 402.0864 m134.1182 394.0737 146.5024 385.6646 137.9243 375.3281 C128.2153 380.2939 111.4014 389.2295 101.5039 379.0449 C102.002 375.3311 106.3271 375.4434 108.937 373.8413 C108.8237 376.2056 107.252 377.1113 107.4507 379.7881 C109.8853 379.1528 110.9619 374.3633 113.3965 376.0713 C114.0127 378.0122 111.1489 380.1494 113.3965 381.2744 C115.3823 380.0391 115.5854 377.0215 118.5996 376.8145 C119.4697 377.9268 119.5234 379.8545 120.8301 380.5313 C132.5356 373.1602 150.8984 372.4458 147.5874 350.0566 C143.0088 345.4644 132.7905 342.5605 132.7217 335.9341 C140.2803 336.5815 164.3032 342.8853 169.1426 332.9614 C151.0957 335.1421 121.7896 337.7466 118.5996 320.3252 C133.4341 323.0459 154.9102 320.981 167.6558 317.3525 c181.4736 313.4189 196.8843 294.708 195.9009 282.418 C193.6758 292.582 187.019 298.313 181.0352 304.7173 C177.3975 304.7959 175.208 306.3223 174.3452 309.1768 C157.1689 318.5483 111.7681 328.127 108.1938 300.2568 C109.1284 298.1836 112.2041 304.0752 114.1396 301 C107.1611 298.3174 105.2837 290.5313 103.7344 282.418 C114.0625 283.0879 124.8984 283.9727 134.2085 282.418 c148.29 280.0684 167.395 272.8262 171.3721 262.3496 C154.3374 272.3848 131.7246 280.5898 105.9644 279.4453 C104.3188 276.8154 101.8511 272.9531 103.7344 269.04 C111.3652 269.5293 119.2036 269.9473 126.7759 269.04 c139.8154 267.4775 159.623 260.4941 164.6831 252.6865 C151.0625 253.874 138.0273 267.9189 126.7759 260.1211 C132.3047 257.9688 142.4497 260.4336 143.8711 254.1738 C141.8882 254.9141 137.2295 255.8848 137.1812 252.6865 C146.1738 248.5205 160.5728 245.8896 163.9395 238.5664 C152.5977 240.4854 139.374 248.0127 128.2622 245.2549 C134.4209 242.9893 142.1025 242.2471 146.8442 238.5664 C141.6045 236.751 136.3335 242.1455 134.2085 238.5664 C136.4692 232.8574 156.6357 234.7822 157.2495 227.416 C144.3091 232.2861 127.5234 232.6172 112.6533 231.876 C113.2188 235.2734 117.6074 234.8506 120.8301 235.5918 C118.1699 240.7295 107.5371 238.8906 101.5039 238.5664 C102.0625 232.3584 101.3711 230.9229 100.7607 225.1855 C111.7598 227.3184 127.4297 228.5078 137.9243 225.1855 C138.0908 222.9678 135.1807 222.6592 137.1812 220.7266 C144.792 218.0635 153.6348 217.4355 160.2236 215.5234 C155.1899 212.877 145.9277 214.458 138.668 214.0361 C139.7046 208.1357 152.5474 214.043 154.2769 208.835 C149.8379 207.0791 141.23 209.4941 137.9243 206.6045 C140.0894 198.4443 156.2427 203.4561 161.71 200.6582 C154.3472 195.7734 142.3311 198.2686 134.9517 194.7119 C137.5874 192.3926 142.3706 192.2197 144.6143 189.5088 C139.5479 187.6377 130.1558 190.0928 128.2622 185.0488 C130.3462 184.1602 133.3911 184.2324 136.438 184.3066 C137.9458 181.8496 139.6089 179.5479 140.1553 176.1299 C136.5327 175.7881 131.4487 176.9072 129.0054 175.3857 C131.5996 172.2832 137.0361 172.0205 137.9243 167.2109 C134.7593 164.9277 127.2471 170.6563 124.5459 166.4668 C133.8379 163.5879 145.1323 167.2656 149.8174 159.7773 C141.061 160.7285 127.5718 164.7266 120.0859 162.0078 C125.8525 158.6064 136.7974 160.3848 141.6416 156.0615 C129.1152 153.8027 114.7041 157.6221 100.7607 158.291 C99.2124 156.8662 97.6636 155.4414 97.0444 153.0889 C109.4731 156.3643 132.7412 155.8066 138.668 145.6563 C130.7271 146.1387 127.1582 150.9941 119.3428 151.6025 C117.104 148.8203 123.5259 149.7314 122.3164 145.6563 C113.0532 148.4346 99.6016 148.7598 94.0713 142.6816 C99.144 138.2871 113.8027 146.127 117.1128 138.2227 C106.7754 136.5713 91.6831 143.5 89.6118 133.0205 C90.6152 131.2979 95.2026 133.1592 95.5581 130.79 C86.2607 125.4697 75.6187 121.4932 67.314 115.1807 C74.998 109.1416 85.8994 116.7813 96.3013 114.4385 c100.3027 113.5371 102.7993 110.0654 106.7075 107.0049 c116.4907 99.3438 121.877 97.7939 121.5732 82.4766 C130.6768 89.4785 139.1533 97.1055 146.1011 106.2617 C145.6948 109.0781 144.3027 110.9063 144.6143 114.4385 C147.437 115.5791 150.3911 116.5889 153.5332 117.4111 C177.5874 145.7881 175.1602 204.0938 178.8052 250.458 C177.5767 253.458 173.1338 257.1523 174.3452 260.1211 C178.6392 259.7061 177.4912 253.8516 181.0352 252.6865 C182.936 254.9971 180.6201 261.5254 182.5215 263.8359 C185.7578 263.3574 184.5405 258.4229 187.7241 257.8906 C190.4741 264.5547 193.7354 270.709 195.1577 278.7031 C198.8154 278.6455 194.3569 270.4707 198.1304 270.5264 C201.5366 273.6855 198.356 279.4316 200.3604 283.1611 C204.7432 284.3252 200.4912 276.8516 204.0767 277.2148 C204.7568 284.3945 201.709 287.6191 205.563 291.3389 C207.7905 290.3457 205.6318 284.9648 208.5361 284.6484 C212.1245 299.9063 199.0039 307.4458 197.3872 317.3525 C205.6167 309.9736 211.5762 300.3242 213.7393 286.8779 C215.6318 293.1621 218.5088 298.4604 222.6582 302.4868 C223.6489 294.1846 227.4604 285.3291 225.6313 276.4727 c224.7822 272.3594 221.5127 270.6318 221.915 266.8105 c222.4316 261.8994 228.7505 261.3506 226.3745 256.4043 C217.1475 267.0889 208.583 272.3066 195.9009 263.0938 c189.9775 258.79 185.6396 249.7275 182.5215 245.2549 C190.4668 242.6396 199.874 228.5596 208.5361 228.9033 c212.3311 229.0527 214.8579 233.9736 218.1987 234.1045 c229.4746 234.5508 231.7573 218.9375 232.3213 205.8613 C224.7314 200.1836 219.021 210.2939 210.0225 212.5498 c199.0122 215.3125 189.3755 214.5557 178.8052 213.2939 C178.7441 206.9141 179.165 200.0498 178.062 194.7119 C193.1509 193.6973 203.8428 188.2852 211.5088 179.8457 C203.5811 176.3779 192.6411 175.9199 186.2378 170.9268 C194.7788 171.0449 196.2925 164.1338 200.3604 159.7773 C218.4961 161.3936 233.7163 153.8916 248.6729 158.291 c251.4868 159.1191 255.1323 163.7139 259.0791 165.7246 c266.5264 169.5186 276.564 173.4004 281.377 177.6172 c288.5361 183.8867 289.4756 195.2822 294.0132 205.8613 c298.2837 215.8193 303.519 221.6396 305.1616 231.876 C303.2588 231.9551 301.6187 232.2959 300.7021 233.3623 C302.6045 237.6543 306.4902 239.9629 308.1357 244.5117 C307.0483 246.1494 302.248 244.0752 302.189 246.7412 C303.2744 249.8682 306.0474 251.3066 306.6489 254.917 C302.7158 255.1338 301.1392 252.9941 296.9863 253.4307 C295.1987 255.1445 295.8521 255.8281 296.2427 258.6348 C293.1665 259.6777 290.501 256.5146 288.8105 258.6348 C289.8203 263.3223 294.2095 264.6299 294.0132 270.5264 C290.6514 272.9053 286.1328 267.4971 282.8638 269.7842 C283.9712 273.3828 287.5947 274.4668 287.3232 279.4453 C284.7681 279.7705 283.1577 279.1523 281.377 278.7031 C282 280.3086 283.3013 281.2373 282.8638 283.9043 C278.2061 284.3516 277.4902 280.8564 273.2017 280.9316 C273.978 284.6152 276.0483 287.0049 276.9175 290.5947 C273.4761 290.0938 271.0542 285.3711 267.998 286.8779 C268.623 288.7314 268.9712 290.8613 268.7412 293.5684 C266.1865 293.4893 263.4033 293.1836 262.7954 295.0547 C265.1597 299.8818 276.7422 299.4321 275.4312 305.4604 C271.9395 304.7061 266.9546 300.188 264.2817 303.2305 C279.7305 307.1206 288.709 321.3999 288.0674 338.9072 C285.0117 338.9609 281.3999 335.7021 279.1475 337.4209 C279.0454 341.9829 282.3652 343.1226 282.1206 347.8271 C276.603 347.0483 272.7417 340.9932 267.998 341.8809 C268.6309 343.9731 270.3994 344.9302 270.2285 347.8271 C262.6934 351.4209 258.5156 342.7178 254.6196 338.1641 C253.7407 339.02 251.9922 339.0054 250.1592 338.9072 C240.4404 327.6323 223.4385 337.1978 211.5088 340.3945 C210.1191 330.7632 215.6919 324.3477 215.9692 318.8389 C191.0015 330.54 190.5479 366.7544 167.6558 380.5313 C163.7891 389.6982 166.4482 400.2964 174.3452 403.5728 C159.542 410.0903 146.4058 404.583 131.2354 402.0864 Cf693.1523 402.0864 m695.4922 401.3408 697.8721 402.2441 700.585 400.5996 C699.7715 403.2539 697.6465 404.5981 695.3828 405.8027 C695.1533 404.0498 692.8018 404.4194 693.1523 402.0864 Cf703.5576 396.8838 m705.8926 396.5303 706.5957 397.8105 707.2754 399.1133 C706.4111 399.7373 705.2822 400.0933 703.5576 399.8564 C703.5576 398.8652 703.5576 397.874 703.5576 396.8838 Cf678.2871 393.9097 m683.459 386.1992 692.1904 382.0474 700.585 377.5586 C714.4199 391.0957 687.4453 407.708 678.2871 393.9097 Cf194.4136 384.9907 m194.2305 378.3657 196.8345 374.5278 201.1035 372.355 C214.6787 384.5107 245.3633 381.2461 257.5928 370.125 C258.8657 373.3115 262.2114 374.4253 262.7954 378.3018 C250.2002 390.5913 214.5024 391.4487 194.4136 384.9907 Cf709.5059 375.3281 m712.0898 377.3369 712.5664 385.4673 710.248 387.9639 C708.9492 384.8042 709.6943 379.5981 709.5059 375.3281 Cf205.563 355.2593 m215.4795 343.5005 248.5308 344.4819 256.8491 356.7461 C245.0269 374.3291 212.7197 379.4766 205.563 355.2593 Cf115.6265 367.8955 m113.0225 365.0356 112.5444 359.7847 113.3965 356.7461 c116.3823 346.1045 138.7554 350.0024 144.6143 356.0029 C144.9526 367.8159 124.1294 377.2334 115.6265 367.8955 cf107.4507 343.3677 m103.1772 333.5933 103.7178 313.3501 105.9644 305.4604 C113.1714 311.6099 113.7866 322.2827 119.3428 329.2451 c123.9028 334.958 131.2217 337.356 134.2085 344.854 C125.3247 347.4346 117.4116 343.936 107.4507 343.3677 Cf669.3682 258.6348 m673.082 259.1484 677.6074 262.7607 681.2607 260.8633 C680.0957 257.3203 674.2412 258.4678 673.8281 254.1738 C677.1943 253.3223 679.3652 257.5049 682.0029 254.917 C679.8418 249.1514 671.8076 249.2568 670.1113 243.0254 C675.4199 242.8604 680.376 247.7529 684.2334 244.5117 C682.75 240.792 677.8096 240.5283 676.0566 237.0781 C677.2354 235.5313 681.959 237.5303 681.2607 234.1045 C679.834 230.5771 674.5361 230.9189 673.084 227.416 C674.8506 226.0371 681.1514 229.0996 682.0029 225.1855 C678.9971 221.0098 673.3457 219.4746 667.8809 217.7539 C667.8809 215.7715 667.8809 213.79 667.8809 211.8076 C672.2646 211.1621 675.3672 215.6904 679.0303 213.2939 C676.4668 210.6553 672.957 208.96 671.5977 205.1172 C674.0957 201.9961 676.999 206.8994 679.0303 202.8887 C674.6885 199.9463 671.0195 190.1104 678.2871 187.2793 C676.0566 186.0078 677.4619 184.5742 677.543 182.0762 C685.8652 188.4307 696.4639 200.2402 708.0186 198.4277 C697.2676 192.084 684.4648 187.791 679.0303 176.1299 C682.1934 173.3477 682.8574 168.0645 686.4629 165.7246 C687.5371 167.127 688.123 169.0186 690.9238 168.6973 C690.3203 164.5332 689.2207 162.3945 690.1797 158.291 C696.7275 158.9287 696.7637 166.0771 703.5576 166.4668 C700.751 163.2178 699.7334 154.5859 700.585 150.1162 C704.415 149.5322 706.9102 154.1621 709.5059 152.3447 C708.123 149.2656 705.9502 146.9814 706.5322 141.9395 C712.1426 138.9785 717.2871 140.5859 724.3701 141.1953 C724.9512 139.3613 721.6709 136.0508 725.1143 135.9932 C728.5273 136.8008 729.6504 146.3125 731.8027 150.8584 C739.6055 157.125 744.0166 165.2607 754.8438 165.7246 c760.2461 165.9561 768.2695 160.2598 771.9395 165.7246 C757.4209 167.8057 743.5195 170.5029 741.4658 185.0488 C739.29 185.5996 737.8125 186.8477 736.2617 188.0225 C735.9111 190.3555 738.2627 189.9863 738.4932 191.7393 C734.5137 193.0234 734.2207 195.4717 734.0332 199.1719 C726.5859 199.6738 718.4531 196.9229 711.7344 199.1719 C716.876 203.9414 731.6045 199.123 736.2617 204.375 C738.3057 231.499 692.9141 219.0674 682.7471 214.0361 C692 224.6172 719.9717 227.2744 733.2891 220.7266 C730.0264 228.3887 736.8535 233.4521 734.0332 243.0254 C722.1387 252.2471 703.3057 246.5605 686.4629 245.2549 C696.748 256.9121 718.2129 254.2324 732.5469 248.2275 C735.666 251.4268 734.8408 256.6553 732.5469 260.1211 C736.0215 264.2275 734.6787 268.9492 735.5195 274.9854 C714.1191 290.3418 676.2139 275.8262 669.3682 258.6348 Cf103.7344 266.0664 m100.7251 263.2031 104.0303 258.4512 102.248 254.1738 C108.3589 254.9336 116.521 253.7119 124.5459 254.1738 C117.7056 258.2354 111.5654 262.9971 103.7344 266.0664 Cf627.7441 245.2549 m621.6016 239.5049 619.7188 229.4961 615.8516 221.4707 C619.6289 215.0889 629.752 215.0547 632.9473 208.0908 C647.9834 207.9209 649.8125 220.9561 653.7598 231.876 C660.667 234.8682 665.1377 242.2129 662.6787 250.458 C652.0537 252.7764 638.0947 247.9111 627.7441 245.2549 Cf99.2744 241.5391 m104.1216 241.1836 113.293 242.5674 118.5996 242.2813 C119.7622 246.665 112.2891 242.4131 112.6533 245.998 C114.5059 249.5957 122.8652 246.6875 125.2896 249.7139 C117.7773 251.5479 110.4287 250.0664 101.5039 251.2002 C101.458 248.04 100.6987 245.0273 99.2744 241.5391 Cf101.5039 222.957 m101.957 218.0439 100.2051 215.3369 100.7607 210.3213 C105.6943 209.8477 108.6128 211.3887 112.6533 211.8076 C112.2397 215.1104 106.8706 213.457 105.9644 216.2666 C108.2236 219.7061 113.4238 220.2031 117.1128 222.2129 C112.2607 223.2959 106.48 224.0205 101.5039 222.957 Cf100.7607 207.3477 m101.6104 198.8545 120.1582 199.374 123.8027 204.375 C116.0068 206.8994 111.437 208.3008 100.7607 207.3477 Cf332.6636 203.6309 m317.041 191.9023 298.4248 182.6992 283.6069 170.1846 c268.749 157.6348 252.6191 148.2832 236.0376 137.4795 C268.0254 135.2227 272.8267 160.1523 295.4995 167.2109 C291.875 146.4863 275.1992 128.8906 254.6196 121.8711 c248.7612 119.8721 226.4375 117.4043 225.6313 112.208 c225.2119 109.501 230.5107 105.1758 233.8076 104.0313 c240.5283 101.6992 249.2466 103.7031 254.6196 103.2891 c262.647 102.6709 269.6333 99.0635 277.6611 99.5723 C277.311 97.7646 278.1016 95.1943 277.6611 92.8838 c275.7402 82.8184 252.1582 66.6953 243.4702 67.6113 c238.8149 68.1016 233.1802 73.4854 229.3477 75.7881 c224.3149 78.8105 218.77 80.2656 215.9692 84.707 C222.4565 98.5576 209.7368 109.3604 207.793 121.8711 C200.3755 123.6738 190.3149 126.6191 183.2646 126.3301 C180.1904 97.4717 188.707 79.2617 195.9009 62.4082 c200.2402 52.2412 204.2227 48.5 210.0225 41.5977 c216.1694 34.2793 219.8291 28.4854 226.3745 22.2715 c229.8203 19.002 232.5771 14.834 235.2944 12.6084 c246.8599 3.13867 269.5156 0.797852 288.8105 2.20313 c308.9976 3.67285 321.7324 10.4268 335.6362 17.8115 c341.936 21.1582 349.3604 23.3945 354.9614 26.7305 c360.0454 29.7598 364.5586 35.2412 369.8271 39.3672 c384.8721 51.1484 402.1689 66.1855 409.9644 81.7344 C408.603 85.5762 405.8799 88.0547 404.0181 91.3975 C400.7139 92.2109 400.085 88.1152 398.0723 89.9102 C396.6069 95.4678 393.1455 97.8779 388.4092 96.5986 C385.6836 104.0313 380.2319 108.7393 374.2866 112.9521 C372.5181 111.9951 373.6631 108.125 371.314 107.748 C369.1763 121.2451 359.4067 131.6719 354.9614 144.168 c351.0059 155.292 351.606 167.7012 346.7861 179.8457 C346.2583 168.9121 351.002 163.251 350.502 152.3447 C343.7349 162.498 340.8228 176.7715 342.3257 193.2256 C337.0322 195.167 333.5483 185.2559 328.9473 186.5352 C330.5859 192.082 334.1748 195.6787 334.1499 202.8887 C333.9858 203.4678 333.5278 203.752 332.6636 203.6309 Cf102.248 195.4551 m106.1011 196.0625 110.3481 193.1836 113.3965 195.4551 C109.7524 197.0137 106.6528 199.1172 102.248 199.9141 C102.8511 197.3447 100.8599 196.7764 102.248 195.4551 Cf478.3457 173.1572 m475.1719 173.4502 474.6982 176.4463 471.6563 176.873 C471.4258 174.627 472.4814 171.0928 470.1689 170.9268 C466.8936 172.6064 465.8818 176.5488 461.9932 177.6172 C459.1904 173.2324 456.998 168.2412 453.8184 164.2383 C451.9258 154.1123 458.8203 145.0381 454.5605 137.4795 C451.3066 139.6758 453.3994 147.2197 449.3584 148.6289 C450.1055 137.2451 450.8555 121.4883 446.3857 111.4658 C443.5791 110.832 442.8955 113.9336 441.1816 112.208 C441.0215 108.1572 441.6934 103.2725 440.4385 100.3164 C437.6016 100.6758 435.6943 100.1045 434.4922 98.8291 C432.7471 93.1709 436.0645 89.9834 438.209 86.1934 C437.3486 84.3291 435.2471 83.7041 435.2363 80.9902 C448.791 59.1172 466.9922 41.8877 485.7783 25.2441 C525.5117 2.78711 617.2627 5.85449 641.8662 40.1104 C643.2754 48.2793 648.21 53.2246 649.2988 61.666 c650.4512 70.5859 647.1133 79.5615 647.0693 89.167 c647.0049 103.1182 651.9619 117.3369 650.7871 131.5342 C642.2715 131.1289 643.4131 121.0684 641.124 114.4385 C635.8975 109.0098 628.7568 105.498 624.0283 99.5723 C624.1328 96.7051 626.54 96.1377 626.2568 92.8838 C621.9326 79.126 613.9932 65.6182 600.2432 63.1523 c583.2695 60.1084 580.4297 70.1904 573.4844 77.2744 c569.2529 81.5918 561.7109 84.3018 563.0791 90.6533 C586.7793 92.2246 607.0215 97.2539 621.0557 108.4922 C624.4219 121.5869 616.0391 127.8516 607.6758 131.5342 C605.0576 130.1309 601.0898 128.3506 598.7559 130.79 C599.5518 133.2158 603.8672 132.1211 603.96 135.249 C599.1777 135.5713 596.7891 133.501 594.2969 131.5342 C591.6592 135.458 589.0137 131.7695 584.6338 131.5342 C581.375 130.751 582.1934 134.0469 579.4316 133.7627 C576.0615 131.9297 573.6309 129.1582 569.0254 128.5605 C566.2217 128.7285 567.0957 132.5762 564.5654 133.0205 C559.9824 124.2148 546.2471 136.0723 541.5244 131.5342 C533.2354 139.3486 525.4883 147.707 518.4824 156.8047 C513.9795 152.4736 514.4658 158.2383 508.8193 158.291 C509.2402 153.9902 513.1611 149.2725 511.0498 144.9121 C505.5264 154.501 499.4727 163.5625 496.9277 176.1299 C493.2881 176.7021 492.5967 180.2227 489.4951 181.332 C489.3926 179.9482 489.0049 178.8496 488.0088 178.3594 C487.9316 182.3525 484.7803 179.4053 482.0615 179.8457 C480.1045 185.3232 480.9004 193.5488 476.8594 196.9414 C476.1709 188.6514 483.04 180.5605 478.3457 173.1572 Cf103.7344 185.0488 m110.5107 184.4668 113.0313 188.1396 120.0859 187.2793 C117.6445 193.0137 105.9458 189.4902 102.248 193.9678 C102.3071 190.5596 104.396 189.1787 103.7344 185.0488 Cf100.7607 174.6436 m104.8608 175.0039 107.5098 176.8135 108.937 179.8457 C108.188 181.5742 106.3784 182.2422 103.7344 182.0762 C103.2393 179.1035 100.9473 177.9248 100.7607 174.6436 Cf100.7607 168.6973 m103.708 168.9717 107.8838 168.0156 109.6802 169.4404 C109.5669 173.0439 105.167 172.3604 101.5039 172.4131 C101.8086 170.623 100.1465 170.7979 100.7607 168.6973 Cf98.5308 162.0078 m101.6973 162.0625 103.73 163.251 107.4507 162.75 C107.8682 168.5664 97.5225 167.1104 98.5308 162.0078 Cf*U0 D1 g574.9707 470.4678 m577.9756 470.9941 579.2139 469.7559 578.6875 466.751 C577.8262 467.375 576.6953 467.7314 574.9707 467.4941 C574.9707 468.4854 574.9707 469.4766 574.9707 470.4678 Cf574.2285 465.2646 m578.2959 464.1294 582.7207 463.3516 586.1201 461.5483 C587.1504 459.1089 587.873 456.3638 587.6074 452.6294 C581.9072 452.876 578.7412 455.6553 574.2285 457.0889 C574.2285 459.814 574.2285 462.5396 574.2285 465.2646 Cf635.9199 437.7637 m620.1279 441.793 603.9521 445.4365 589.8379 451.1421 C590.4102 454.6895 588.6748 455.9268 589.0938 459.3184 C593.4707 460.3149 597.8555 455.3145 603.2158 454.8589 C609.2754 444.3184 626.6807 445.124 635.9199 437.7637 Cf572.7422 454.8589 m579.1035 453.7876 583.3682 450.6196 589.0938 448.9121 C588.8867 442.7583 591.6992 439.6245 591.3242 433.3042 C581.8926 434.0635 575.3672 431.9175 568.2822 430.3306 C568.4922 439.7832 570.8975 447.041 572.7422 454.8589 Cf321.5142 451.8862 m322.7783 452.1592 322.9165 451.3062 323.0005 450.3989 C308.2598 441.0781 293.5884 426.1348 277.6611 414.7222 c272.6519 411.1323 266.0776 404.9155 262.0518 403.5728 c253.2251 400.6279 241.6533 404.4741 232.3213 406.5459 C266.7998 416.9121 294.6685 433.8862 321.5142 451.8862 Cf*u592.0664 447.4258 m621.8223 438.0356 653.1143 430.1807 678.2871 416.2085 C664.2168 394.2305 683.2051 384.1025 699.8428 375.3281 c704.9873 372.6152 709.8594 362.4546 714.707 360.4629 C703.3193 362.8145 684.6191 365.3511 675.3145 357.4893 C687.0039 355.6934 707.6934 361.1699 719.167 353.7729 C720.5488 348.4653 725.1553 346.3828 727.3438 341.8809 C712.9082 342.6709 692.7861 350.999 684.2334 336.6777 C696.3799 343.4204 715.5283 339.4175 728.0869 335.9341 C728.4893 331.3833 731.4463 329.3833 731.0605 324.0425 C725.8867 323.4238 721.3926 328.228 714.707 327.7588 c712.002 327.5679 709.9512 325.4238 707.2754 324.7856 c698.5938 322.7163 687.1006 323.8555 683.4893 316.6089 C696.0215 319.5527 729.5361 326.3936 734.7754 309.9199 C731.6465 305.0908 726.0098 309.9487 720.6533 310.6631 c707.3818 312.4326 689.5879 309.2808 682.0029 303.9741 C685.0723 301.5996 686.9375 305.0176 689.4375 305.4604 c704.1826 308.0718 721.3203 304.7314 734.7754 304.7173 C734.2227 302.4292 736.8154 303.2881 736.2617 301 C736.8584 298.1748 732.748 300.0552 731.0605 299.5137 C732.5713 296.813 736.9063 296.937 736.2617 292.0811 C723.8633 298.23 698.4707 298.165 686.4629 290.5947 C701.8008 290.7051 734.7803 301.3179 737.0059 279.4453 C730.5674 281.7646 723.9258 282.1299 717.6807 283.9043 c715.2275 284.6035 713.1455 286.917 710.248 286.8779 c705.9092 286.8223 704.7979 283.7139 701.3291 282.418 c694.9697 280.043 689 280.5391 682.7471 276.4727 c677.4238 273.0107 673.9385 269.0645 668.625 266.8105 C668.0303 271.6162 670.9805 272.8779 672.3418 275.7295 C672.248 277.3701 669.1885 276.0439 667.8809 276.4727 C668.5928 280.4688 673.2959 280.4717 674.5703 283.9043 C672.3555 285.8828 669.1006 280.6943 666.3945 283.1611 C666.8037 288.2031 673.418 287.0391 675.3145 290.5947 C668.5313 293.6494 665.375 286.6689 660.4482 285.3926 C656.0205 293.0645 662.1934 298.2949 665.6514 302.4868 C661.4414 302.7334 660.5449 299.665 658.2188 298.0273 C645.8643 305.4136 658.2695 321.8179 662.6787 328.502 C655.8135 326.6909 653.0234 314.3755 647.0693 309.1768 C645.9199 310.2573 646.415 312.9814 646.3262 315.1226 C644.1494 315.3169 644.042 313.4424 641.8662 313.6362 C642.3203 318.5493 638.6895 319.3779 636.6641 321.8125 C635.834 332.3052 639.8926 337.9092 639.6367 347.8271 C634.376 341.9717 633.7471 329.0933 633.6914 320.3252 C629.2334 318.7793 630.877 329.269 629.9746 333.7046 C628.7383 335.604 627.9785 330.8042 625.5146 331.4746 C624.0117 337.9004 624.8027 346.6187 619.5684 349.3135 C608.5723 343.0552 613.0938 324.229 610.6484 310.6631 C610.9688 309.001 614.3125 310.3623 615.8516 309.9199 C616.3008 308.1392 616.9209 306.5288 616.5957 303.9741 C622.79 304.9639 627.2578 307.6802 632.9473 309.1768 C654.2529 302.1201 634.3369 285.0088 624.7705 276.4727 c617.4893 269.9727 608.252 267.2402 605.4463 260.8633 C602.9561 239.2256 602.5596 218.4443 592.0664 205.1172 C592.0166 201.6455 590.3682 205.9883 589.0938 205.8613 C586.2158 204.2803 585.3418 200.6934 582.4053 199.1719 C581.7715 203.7412 577.5586 204.7324 575.7148 208.0908 C572.4551 208.8721 573.2744 205.5771 570.5117 205.8613 C570.5859 210.6113 569.875 213.3193 566.7959 216.2666 C566.8682 220.9023 570.7295 221.7471 571.998 225.1855 C571.5742 234.4258 569.876 242.3887 565.3096 247.4854 C572.5186 286.1279 569.3232 326.3857 572.7422 370.125 C587.8447 367.3633 605.4209 366.9814 612.8789 376.8145 C599.7412 374.5879 581.8242 377.0859 574.9707 385.7339 C580.6406 395.4272 594.583 396.8457 605.4463 401.3428 C612.3145 398.5493 614.0098 390.5806 617.3379 384.2476 C625.9004 384.5728 626.2344 376.3608 626.2568 370.125 C631.6387 374.0835 631.6895 380.6675 635.1777 385.7339 c636.8213 388.1235 640.4307 389.3438 641.8662 392.4233 c644.8057 398.7324 641.6328 404.0581 641.8662 411.0054 c642.1006 417.9971 648.4248 426.562 639.6367 431.0737 c637.6729 432.082 631.9551 432.9531 629.2305 433.3042 c618.293 434.7104 604.9453 431.3271 595.041 432.5601 C593.7891 436.8867 591.0215 443.2354 592.0664 447.4258 Cf1 D665.6514 373.0981 m672.8848 371.6519 684.5332 371.9902 690.9238 373.8413 C683.5 376.335 671.0605 378.4551 665.6514 373.0981 Cf*U0 D563.8232 431.8169 m565.376 432.1323 565.79 431.3081 566.7959 431.0737 C566.4092 429.9741 565.6953 429.2007 565.3096 428.1006 C563.6836 428.2104 563.7129 429.9736 563.8232 431.8169 Cf593.5527 421.4116 m595.292 418.6909 594.8516 413.79 598.0137 412.4917 C597.708 415.2583 595.3447 418.7598 597.2695 421.4116 C610.3398 423.6357 619.2207 411.002 608.4189 404.3159 C593.9199 402.2148 581.7832 397.7515 571.998 390.937 C568.3779 397.8096 562.5527 407.5303 568.2822 415.4653 C575.373 418.7793 582.7314 421.8271 593.5527 421.4116 Cf689.4375 409.5186 m691.8594 409.7124 693.0137 408.6362 693.1523 406.5459 C692.7324 403.4985 689.2734 403.4883 687.9502 401.3428 C684.4697 403.7935 688.7168 406.8623 689.4375 409.5186 Cf695.3828 405.8027 m697.6465 404.5981 699.7715 403.2539 700.585 400.5996 C697.8721 402.2441 695.4922 401.3408 693.1523 402.0864 C692.8018 404.4194 695.1533 404.0498 695.3828 405.8027 Cf703.5576 399.8564 m705.2822 400.0933 706.4111 399.7373 707.2754 399.1133 C706.5957 397.8105 705.8926 396.5303 703.5576 396.8838 C703.5576 397.874 703.5576 398.8652 703.5576 399.8564 Cf700.585 377.5586 m692.1904 382.0474 683.459 386.1992 678.2871 393.9097 C687.4453 407.708 714.4199 391.0957 700.585 377.5586 Cf262.7954 378.3018 m262.2114 374.4253 258.8657 373.3115 257.5928 370.125 C245.3633 381.2461 214.6787 384.5107 201.1035 372.355 C196.8345 374.5278 194.2305 378.3657 194.4136 384.9907 C214.5024 391.4487 250.2002 390.5913 262.7954 378.3018 Cf710.248 387.9639 m712.5664 385.4673 712.0898 377.3369 709.5059 375.3281 C709.6943 379.5981 708.9492 384.8042 710.248 387.9639 Cf0 g690.9238 373.8413 m684.5332 371.9902 672.8848 371.6519 665.6514 373.0981 C671.0605 378.4551 683.5 376.335 690.9238 373.8413 Cf1 g256.8491 356.7461 m248.5308 344.4819 215.4795 343.5005 205.563 355.2593 C212.7197 379.4766 245.0269 374.3291 256.8491 356.7461 Cf144.6143 356.0029 m138.7554 350.0024 116.3823 346.1045 113.3965 356.7461 c112.5444 359.7847 113.0225 365.0356 115.6265 367.8955 c124.1294 377.2334 144.9526 367.8159 144.6143 356.0029 Cf0 g184.0083 348.5703 m176.8379 352.3018 164.2754 350.6406 157.9937 355.2593 C163.9229 361.167 181.5718 355.7773 184.0083 348.5703 Cf1 g134.2085 344.854 m131.2217 337.356 123.9028 334.958 119.3428 329.2451 c113.7866 322.2827 113.1714 311.6099 105.9644 305.4604 C103.7178 313.3501 103.1772 333.5933 107.4507 343.3677 C117.4116 343.936 125.3247 347.4346 134.2085 344.854 Cf0 g179.5488 330.7314 m178.7031 327.7178 175.0151 330.5908 173.6021 331.4746 C174.6655 334.707 178.2007 331.6812 179.5488 330.7314 Cf162.4531 326.272 m168.4863 326.8545 170.6719 323.5894 173.6021 321.0684 C170.0557 320.0166 164.8906 323.7422 162.4531 326.272 Cf167.6558 306.2036 m156.0718 307.0068 145.5 308.8228 135.6948 311.4063 C146.7695 312.8022 165.4375 314.5103 167.6558 306.2036 Cf187.7241 263.8359 m183.2949 269.3184 180.7002 276.6338 176.5757 282.418 C169.981 283.1426 167.6392 289.4092 162.4531 292.8242 c151.0469 300.3354 135.1563 299.519 117.856 301.7437 C117.5273 302.4048 117.2036 303.0732 116.3696 303.2305 C151.2979 307.6582 182.3501 291.4395 187.7241 263.8359 Cf*u1 g735.5195 274.9854 m734.6787 268.9492 736.0215 264.2275 732.5469 260.1211 C734.8408 256.6553 735.666 251.4268 732.5469 248.2275 C718.2129 254.2324 696.748 256.9121 686.4629 245.2549 C703.3057 246.5605 722.1387 252.2471 734.0332 243.0254 C736.8535 233.4521 730.0264 228.3887 733.2891 220.7266 C719.9717 227.2744 692 224.6172 682.7471 214.0361 C692.9141 219.0674 738.3057 231.499 736.2617 204.375 C731.6045 199.123 716.876 203.9414 711.7344 199.1719 C718.4531 196.9229 726.5859 199.6738 734.0332 199.1719 C734.2207 195.4717 734.5137 193.0234 738.4932 191.7393 C738.2627 189.9863 735.9111 190.3555 736.2617 188.0225 C737.8125 186.8477 739.29 185.5996 741.4658 185.0488 C743.5195 170.5029 757.4209 167.8057 771.9395 165.7246 C768.2695 160.2598 760.2461 165.9561 754.8438 165.7246 c744.0166 165.2607 739.6055 157.125 731.8027 150.8584 C729.6504 146.3125 728.5273 136.8008 725.1143 135.9932 C721.6709 136.0508 724.9512 139.3613 724.3701 141.1953 C717.2871 140.5859 712.1426 138.9785 706.5322 141.9395 C705.9502 146.9814 708.123 149.2656 709.5059 152.3447 C706.9102 154.1621 704.415 149.5322 700.585 150.1162 C699.7334 154.5859 700.751 163.2178 703.5576 166.4668 C696.7637 166.0771 696.7275 158.9287 690.1797 158.291 C689.2207 162.3945 690.3203 164.5332 690.9238 168.6973 C688.123 169.0186 687.5371 167.127 686.4629 165.7246 C682.8574 168.0645 682.1934 173.3477 679.0303 176.1299 C684.4648 187.791 697.2676 192.084 708.0186 198.4277 C696.4639 200.2402 685.8652 188.4307 677.543 182.0762 C677.4619 184.5742 676.0566 186.0078 678.2871 187.2793 C671.0195 190.1104 674.6885 199.9463 679.0303 202.8887 C676.999 206.8994 674.0957 201.9961 671.5977 205.1172 C672.957 208.96 676.4668 210.6553 679.0303 213.2939 C675.3672 215.6904 672.2646 211.1621 667.8809 211.8076 C667.8809 213.79 667.8809 215.7715 667.8809 217.7539 C673.3457 219.4746 678.9971 221.0098 682.0029 225.1855 C681.1514 229.0996 674.8506 226.0371 673.084 227.416 C674.5361 230.9189 679.834 230.5771 681.2607 234.1045 C681.959 237.5303 677.2354 235.5313 676.0566 237.0781 C677.8096 240.5283 682.75 240.792 684.2334 244.5117 C680.376 247.7529 675.4199 242.8604 670.1113 243.0254 C671.8076 249.2568 679.8418 249.1514 682.0029 254.917 C679.3652 257.5049 677.1943 253.3223 673.8281 254.1738 C674.2412 258.4678 680.0957 257.3203 681.2607 260.8633 C677.6074 262.7607 673.082 259.1484 669.3682 258.6348 C676.2139 275.8262 714.1191 290.3418 735.5195 274.9854 Cf1 D691.666 264.5791 m698.2852 259.9395 713.8574 264.3311 722.8838 264.5791 C715.8125 269.6719 699.8984 265.6221 691.666 264.5791 Cf682.7471 257.1475 m687.2871 257.5625 693.9922 255.8125 695.3828 259.377 C691.5303 261.0117 684.1523 260.375 682.7471 257.1475 Cf716.9375 256.4043 m718.458 254.9434 724.8271 253.4902 725.1143 257.1475 C723.873 258.3398 717.1465 258.708 716.9375 256.4043 Cf684.2334 237.8223 m689.0137 237.1504 696.8711 239.5576 698.3555 235.5918 C697.0068 230.498 687.1494 233.9141 685.7197 228.9033 C698.501 233.8135 718.9707 229.2207 731.8027 232.6182 C724.9434 235.4219 714.3721 234.5137 712.4785 242.2813 C702.8203 240.3174 688.7656 245.7852 684.2334 237.8223 Cf684.9756 222.2129 m690.3896 222.4971 694.2852 224.3018 697.6123 226.6729 C693.6406 227.7344 686.207 226.3232 684.9756 222.2129 Cf680.5166 202.1445 m693.0967 207.9004 708.8926 210.4375 723.626 214.0361 C708.2051 214.5586 685.2012 212.3613 680.5166 202.1445 Cf*U0 D0 g153.5332 265.3232 m144.8081 264.3926 136.4824 270.1455 128.2622 271.2686 c123.3184 271.9463 117.6699 269.8711 116.3696 274.9854 C116.8657 274.9854 117.3608 274.9854 117.856 274.9854 C130.2773 276.793 146.1387 271.8008 153.5332 265.3232 Cf722.8838 264.5791 m713.8574 264.3311 698.2852 259.9395 691.666 264.5791 C699.8984 265.6221 715.8125 269.6719 722.8838 264.5791 Cf1 g124.5459 254.1738 m116.521 253.7119 108.3589 254.9336 102.248 254.1738 C104.0303 258.4512 100.7251 263.2031 103.7344 266.0664 C111.5654 262.9971 117.7056 258.2354 124.5459 254.1738 Cf0 g695.3828 259.377 m693.9922 255.8125 687.2871 257.5625 682.7471 257.1475 C684.1523 260.375 691.5303 261.0117 695.3828 259.377 Cf725.1143 257.1475 m724.8271 253.4902 718.458 254.9434 716.9375 256.4043 C717.1465 258.708 723.873 258.3398 725.1143 257.1475 Cf150.5605 252.6865 m156.7808 252.2178 160.6211 249.3691 165.4263 247.4854 C161.8452 244.9863 152.8555 249.0381 150.5605 252.6865 Cf1 g662.6787 250.458 m665.1377 242.2129 660.667 234.8682 653.7598 231.876 C649.8125 220.9561 647.9834 207.9209 632.9473 208.0908 C629.752 215.0547 619.6289 215.0889 615.8516 221.4707 C619.7188 229.4961 621.6016 239.5049 627.7441 245.2549 C638.0947 247.9111 652.0537 252.7764 662.6787 250.458 Cf101.5039 251.2002 m110.4287 250.0664 117.7773 251.5479 125.2896 249.7139 C122.8652 246.6875 114.5059 249.5957 112.6533 245.998 C112.2891 242.4131 119.7622 246.665 118.5996 242.2813 C113.293 242.5674 104.1216 241.1836 99.2744 241.5391 C100.6987 245.0273 101.458 248.04 101.5039 251.2002 Cf0 g166.9126 251.2002 m170.9258 251.2734 176.0103 249.2119 174.3452 245.998 C171.7783 247.6426 166.8779 246.9541 166.9126 251.2002 Cf169.1426 241.5391 m171.561 243.667 175.9678 241.459 175.8315 238.5664 C171.7095 237.6631 171.3169 240.4922 169.1426 241.5391 Cf712.4785 242.2813 m714.3721 234.5137 724.9434 235.4219 731.8027 232.6182 C718.9707 229.2207 698.501 233.8135 685.7197 228.9033 C687.1494 233.9141 697.0068 230.498 698.3555 235.5918 C696.8711 239.5576 689.0137 237.1504 684.2334 237.8223 C688.7656 245.7852 702.8203 240.3174 712.4785 242.2813 Cf150.5605 237.0781 m158.542 236.8848 164.085 234.25 169.8857 231.876 C164.2661 231.4678 154.3696 233.2002 150.5605 237.0781 Cf697.6123 226.6729 m694.2852 224.3018 690.3896 222.4971 684.9756 222.2129 C686.207 226.3232 693.6406 227.7344 697.6123 226.6729 Cf1 g117.1128 222.2129 m113.4238 220.2031 108.2236 219.7061 105.9644 216.2666 C106.8706 213.457 112.2397 215.1104 112.6533 211.8076 C108.6128 211.3887 105.6943 209.8477 100.7607 210.3213 C100.2051 215.3369 101.957 218.0439 101.5039 222.957 C106.48 224.0205 112.2607 223.2959 117.1128 222.2129 Cf0 g723.626 214.0361 m708.8926 210.4375 693.0967 207.9004 680.5166 202.1445 C685.2012 212.3613 708.2051 214.5586 723.626 214.0361 Cf1 g123.8027 204.375 m120.1582 199.374 101.6104 198.8545 100.7607 207.3477 C111.437 208.3008 116.0068 206.8994 123.8027 204.375 Cf334.1499 202.8887 m334.1748 195.6787 330.5859 192.082 328.9473 186.5352 C333.5483 185.2559 337.0322 195.167 342.3257 193.2256 C340.8228 176.7715 343.7349 162.498 350.502 152.3447 C351.002 163.251 346.2583 168.9121 346.7861 179.8457 C351.606 167.7012 351.0059 155.292 354.9614 144.168 c359.4067 131.6719 369.1763 121.2451 371.314 107.748 C373.6631 108.125 372.5181 111.9951 374.2866 112.9521 C380.2319 108.7393 385.6836 104.0313 388.4092 96.5986 C393.1455 97.8779 396.6069 95.4678 398.0723 89.9102 C400.085 88.1152 400.7139 92.2109 404.0181 91.3975 C405.8799 88.0547 408.603 85.5762 409.9644 81.7344 C402.1689 66.1855 384.8721 51.1484 369.8271 39.3672 c364.5586 35.2412 360.0454 29.7598 354.9614 26.7305 c349.3604 23.3945 341.936 21.1582 335.6362 17.8115 c321.7324 10.4268 308.9976 3.67285 288.8105 2.20313 c269.5156 0.797852 246.8599 3.13867 235.2944 12.6084 c232.5771 14.834 229.8203 19.002 226.3745 22.2715 c219.8291 28.4854 216.1694 34.2793 210.0225 41.5977 c204.2227 48.5 200.2402 52.2412 195.9009 62.4082 c188.707 79.2617 180.1904 97.4717 183.2646 126.3301 C190.3149 126.6191 200.3755 123.6738 207.793 121.8711 C209.7368 109.3604 222.4565 98.5576 215.9692 84.707 C218.77 80.2656 224.3149 78.8105 229.3477 75.7881 c233.1802 73.4854 238.8149 68.1016 243.4702 67.6113 c252.1582 66.6953 275.7402 82.8184 277.6611 92.8838 c278.1016 95.1943 277.311 97.7646 277.6611 99.5723 C269.6333 99.0635 262.647 102.6709 254.6196 103.2891 c249.2466 103.7031 240.5283 101.6992 233.8076 104.0313 c230.5107 105.1758 225.2119 109.501 225.6313 112.208 c226.4375 117.4043 248.7612 119.8721 254.6196 121.8711 c275.1992 128.8906 291.875 146.4863 295.4995 167.2109 C272.8267 160.1523 268.0254 135.2227 236.0376 137.4795 C252.6191 148.2832 268.749 157.6348 283.6069 170.1846 c298.4248 182.6992 317.041 191.9023 332.6636 203.6309 C333.5278 203.752 333.9858 203.4678 334.1499 202.8887 Cf102.248 199.9141 m106.6528 199.1172 109.7524 197.0137 113.3965 195.4551 C110.3481 193.1836 106.1011 196.0625 102.248 195.4551 C100.8599 196.7764 102.8511 197.3447 102.248 199.9141 Cf476.8594 196.9414 m480.9004 193.5488 480.1045 185.3232 482.0615 179.8457 C484.7803 179.4053 487.9316 182.3525 488.0088 178.3594 C489.0049 178.8496 489.3926 179.9482 489.4951 181.332 C492.5967 180.2227 493.2881 176.7021 496.9277 176.1299 C499.4727 163.5625 505.5264 154.501 511.0498 144.9121 C513.1611 149.2725 509.2402 153.9902 508.8193 158.291 C514.4658 158.2383 513.9795 152.4736 518.4824 156.8047 C525.4883 147.707 533.2354 139.3486 541.5244 131.5342 C546.2471 136.0723 559.9824 124.2148 564.5654 133.0205 C567.0957 132.5762 566.2217 128.7285 569.0254 128.5605 C573.6309 129.1582 576.0615 131.9297 579.4316 133.7627 C582.1934 134.0469 581.375 130.751 584.6338 131.5342 C589.0137 131.7695 591.6592 135.458 594.2969 131.5342 C596.7891 133.501 599.1777 135.5713 603.96 135.249 C603.8672 132.1211 599.5518 133.2158 598.7559 130.79 C601.0898 128.3506 605.0576 130.1309 607.6758 131.5342 C616.0391 127.8516 624.4219 121.5869 621.0557 108.4922 C607.0215 97.2539 586.7793 92.2246 563.0791 90.6533 C561.7109 84.3018 569.2529 81.5918 573.4844 77.2744 c580.4297 70.1904 583.2695 60.1084 600.2432 63.1523 c613.9932 65.6182 621.9326 79.126 626.2568 92.8838 C626.54 96.1377 624.1328 96.7051 624.0283 99.5723 C628.7568 105.498 635.8975 109.0098 641.124 114.4385 C643.4131 121.0684 642.2715 131.1289 650.7871 131.5342 C651.9619 117.3369 647.0049 103.1182 647.0693 89.167 c647.1133 79.5615 650.4512 70.5859 649.2988 61.666 c648.21 53.2246 643.2754 48.2793 641.8662 40.1104 C617.2627 5.85449 525.5117 2.78711 485.7783 25.2441 C466.9922 41.8877 448.791 59.1172 435.2363 80.9902 C435.2471 83.7041 437.3486 84.3291 438.209 86.1934 C436.0645 89.9834 432.7471 93.1709 434.4922 98.8291 C435.6943 100.1045 437.6016 100.6758 440.4385 100.3164 C441.6934 103.2725 441.0215 108.1572 441.1816 112.208 C442.8955 113.9336 443.5791 110.832 446.3857 111.4658 C450.8555 121.4883 450.1055 137.2451 449.3584 148.6289 C453.3994 147.2197 451.3066 139.6758 454.5605 137.4795 C458.8203 145.0381 451.9258 154.1123 453.8184 164.2383 C456.998 168.2412 459.1904 173.2324 461.9932 177.6172 C465.8818 176.5488 466.8936 172.6064 470.1689 170.9268 C472.4814 171.0928 471.4258 174.627 471.6563 176.873 C474.6982 176.4463 475.1719 173.4502 478.3457 173.1572 C483.04 180.5605 476.1709 188.6514 476.8594 196.9414 Cf0 g164.6831 192.4814 m161.1792 191.8887 152.6792 192.2354 150.5605 195.4551 C154.585 195.8701 164.9604 198.583 164.6831 192.4814 Cf1 g102.248 193.9678 m105.9458 189.4902 117.6445 193.0137 120.0859 187.2793 C113.0313 188.1396 110.5107 184.4668 103.7344 185.0488 C104.396 189.1787 102.3071 190.5596 102.248 193.9678 Cf0 g160.9668 185.793 m158.1079 180.5957 149.9487 184.5273 143.8711 184.3066 C145.6006 188.3926 156.9443 186.4346 160.9668 185.793 Cf1 g103.7344 182.0762 m106.3784 182.2422 108.188 181.5742 108.937 179.8457 C107.5098 176.8135 104.8608 175.0039 100.7607 174.6436 C100.9473 177.9248 103.2393 179.1035 103.7344 182.0762 Cf101.5039 172.4131 m105.167 172.3604 109.5669 173.0439 109.6802 169.4404 C107.8838 168.0156 103.708 168.9717 100.7607 168.6973 C100.1465 170.7979 101.8086 170.623 101.5039 172.4131 Cf0 g161.71 164.2383 m154.4243 166.1191 146.8882 167.75 140.8984 170.9268 C146.9976 174.1807 163.0688 170.918 161.71 164.2383 Cf1 g107.4507 162.75 m103.73 163.251 101.6973 162.0625 98.5308 162.0078 C97.5225 167.1104 107.8682 168.5664 107.4507 162.75 Cf0 g149.8174 155.3174 m154.7031 153.7637 162.9629 155.5791 162.4531 148.6289 C158.0889 150.7051 151.3682 150.4277 149.8174 155.3174 Cf139.4116 144.168 m141.3857 144.1611 143.6567 144.4492 144.6143 143.4258 C145.5952 139.9678 142.1465 140.9385 143.1279 137.4795 C138.2427 136.7861 138.4854 140.9258 139.4116 144.168 Cf135.6948 137.4795 m139.1743 135.3008 134.5024 131.9316 136.438 127.8164 C132.5771 129.4063 130.396 132.6758 126.7759 134.5068 C129.1499 136.0957 134.8198 134.3906 135.6948 137.4795 Cf145.3579 136.7363 m148.2998 134.7227 152.0205 133.4893 152.0469 128.5605 C148.1001 129.5693 146.207 132.6299 145.3579 136.7363 Cf118.5996 130.79 m115.9502 127.0928 111.1592 132.2764 105.9644 130.79 C105.9644 131.5342 105.9644 132.2764 105.9644 133.0205 C110.2261 135.0645 116.3789 133.2021 118.5996 130.79 Cf142.3848 129.3037 m144.7402 131.3672 147.3022 127.3164 147.5874 124.8438 C144.6548 125.1309 144.167 127.8652 142.3848 129.3037 Cf137.1812 117.4111 m138.1724 117.4111 139.1636 117.4111 140.1553 117.4111 C141.3892 114.8379 142.1724 110.5186 138.668 109.2354 C138.1792 111.9678 137.2246 114.2324 137.1812 117.4111 Cf123.8027 114.4385 m129.0903 113.7969 131.6118 106.6992 129.0054 102.5449 C124.7285 103.9668 124.2876 109.2246 123.8027 114.4385 Cf*u1 g174.3452 403.5728 m166.4482 400.2964 163.7891 389.6982 167.6558 380.5313 C190.5479 366.7544 191.0015 330.54 215.9692 318.8389 C215.6919 324.3477 210.1191 330.7632 211.5088 340.3945 C223.4385 337.1978 240.4404 327.6323 250.1592 338.9072 C251.9922 339.0054 253.7407 339.02 254.6196 338.1641 C258.5156 342.7178 262.6934 351.4209 270.2285 347.8271 C270.3994 344.9302 268.6309 343.9731 267.998 341.8809 C272.7417 340.9932 276.603 347.0483 282.1206 347.8271 C282.3652 343.1226 279.0454 341.9829 279.1475 337.4209 C281.3999 335.7021 285.0117 338.9609 288.0674 338.9072 C288.709 321.3999 279.7305 307.1206 264.2817 303.2305 C266.9546 300.188 271.9395 304.7061 275.4312 305.4604 C276.7422 299.4321 265.1597 299.8818 262.7954 295.0547 C263.4033 293.1836 266.1865 293.4893 268.7412 293.5684 C268.9712 290.8613 268.623 288.7314 267.998 286.8779 C271.0542 285.3711 273.4761 290.0938 276.9175 290.5947 C276.0483 287.0049 273.978 284.6152 273.2017 280.9316 C277.4902 280.8564 278.2061 284.3516 282.8638 283.9043 C283.3013 281.2373 282 280.3086 281.377 278.7031 C283.1577 279.1523 284.7681 279.7705 287.3232 279.4453 C287.5947 274.4668 283.9712 273.3828 282.8638 269.7842 C286.1328 267.4971 290.6514 272.9053 294.0132 270.5264 C294.2095 264.6299 289.8203 263.3223 288.8105 258.6348 C290.501 256.5146 293.1665 259.6777 296.2427 258.6348 C295.8521 255.8281 295.1987 255.1445 296.9863 253.4307 C301.1392 252.9941 302.7158 255.1338 306.6489 254.917 C306.0474 251.3066 303.2744 249.8682 302.189 246.7412 C302.248 244.0752 307.0483 246.1494 308.1357 244.5117 C306.4902 239.9629 302.6045 237.6543 300.7021 233.3623 C301.6187 232.2959 303.2588 231.9551 305.1616 231.876 C303.519 221.6396 298.2837 215.8193 294.0132 205.8613 c289.4756 195.2822 288.5361 183.8867 281.377 177.6172 c276.564 173.4004 266.5264 169.5186 259.0791 165.7246 c255.1323 163.7139 251.4868 159.1191 248.6729 158.291 c233.7163 153.8916 218.4961 161.3936 200.3604 159.7773 C196.2925 164.1338 194.7788 171.0449 186.2378 170.9268 C192.6411 175.9199 203.5811 176.3779 211.5088 179.8457 C203.8428 188.2852 193.1509 193.6973 178.062 194.7119 C179.165 200.0498 178.7441 206.9141 178.8052 213.2939 C189.3755 214.5557 199.0122 215.3125 210.0225 212.5498 c219.021 210.2939 224.7314 200.1836 232.3213 205.8613 C231.7573 218.9375 229.4746 234.5508 218.1987 234.1045 c214.8579 233.9736 212.3311 229.0527 208.5361 228.9033 c199.874 228.5596 190.4668 242.6396 182.5215 245.2549 C185.6396 249.7275 189.9775 258.79 195.9009 263.0938 c208.583 272.3066 217.1475 267.0889 226.3745 256.4043 C228.7505 261.3506 222.4316 261.8994 221.915 266.8105 c221.5127 270.6318 224.7822 272.3594 225.6313 276.4727 c227.4604 285.3291 223.6489 294.1846 222.6582 302.4868 C218.5088 298.4604 215.6318 293.1621 213.7393 286.8779 C211.5762 300.3242 205.6167 309.9736 197.3872 317.3525 C199.0039 307.4458 212.1245 299.9063 208.5361 284.6484 C205.6318 284.9648 207.7905 290.3457 205.563 291.3389 C201.709 287.6191 204.7568 284.3945 204.0767 277.2148 C200.4912 276.8516 204.7432 284.3252 200.3604 283.1611 C198.356 279.4316 201.5366 273.6855 198.1304 270.5264 C194.3569 270.4707 198.8154 278.6455 195.1577 278.7031 C193.7354 270.709 190.4741 264.5547 187.7241 257.8906 C184.5405 258.4229 185.7578 263.3574 182.5215 263.8359 C180.6201 261.5254 182.936 254.9971 181.0352 252.6865 C177.4912 253.8516 178.6392 259.7061 174.3452 260.1211 C173.1338 257.1523 177.5767 253.458 178.8052 250.458 C175.1602 204.0938 177.5874 145.7881 153.5332 117.4111 C150.3911 116.5889 147.437 115.5791 144.6143 114.4385 C144.3027 110.9063 145.6948 109.0781 146.1011 106.2617 C139.1533 97.1055 130.6768 89.4785 121.5732 82.4766 C121.877 97.7939 116.4907 99.3438 106.7075 107.0049 c102.7993 110.0654 100.3027 113.5371 96.3013 114.4385 c85.8994 116.7813 74.998 109.1416 67.314 115.1807 C75.6187 121.4932 86.2607 125.4697 95.5581 130.79 C95.2026 133.1592 90.6152 131.2979 89.6118 133.0205 C91.6831 143.5 106.7754 136.5713 117.1128 138.2227 C113.8027 146.127 99.144 138.2871 94.0713 142.6816 C99.6016 148.7598 113.0532 148.4346 122.3164 145.6563 C123.5259 149.7314 117.104 148.8203 119.3428 151.6025 C127.1582 150.9941 130.7271 146.1387 138.668 145.6563 C132.7412 155.8066 109.4731 156.3643 97.0444 153.0889 C97.6636 155.4414 99.2124 156.8662 100.7607 158.291 C114.7041 157.6221 129.1152 153.8027 141.6416 156.0615 C136.7974 160.3848 125.8525 158.6064 120.0859 162.0078 C127.5718 164.7266 141.061 160.7285 149.8174 159.7773 C145.1323 167.2656 133.8379 163.5879 124.5459 166.4668 C127.2471 170.6563 134.7593 164.9277 137.9243 167.2109 C137.0361 172.0205 131.5996 172.2832 129.0054 175.3857 C131.4487 176.9072 136.5327 175.7881 140.1553 176.1299 C139.6089 179.5479 137.9458 181.8496 136.438 184.3066 C133.3911 184.2324 130.3462 184.1602 128.2622 185.0488 C130.1558 190.0928 139.5479 187.6377 144.6143 189.5088 C142.3706 192.2197 137.5874 192.3926 134.9517 194.7119 C142.3311 198.2686 154.3472 195.7734 161.71 200.6582 C156.2427 203.4561 140.0894 198.4443 137.9243 206.6045 C141.23 209.4941 149.8379 207.0791 154.2769 208.835 C152.5474 214.043 139.7046 208.1357 138.668 214.0361 C145.9277 214.458 155.1899 212.877 160.2236 215.5234 C153.6348 217.4355 144.792 218.0635 137.1812 220.7266 C135.1807 222.6592 138.0908 222.9678 137.9243 225.1855 C127.4297 228.5078 111.7598 227.3184 100.7607 225.1855 C101.3711 230.9229 102.0625 232.3584 101.5039 238.5664 C107.5371 238.8906 118.1699 240.7295 120.8301 235.5918 C117.6074 234.8506 113.2188 235.2734 112.6533 231.876 C127.5234 232.6172 144.3091 232.2861 157.2495 227.416 C156.6357 234.7822 136.4692 232.8574 134.2085 238.5664 C136.3335 242.1455 141.6045 236.751 146.8442 238.5664 C142.1025 242.2471 134.4209 242.9893 128.2622 245.2549 C139.374 248.0127 152.5977 240.4854 163.9395 238.5664 C160.5728 245.8896 146.1738 248.5205 137.1812 252.6865 C137.2295 255.8848 141.8882 254.9141 143.8711 254.1738 C142.4497 260.4336 132.3047 257.9688 126.7759 260.1211 C138.0273 267.9189 151.0625 253.874 164.6831 252.6865 C159.623 260.4941 139.8154 267.4775 126.7759 269.04 c119.2036 269.9473 111.3652 269.5293 103.7344 269.04 C101.8511 272.9531 104.3188 276.8154 105.9644 279.4453 C131.7246 280.5898 154.3374 272.3848 171.3721 262.3496 C167.395 272.8262 148.29 280.0684 134.2085 282.418 c124.8984 283.9727 114.0625 283.0879 103.7344 282.418 C105.2837 290.5313 107.1611 298.3174 114.1396 301 C112.2041 304.0752 109.1284 298.1836 108.1938 300.2568 C111.7681 328.127 157.1689 318.5483 174.3452 309.1768 C175.208 306.3223 177.3975 304.7959 181.0352 304.7173 C187.019 298.313 193.6758 292.582 195.9009 282.418 C196.8843 294.708 181.4736 313.4189 167.6558 317.3525 c154.9102 320.981 133.4341 323.0459 118.5996 320.3252 C121.7896 337.7466 151.0957 335.1421 169.1426 332.9614 C164.3032 342.8853 140.2803 336.5815 132.7217 335.9341 C132.7905 342.5605 143.0088 345.4644 147.5874 350.0566 C150.8984 372.4458 132.5356 373.1602 120.8301 380.5313 C119.5234 379.8545 119.4697 377.9268 118.5996 376.8145 C115.5854 377.0215 115.3823 380.0391 113.3965 381.2744 C111.1489 380.1494 114.0127 378.0122 113.3965 376.0713 C110.9619 374.3633 109.8853 379.1528 107.4507 379.7881 C107.252 377.1113 108.8237 376.2056 108.937 373.8413 C106.3271 375.4434 102.002 375.3311 101.5039 379.0449 C111.4014 389.2295 128.2153 380.2939 137.9243 375.3281 C146.5024 385.6646 134.1182 394.0737 131.2354 402.0864 C146.4058 404.583 159.542 410.0903 174.3452 403.5728 Cf1 D157.9937 355.2593 m164.2754 350.6406 176.8379 352.3018 184.0083 348.5703 C181.5718 355.7773 163.9229 361.167 157.9937 355.2593 Cf173.6021 331.4746 m175.0151 330.5908 178.7031 327.7178 179.5488 330.7314 C178.2007 331.6812 174.6655 334.707 173.6021 331.4746 Cf173.6021 321.0684 m170.6719 323.5894 168.4863 326.8545 162.4531 326.272 C164.8906 323.7422 170.0557 320.0166 173.6021 321.0684 Cf135.6948 311.4063 m145.5 308.8228 156.0718 307.0068 167.6558 306.2036 C165.4375 314.5103 146.7695 312.8022 135.6948 311.4063 Cf116.3696 303.2305 m117.2036 303.0732 117.5273 302.4048 117.856 301.7437 C135.1563 299.519 151.0469 300.3354 162.4531 292.8242 c167.6392 289.4092 169.981 283.1426 176.5757 282.418 C180.7002 276.6338 183.2949 269.3184 187.7241 263.8359 C182.3501 291.4395 151.2979 307.6582 116.3696 303.2305 Cf117.856 274.9854 m117.3608 274.9854 116.8657 274.9854 116.3696 274.9854 C117.6699 269.8711 123.3184 271.9463 128.2622 271.2686 c136.4824 270.1455 144.8081 264.3926 153.5332 265.3232 C146.1387 271.8008 130.2773 276.793 117.856 274.9854 Cf165.4263 247.4854 m160.6211 249.3691 156.7808 252.2178 150.5605 252.6865 C152.8555 249.0381 161.8452 244.9863 165.4263 247.4854 Cf174.3452 245.998 m176.0103 249.2119 170.9258 251.2734 166.9126 251.2002 C166.8779 246.9541 171.7783 247.6426 174.3452 245.998 Cf175.8315 238.5664 m175.9678 241.459 171.561 243.667 169.1426 241.5391 C171.3169 240.4922 171.7095 237.6631 175.8315 238.5664 Cf169.8857 231.876 m164.085 234.25 158.542 236.8848 150.5605 237.0781 C154.3696 233.2002 164.2661 231.4678 169.8857 231.876 Cf150.5605 195.4551 m152.6792 192.2354 161.1792 191.8887 164.6831 192.4814 C164.9604 198.583 154.585 195.8701 150.5605 195.4551 Cf143.8711 184.3066 m149.9487 184.5273 158.1079 180.5957 160.9668 185.793 C156.9443 186.4346 145.6006 188.3926 143.8711 184.3066 Cf140.8984 170.9268 m146.8882 167.75 154.4243 166.1191 161.71 164.2383 C163.0688 170.918 146.9976 174.1807 140.8984 170.9268 Cf162.4531 148.6289 m162.9629 155.5791 154.7031 153.7637 149.8174 155.3174 C151.3682 150.4277 158.0889 150.7051 162.4531 148.6289 Cf143.1279 137.4795 m142.1465 140.9385 145.5952 139.9678 144.6143 143.4258 C143.6567 144.4492 141.3857 144.1611 139.4116 144.168 C138.4854 140.9258 138.2427 136.7861 143.1279 137.4795 Cf126.7759 134.5068 m130.396 132.6758 132.5771 129.4063 136.438 127.8164 C134.5024 131.9316 139.1743 135.3008 135.6948 137.4795 C134.8198 134.3906 129.1499 136.0957 126.7759 134.5068 Cf152.0469 128.5605 m152.0205 133.4893 148.2998 134.7227 145.3579 136.7363 C146.207 132.6299 148.1001 129.5693 152.0469 128.5605 Cf105.9644 133.0205 m105.9644 132.2764 105.9644 131.5342 105.9644 130.79 C111.1592 132.2764 115.9502 127.0928 118.5996 130.79 C116.3789 133.2021 110.2261 135.0645 105.9644 133.0205 Cf147.5874 124.8438 m147.3022 127.3164 144.7402 131.3672 142.3848 129.3037 C144.167 127.8652 144.6548 125.1309 147.5874 124.8438 Cf138.668 109.2354 m142.1724 110.5186 141.3892 114.8379 140.1553 117.4111 C139.1636 117.4111 138.1724 117.4111 137.1812 117.4111 C137.2246 114.2324 138.1792 111.9678 138.668 109.2354 Cf129.0054 102.5449 m131.6118 106.6992 129.0903 113.7969 123.8027 114.4385 C124.2876 109.2246 124.7285 103.9668 129.0054 102.5449 Cf*UUULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF