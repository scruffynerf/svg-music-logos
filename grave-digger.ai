%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 9.0
%%For: (Peter  Bielous) (voa)
%%Title: (grave digger.ai)
%%CreationDate: 7/23/2002 10:58 PM
%%BoundingBox: 72 638 518 711
%%HiResBoundingBox: 72.0381 638.2715 517.7031 710.04
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 297.5 420.5 297.5 420.5
%AI3_TileBox: 18 18 570 746
%AI3_DocumentPreview: None
%AI5_ArtSize: 595 842
%AI5_RulerUnits: 4
%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -443 873 0.6667 778 491 26 1 1 11 68 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:18 18
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI7_Thumbnail: 128 24 8
%%BeginData: 4674 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD04FF52F8F8F827A87DA8FFA87D27FD35FF7D522752277D7DFD07
%FFA85227A8FD2BFFA8F8F852FFFFA8F852FF7DF8F8FD34FF7DFD09F87DFD
%05FF27F8F827FD2AFFA827F827FFFF7D27A82752F8F8F827FD17FFA87D52
%A8FD17FF7DFD0BF852FD04FF52F8F8A8FD29FFA8F8F8F827FF7DF8F8A8A8
%7DFD04F87DFD15FFA82727FD18FFA8FD0DF827FD04FF277DFD2AFF7DF8F8
%F852FF27F8F852FFFF52F8F8F8FD04FF7DF8FFFFFF27A8FD05FFA8F87DFF
%FFFF7DF8F8F852FFFF5227A8FD05FFA87DF8A8FD08FF27F8277DA8A8527D
%7D52FD05F87DFFFFFF2752FD07FF5252FD09FF527DFD08FFA827FD05FF27
%A8FFFF7DA8FF27F8F8F827FFFD04F87DFFF8F8F8A8FFFFFF7DF8F8F8FF27
%F8F8FFFFFFA852F8F8F852A8FF52FD04F87DF8F8F827FFFFFFA852F8F8F8
%27FD08FF2727FFFFFFA827F87DFFFF7D27F8F8F8FFA827F8F827FD04FFA8
%27F8F8277DFD05FF7D27F8F827FD05FF5227F8F827FFFFA8F8F8F8FF7DF8
%F8FFFD04F87DFFFD04F8272727F8F8F87DFF5227FD07F852FF27F82752FD
%04F827FF27F8F8F852A8F8F8F8A8FFA8F8F827F8F8F87DFD07FF27FD04FF
%52F8F8F827A8FFFF52F8F8A827F8F8F8277DFFA852F827FD04F8277DFFA8
%27FD06F827A8FFF8F827F8F8F8A87DFD04F827F8F8F827FD04F852FFFD05
%F87DA8FD04F8FFA8FFF8F8F85227F8F85252F8F827FF27F8F8F8FFFFFFF8
%F8F8FFFFF8F8F87DFF27F8F8A8F8F8F827FD07FF5252FFFFFFFD06F8A8FF
%FF52F8A8FFF8F8F852FFFF27F8F87D7DF8F8F852A8A8F8F8F8A827F8F8F8
%52FF27F8F87DF8F8F8277DFFF8F8F82727F8F827FD04F87DFFA8FD04F827
%FFFD04F87DFFFFF8F8F852A8F852FF7DF8F827FF27F8F87DFFFFFFF8F8F8
%FFFFF8F8F8A8FFF8F8F8A8A8F8277DFD08FF52527D527DFD05F8A8FFFFA8
%F8A8FFF8F8F87DFFFFF8F8F8A8FFF8F8F8A8FFA8F8F8F8FFA8F8F8F8FFFF
%F8F8F8A87DF8F852FFFF52F8F827FFF827FFFD04F8527DFF52FD04F8FFFD
%04F87DFFFFF8F8F87DFF7DFFFF52F8F827FF27F8F852FFFFFFF8F8F8FFFF
%F8F8F87DFFF8F8F87D2752A8FD0AFFA87DFFFF7DFD04F8A8FFFFFF27FFFF
%F8F8F852FFFFF8F8F87DFFF8F8F8A8FFA8F8F8F8FF7DF8F8F8FFFFF8F8F8
%A85227A8FFFFFF27F8F827FF7DA8FF52F8F8F87D52FFA8FD04F8FFFD04F8
%7DFFFFF8F8F852FD04FF7DF8F827FF27F8F87DFFFFFFF8F8F8FFFFF8F8F8
%A8FFF8F8F827A8FD12FF52F87DFD04FF52FFFFF8F8F87DFFFFF8F8F8A8FF
%F8F8F87DFFA8F8F8F8FFA8F8F8F8FFFFFD04F87DFD05FF27F8F827FD04FF
%7DF8F8F827A827FFF8F8F87DFFFD04F8FFFFFFF8F8F87DFD04FF52F8F827
%FF27F8F852FFFFFFF8F8F8FF7DF8F8F8A8FFF8F8F827A8FD0CFF7DFD04F8
%275227FD04FFA852FFFFF8F8F852FFFFF8F8F87DFFF8F8F8A8FFA8F8F8F8
%FF7DF8F8F8FFFFF8F8F827FD06FF27F8F827FD05FF52F8F827FF7D2727F8
%7DFFA8F8F8F87DFFFF52F8F8F852FF7D7DFF7DF8F827FF27F8F852FFFF27
%F8F8F8277DF8F8F8FFFF52F8F8F852FFFF52FD08FFA8FD07F8277DFFFFFF
%27FFFFFFF8F8F87DFFFFF8F8F8A8FFF8F8F8A8FFA8F8F8F8FFA8F8F8F8FF
%FF27F8F8F87DFFFF7DFF7D27F8F827FFA87DFFFFFF27F8F852FFA87DA8FF
%FF52F8F852FFFFA852FD05F87DFFFF7DF8F8272727F8F8F827A8A827FD06
%F8A8FFFF7DFD06F87DFD08FF277D27FD08F827F87DFFFFFF27F8F8F827A8
%F8F8F82727F8F8F8A8FFA8F8F8F852FD04F8FFFF7DFD04F827F87DA827F8
%F8F8272727A8FD04FF7D27F852A8FFFFA852F8277DFD05FFA8F8F8F8A8FD
%04FFF8F8F8A8A8F8F827FD04FF52F8F87DA8FD05FF7DF8F8F827FD09FFA8
%7DFFFFA827FD07F87DFD04FF7DF8F827A8FF52F8F852FF27F8F852FFA827
%F8F852FFF8F8F8A8FFFF52FD04F8A8FFFFFFA8F8F8F87DFD08FFA8527D52
%7D527DA8FD09FF27A8FD05FFA827FFFFFF7D52FD06FF7D7DFD08FF7D5252
%FD10FF7D2727F82752FD07FF2752FD04FF2752FFFF52F8F8F8A8FFA8277D
%FFFF52F8F8F8FFFFFF7D2727FD07FF277DFD63FFF8F8F87DFFFFA8FFFFFF
%A827F8F8A8FD6BFFA8F8F8A8FFFF7DF8F87DFF7DF827FFFFFF52F8F8A8FD
%6BFFF8F8F852FFFF52F8F8FFA8F8F8F852FFFF52F827FD6CFF52F8277D7D
%522727FFFFFF27F8F8FF7D7DF87DA8FD6DFFA82752277DA8FD05FF525227
%5252FDFCFFFD99FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
6 Bn
%AI5_BeginGradient: (Black, White Radial)
(Black, White Radial) 1 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 0 1 50 0 %_BS
%_0 0 0 0 1 50 0 Bs
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Emerald Eye)
(Emerald Eye) 1 3 Bd
[
<
E4E4E4E4E5E5E5E5E5E5E5E5E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8
E8E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
ECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEF
EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
>
<
7675737271706E6D6C6B6A68676665646361605F5E5D5C5B5A595857565554535251504F4E4D4C4B
4A4948474646454443424141403F3E3D3C3C3B3A39393837363635343433323131302F2F2E2E2D2C
2C2B2A2A292928282726262525242423232222212120201F1F1E1E1D1D1C1C1B1B1B1A1A19191818
181717171616151515141414131313121212111111101010100F0F0F0E0E0E0E0D0D0D0D0C0C0C0C
0B0B0B0B0B0A0A0A0A0A090909090908080808080807070707070706060606060606050505050505
05050404040404040404040403030303030303030303030302020202020202020202020202020202
01010101010101010101010101010101010101010101010101010101010000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000
>
<
F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F9F9
F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFB
FBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
9896959391908E8D8B8A8886858382807F7E7C7B79787675747271706E6D6C6A6968676564636261
5F5E5D5C5B5A5957565554535251504F4E4D4C4B4A49484746454443424241403F3E3D3C3C3B3A39
3837373635343433323131302F2F2E2D2D2C2B2B2A2929282727262625242423232222212120201F
1F1E1E1D1D1C1C1B1B1A1A1919181818171716161615151414141313131212121111111010100F0F
0F0F0E0E0E0D0D0D0D0C0C0C0C0B0B0B0B0A0A0A0A0A090909090908080808080707070707070606
06060606050505050505050504040404040404040403030303030303030303030202020202020202
02020202020202020101010101010101010101010101010101010101010101010101010000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000
>
1 %_Br
<
F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEDEDEDEDECECECECEBEBEBEAEAEAEAE9E9E9E8E8E8E7E7E6E6
E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DFDFDFDEDEDDDDDCDCDBDBDBDADAD9D9D8D8D7D7D6D6D5D5
D4D4D3D3D2D2D1D1D0D0CFCFCECECDCDCCCCCBCBCACAC9C8C8C7C7C6C6C5C5C4C3C3C2C2C1C1C0BF
BFBEBEBDBCBCBBBBBAB9B9B8B8B7B6B6B5B5B4B3B3B2B1B1B0B0AFAEAEADACACABAAAAA9A8A8A7A6
A6A5A4A4A3A2A2A1A0A09F9E9E9D9C9C9B9A9A99989797969595949393929190908F8E8E8D8C8B8B
8A89888887868685848383828180807F7E7D7D7C7B7A7A797877767675747373727170706F6E6D6C
6C6B6A696868676665646463626160605F5E5D5C5C5B5A5958575756555453535251504F4E4E4D4C
4B4A4948484746454443434241403F3E3D3C3C3B3A39383736363534333231302F2F2E2D2C2B2A29
282727262524232221201F1E1E1D1C1B1A19181716151414131211100F0E0D0C0B0A090807070605
0403020100
>
0
<
FFFFFFFFFFFEFEFEFEFEFDFDFDFDFDFCFCFCFCFBFBFBFAFAFAF9F9F9F8F8F8F7F7F7F6F6F6F5F5F4
F4F4F3F3F3F2F2F1F1F0F0F0EFEFEEEEEDEDECECECEBEBEAEAE9E9E8E8E7E7E6E6E5E5E4E4E3E3E2
E2E1E1E0E0DFDEDEDDDDDCDCDBDBDADAD9D8D8D7D7D6D6D5D4D4D3D3D2D1D1D0D0CFCECECDCDCCCB
CBCAC9C9C8C8C7C6C6C5C4C4C3C2C2C1C0C0BFBEBEBDBCBCBBBABAB9B8B8B7B6B6B5B4B4B3B2B2B1
B0AFAFAEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A09F9F9E9D9C9C9B9A999998979696959493
939291908F8F8E8D8C8C8B8A898888878685848483828180807F7E7D7C7B7B7A7978777676757473
727171706F6E6D6C6C6B6A6968676666656463626160605F5E5D5C5B5A5959585756555453525151
504F4E4D4C4B4A49484847464544434241403F3E3E3D3C3B3A39383736353433323130302F2E2D2C
2B2A292827262524232221201F1E1D1D1C1B1A191817161514131211100F0E0D0C0B0A0908070605
0403020100
>
0
1 %_Br
[
0.8941 0.4627 0.9608 0.5961 1 16.2162 28.6517 %_BS
%_0.8941 0.4627 0.9608 0.5961 1 16.2162 28.6517 Bs
0.9412 0 1 0 1 61.5385 64.6067 %_BS
%_0.9412 0 1 0 1 61.5385 64.6067 Bs
0 0 0 0 1 50 78.6517 %_BS
%_0 0 0 0 1 50 78.6517 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
F9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2
D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAA
A9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878685848382
81807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A
595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938373635343332
31302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A
0908070605040302
>
0.9882
<
05050505050505050505050505050505050505050505050505050505050505050505050505050505
05050606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606070707070707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707070707070707070707070707070707
07070707070708080808080808080808080808080808080808080808080808080808080808080808
0808080808080808
>
0
1 %_Br
<
E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEB
EBEBEBEBEBEBEBEBECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEE
EEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1
F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9
>
<
1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B
3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
6465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B
8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3
B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADB
DCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC
>
<
09090909090909090909090909090909090909090909090909090909090908080808080808080808
08080808080808080808080808080808080808080808080808080808080808080808080808080808
08080808080808080707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707060606060606060606060606060606
06060606060606060606060606060606060606060606060606060606060606060606060606060606
060606050505050505050505050505050505050505050505050505050505050505
>
0
1 %_Br
<
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8
>
<
13131313131313131313131313131313131313131313131313131313131313131313131313131313
13131313131313131313131313131313131313131313131313131313131313131313131313131313
13131313131313131313131313131313131313131313131313131313131313131313131313141414
14141414141414141414141414141414141414141414141414141414141414141414141414141414
14141414141414141414141414141414141414141414141414141414141414141414141414141414
14141414141414141414141414141414141414141414141414141414141414
>
<
EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8
C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A0
9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978
77767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525150
4F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928
27262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09
>
0
1 %_Br
<
08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354555657
58595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC
>
<
05050505050505050506060606060606060606060606060606070707070707070707070707070707
070808080808080808080808080808080808090909090909090909090909090909090A0A0A0A0A0A
0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C
0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F
0F0F0F0F0F0F0F0F0F0F0F0F10101010101010101010101010101010111111111111111111111111
1111111112121212121212121212121212121212131313131313131313
>
<
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
EDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEF
>
0
1 %_Br
<
03030303030303030303030303030303030303030303030304040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040505050505050505
05050505050505050505050505050505050505050505050505050505050505050505050505050505
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707080808080808080808080808080808080808080808080808
08
>
<
F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCE
CDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6
A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E
7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756
5554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706
05
>
0.9137
0
1 %_Br
[
0.0078 0.9882 0.0314 0 1 50 100 %_BS
%_0.0078 0.9882 0.0314 0 1 50 100 Bs
0.9765 0.9882 0.0196 0 1 50 80 %_BS
%_0.9765 0.9882 0.0196 0 1 50 80 Bs
0.9098 0.0784 0.0353 0 1 50 60 %_BS
%_0.9098 0.0784 0.0353 0 1 50 60 Bs
0.9255 0.0745 0.9373 0 1 50 40 %_BS
%_0.9255 0.0745 0.9373 0 1 50 40 Bs
0.0314 0.0196 0.9137 0 1 50 20 %_BS
%_0.0314 0.0196 0.9137 0 1 50 20 Bs
0.0118 0.9608 0.9137 0 1 50 0 %_BS
%_0.0118 0.9608 0.9137 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Steel Bar II)
(Steel Bar II) 0 3 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A
>
0 %_Br
<
1A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041
42434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263646566676869
6A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F9091
92939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9
BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1
E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0 %_Br
[
0.1 0 50 100 %_BS
%_0.1 0 50 100 Bs
1 0 50 39.8876 %_BS
%_1 0 50 39.8876 Bs
0.1 0 50 0 %_BS
%_0.1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Sunset)
(Sunset) 0 5 Bd
[
<
EEEDEDECECEBEBEAE9E9E8E8E7E6E6E5E5E4E4E3E2E2E1E1E0DFDFDEDEDDDDDCDBDBDADAD9D9D8D7
D7D6D6D5D4D4D3D3D2D2D1
>
<
3534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E
0D0C0B0A09080706050403
>
1
<
807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160605F5E5D5C5B5A
595857565554535251504F
>
1 %_Br
<
08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354555657
58595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE
>
<
050505060606060607070707080808080809090909090A0A0A0A0A0B0B0B0B0B0C0C0C0C0D0D0D0D
0D0E0E0E0E0E0F0F0F0F0F1010101010111111111212121212131313131314141414141515151515
161616161717171717181818181819191919191A1A1A1A1A1B1B1B1B1C1C1C1C1C1D1D1D1D1D1E1E
1E1E1E1F1F1F1F1F2020202021212121212222222222232323232324242424252525252526262626
2627272727272828282828292929292A2A2A2A2A2B2B2B2B2B2C2C2C2C2C2D2D2D2D2D2E2E2E2E2F
2F2F2F2F303030303031313131313232323232333333333434343434353535
>
<
E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECEDEDED
EDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F1
F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4
F4F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8
F8F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFC
FCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF
>
<
0001010202030304040506060707080809090A0B0B0C0C0D0D0E0E0F101011111212131314151516
161717181819191A1B1B1C1C1D1D1E1E1F2020212122222323242525262627272828292A2A2B2B2C
2C2D2D2E2F2F3030313132323334343535363637373839393A3A3B3B3C3C3D3E3E3F3F4040414142
434344444545464647484849494A4A4B4B4C4D4D4E4E4F4F50505151525353545455555656575858
59595A5A5B5B5C5D5D5E5E5F5F6060616262636364646565666767686869696A6A6B6C6C6D6D6E6E
6F6F7071717272737374747576767777787879797A7B7B7C7C7D7D7E7E7F7F
>
1 %_Br
<
33333232323231313131303030302F2F2F2E2E2E2E2D2D2D2D2C2C2C2C2B2B2B2B2A2A2A29292929
282828282727272726262625252525242424242323232322222221212121202020201F1F1F1F1E1E
1E1E1D1D1D1C1C1C1C1B1B1B1B1A1A1A1A1919191818181817171717161616161515151414141413
13131312121212111111101010100F0F0F0F0E0E0E0E0D0D0D0D0C0C0C0B0B0B0B0A0A0A0A090909
090808
>
<
A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A89888786858483828180
7F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A5958
57565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39383736353433323130
2F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A0908
070605
>
<
F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1
F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECEC
ECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9
E9E9E9
>
<
1111111111101010101010101010100F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D
0D0D0D0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0909090909090909
09090808080808080808080707070707070707070706060606060606060605050505050505050505
04040404040404040403030303030303030303020202020202020202010101010101010101010000
000000
>
1 %_Br
<
F6F5F4F4F3F2F1F0F0EFEEEDECECEBEAE9E8E8E7E6E5E4E4E3E2E1E1E0DFDEDDDDDCDBDAD9D9D8D7
D6D6D5D4D3D2D2D1D0CFCFCECDCCCBCBCAC9C8C8C7C6C5C4C4C3C2C1C1C0BFBEBEBDBCBBBABAB9B8
B7B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A5A5A4A3A2A2A1A09F9F9E9D9C9C9B9A
9A999897979695949493929291908F8F8E8D8C8C8B8A8A89888787868585848382828180807F7E7E
7D7C7B7B7A7979787777767574747372727170706F6E6E6D6C6C6B6A6A6968686766666564646362
626160605F5E5E5D5C5C5B5A5A595858575756555554535352525150504F4E4E4D4D4C4B4B4A4A49
484847474646454444434342424140403F3F3E3E3D3D3C3C3B3B3A39393938383737363635353434
343333
>
<
EAEAE9E9E9E9E8E8E8E8E7E7E7E6E6E6E6E5E5E5E5E4E4E4E3E3E3E3E2E2E2E2E1E1E1E0E0E0E0DF
DFDFDFDEDEDEDDDDDDDDDCDCDCDCDBDBDBDBDADADAD9D9D9D9D8D8D8D8D7D7D7D7D6D6D6D6D5D5D5
D4D4D4D4D3D3D3D3D2D2D2D2D1D1D1D1D0D0D0D0CFCFCFCFCECECECECDCDCDCDCCCCCCCBCBCBCBCA
CACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1
C0C0C0C0BFBFBFBFBEBEBEBEBDBDBDBDBDBCBCBCBCBBBBBBBBBABABABABAB9B9B9B9B8B8B8B8B7B7
B7B7B7B6B6B6B6B5B5B5B5B5B4B4B4B4B3B3B3B3B3B2B2B2B2B1B1B1B1B1B0B0B0B0B0AFAFAFAFAF
AEAEAEAEAEADADADADADACACACACACABABABABABAAAAAAAAAAAAA9A9A9A9A9A9A8A8A8A8A8A8A7A7
A7A7A7
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
2728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F40414243434445464748494A4B4C4D
4E4F50515253545556565758595A5B5C5D5E5F60616263646465666768696A6B6C6D6E6F70707172
737475767778797A7A7B7C7D7E7F80818283848485868788898A8B8C8C8D8E8F9091929394949596
9798999A9A9B9C9D9E9FA0A1A1A2A3A4A5A6A7A7A8A9AAABACACADAEAFB0B1B2B2B3B4B5B6B6B7B8
B9BABBBBBCBDBEBFBFC0C1C2C3C3C4C5C6C7C7C8C9CACBCBCCCDCECECFD0D1D2D2D3D4D5D5D6D7D8
D8D9DADADBDCDDDDDEDFDFE0E1E2E2E3E4E4E5E6E6E7E8E8E9EAEAEBECECEDEDEEEFEFF0F0F1F1F2
F2F3F3
>
<
00000000000000000101010101010101010101010101020202020202020202020202020202030303
03030303030303030303030404040404040404040404040404040505050505050505050505050505
05060606060606060606060606060606070707070707070707070707070707070808080808080808
08080808080808090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D
0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F
0F0F0F0F0F0F0F0F1010101010101010101010101010101010101010101111111111111111111111
111111
>
1 %_Br
[
0.8196 0.01 1 0.31 1 50 100 %_BS
%_0.8196 0.01 1 0.31 1 50 100 Bs
0.9333 0.2078 1 0.5 1 50 57.3034 %_BS
%_0.9333 0.2078 1 0.5 1 50 57.3034 Bs
0.0314 0.0196 0.9137 0 1 50 55.618 %_BS
%_0.0314 0.0196 0.9137 0 1 50 55.618 Bs
0.2 0.6549 0.9529 0.0667 1 50 49.4382 %_BS
%_0.2 0.6549 0.9529 0.0667 1 50 49.4382 Bs
0.9647 0.9176 0 0 1 45 32.5843 %_BS
%_0.9647 0.9176 0 0 1 45 32.5843 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (White, Black)
(White, Black) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
0 0 0 0 1 50 0 %_BS
%_0 0 0 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Azure Rings)
(Azure Rings) 22.5 22.5 58.5 58.5 [
%AI3_Tile
(0 O 0 R 0.9569 0.9294 0 0 k
 0.9569 0.9294 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1.75 w 4 M []0 d0 XR
40.5 58.5 m
40.5 48.5586 32.4409 40.5 22.5 40.5 c
12.5591 40.5 4.5 48.5586 4.5 58.5 c
4.5 68.4414 12.5591 76.5 22.5 76.5 c
32.4409 76.5 40.5 68.4414 40.5 58.5 c
s40.5 22.5 m
40.5 12.5586 32.4409 4.5 22.5 4.5 c
12.5591 4.5 4.5 12.5586 4.5 22.5 c
4.5 32.4414 12.5591 40.5 22.5 40.5 c
32.4409 40.5 40.5 32.4414 40.5 22.5 c
s40.5 40.5 m
40.5 30.5586 32.4409 22.5 22.5 22.5 c
12.5591 22.5 4.5 30.5586 4.5 40.5 c
4.5 50.4414 12.5591 58.5 22.5 58.5 c
32.4409 58.5 40.5 50.4414 40.5 40.5 c
s58.5 58.5 m
58.5 48.5586 50.4409 40.5 40.5 40.5 c
30.5591 40.5 22.5 48.5586 22.5 58.5 c
22.5 68.4414 30.5591 76.5 40.5 76.5 c
50.4409 76.5 58.5 68.4414 58.5 58.5 c
s58.5 22.5 m
58.5 12.5586 50.4409 4.5 40.5 4.5 c
30.5591 4.5 22.5 12.5586 22.5 22.5 c
22.5 32.4414 30.5591 40.5 40.5 40.5 c
50.4409 40.5 58.5 32.4414 58.5 22.5 c
s58.5 40.5 m
58.5 30.5586 50.4409 22.5 40.5 22.5 c
30.5591 22.5 22.5 30.5586 22.5 40.5 c
22.5 50.4414 30.5591 58.5 40.5 58.5 c
50.4409 58.5 58.5 50.4414 58.5 40.5 c
s76.5 58.5 m
76.5 48.5586 68.4409 40.5 58.5 40.5 c
48.5591 40.5 40.5 48.5586 40.5 58.5 c
40.5 68.4414 48.5591 76.5 58.5 76.5 c
68.4409 76.5 76.5 68.4414 76.5 58.5 c
s76.5 22.5 m
76.5 12.5586 68.4409 4.5 58.5 4.5 c
48.5591 4.5 40.5 12.5586 40.5 22.5 c
40.5 32.4414 48.5591 40.5 58.5 40.5 c
68.4409 40.5 76.5 32.4414 76.5 22.5 c
s76.5 40.5 m
76.5 30.5586 68.4409 22.5 58.5 22.5 c
48.5591 22.5 40.5 30.5586 40.5 40.5 c
40.5 50.4414 48.5591 58.5 58.5 58.5 c
68.4409 58.5 76.5 50.4414 76.5 40.5 c
s%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Camouflage)
(Camouflage) 1 1 73 73 [
%AI3_Tile
(0 O 0 R 0.5961 0.1412 0.949 0.0275 k
 0.5961 0.1412 0.949 0.0275 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
1 73 m
1 1 L
73 1 L
73 73 L
1 73 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.498 0.349 0.9725 0.2 k
 0.498 0.349 0.9725 0.2 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
18.5449 73 m
18.5449 1 L
46.7832 1 L
46.7832 73 L
18.5449 73 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.1882 0.1098 0.9255 0.0157 k
 0.1882 0.1098 0.9255 0.0157 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
11.9512 1 m
11.9512 4.7129 9.2314 2.8813 9.2314 6.5938 c
9.2314 10.2334 4.25 10.2334 4.25 13.8735 c
4.25 17.4858 10.0313 17.4858 10.0313 21.0991 c
10.0313 24.832 10.208 24.832 10.208 28.5654 c
10.208 32.3071 5.5205 32.3071 5.5205 36.0469 c
5.5205 39.7021 11.8838 39.7021 11.8838 43.356 c
11.8838 47.0566 7.4609 47.0566 7.4609 50.7568 c
7.4609 54.4043 5.7959 54.4043 5.7959 58.0542 c
5.7959 61.7686 4.6631 61.7686 4.6631 65.4805 c
4.6631 69.1636 11.9512 69.3184 11.9512 73 C
27.9268 73 L
27.9268 69.3184 22.0635 69.1636 22.0635 65.4805 c
22.0635 61.7686 28.6631 61.7686 28.6631 58.0542 c
28.6631 54.4043 25.1553 54.4043 25.1553 50.7568 c
25.1553 47.0566 28.8145 47.0566 28.8145 43.356 c
28.8145 39.7021 22.1191 39.7021 22.1191 36.0469 c
22.1191 32.3071 26.3945 32.3071 26.3945 28.5654 c
26.3945 24.832 24.4248 24.832 24.4248 21.0991 c
24.4248 17.4858 20.3838 17.4858 20.3838 13.8735 c
20.3838 10.2334 24.6055 10.2334 24.6055 6.5938 c
24.6055 2.8813 27.9268 4.7129 27.9268 1 C
11.9512 1 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.9255 0.2157 0.9647 0.0745 k
 0.9255 0.2157 0.9647 0.0745 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
41.875 1 m
41.875 4.7134 42.3867 2.8818 42.3867 6.5938 c
42.3867 10.2334 40.5947 10.2334 40.5947 13.8735 c
40.5947 17.4858 41.5742 17.4858 41.5742 21.0991 c
41.5742 24.832 43.6484 24.832 43.6484 28.5659 c
43.6484 32.3076 39.1709 32.3076 39.1709 36.0469 c
39.1709 39.7026 39.7549 39.7026 39.7549 43.356 c
39.7549 47.0566 45.3896 47.0566 45.3896 50.7568 c
45.3896 54.4043 40.1055 54.4043 40.1055 58.0542 c
40.1055 61.7686 40.6289 61.7686 40.6289 65.4805 c
40.6289 69.1636 41.875 69.3184 41.875 73 C
59.0752 73 L
59.0752 69.4219 53.4805 70.1934 53.4805 66.6143 c
53.4805 62.9136 55.8945 62.9136 55.8945 59.2153 c
55.8945 55.502 61.0059 55.502 61.0059 51.7886 c
61.0059 48.1489 60.5635 48.1489 60.5635 44.5103 c
60.5635 40.897 59.9277 40.897 59.9277 37.2842 c
59.9277 33.5508 56.3662 33.5508 56.3662 29.8169 c
56.3662 26.0762 61.0908 26.0762 61.0908 22.3354 c
61.0908 18.6812 52.6025 18.6812 52.6025 15.0264 c
52.6025 11.3262 55.7461 11.3262 55.7461 7.6265 c
55.7461 3.978 59.0752 4.6484 59.0752 1 C
41.875 1 L
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Clown Attack)
(Clown Attack) 5.25 11 41.25 47 [
%AI3_Tile
(0 O 0 R 0.9255 0 1 0 k
 0.9255 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
17.5 18.25 m
17.5 15.2119 15.0376 12.75 12 12.75 c
8.9624 12.75 6.5 15.2119 6.5 18.25 c
6.5 21.2881 8.9624 23.75 12 23.75 c
15.0376 23.75 17.5 21.2881 17.5 18.25 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0078 0.9529 0 0 k
 0.0078 0.9529 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
22.25 34.125 m
22.25 31.2939 19.9556 29 17.125 29 c
14.2944 29 12 31.2939 12 34.125 c
12 36.9561 14.2944 39.25 17.125 39.25 c
19.9556 39.25 22.25 36.9561 22.25 34.125 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0118 0.9608 0.9137 0 k
 0.0118 0.9608 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
30 31.625 m
30 29.4854 28.2646 27.75 26.125 27.75 c
23.9849 27.75 22.25 29.4854 22.25 31.625 c
22.25 33.7646 23.9849 35.5 26.125 35.5 c
28.2646 35.5 30 33.7646 30 31.625 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
23.25 24.5 m
23.25 22.4287 21.5713 20.75 19.5 20.75 c
17.4287 20.75 15.75 22.4287 15.75 24.5 c
15.75 26.5713 17.4287 28.25 19.5 28.25 c
21.5713 28.25 23.25 26.5713 23.25 24.5 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.9569 0.9294 0 0 k
 0.9569 0.9294 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
36 22.25 m
36 19.0742 33.4258 16.5 30.25 16.5 c
27.0742 16.5 24.5 19.0742 24.5 22.25 c
24.5 25.4258 27.0742 28 30.25 28 c
33.4258 28 36 25.4258 36 22.25 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.1882 0.1216 0.8 0.0157 k
 0.1882 0.1216 0.8 0.0157 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
24.25 16.5 m
24.25 14.8438 22.9067 13.5 21.25 13.5 c
19.5933 13.5 18.25 14.8438 18.25 16.5 c
18.25 18.1563 19.5933 19.5 21.25 19.5 c
22.9067 19.5 24.25 18.1563 24.25 16.5 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.8353 0 0 0 k
 0.8353 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
37.25 43.875 m
37.25 39.5264 33.7236 36 29.375 36 c
25.0264 36 21.5 39.5264 21.5 43.875 c
21.5 48.2236 25.0264 51.75 29.375 51.75 c
33.7236 51.75 37.25 48.2236 37.25 43.875 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0078 0.1961 0.9373 0 k
 0.0078 0.1961 0.9373 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
38.75 26.625 m
38.75 25.7275 38.0225 25 37.125 25 c
36.2275 25 35.5 25.7275 35.5 26.625 c
35.5 27.5225 36.2275 28.25 37.125 28.25 c
38.0225 28.25 38.75 27.5225 38.75 26.625 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0196 0.5961 0.9137 0 k
 0.0196 0.5961 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
19.875 42 m
19.875 41.1025 19.1475 40.375 18.25 40.375 c
17.3525 40.375 16.625 41.1025 16.625 42 c
16.625 42.8975 17.3525 43.625 18.25 43.625 c
19.1475 43.625 19.875 42.8975 19.875 42 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0118 0.9608 0.9137 0 k
 0.0118 0.9608 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
12.75 28.125 m
12.75 26.8135 11.6865 25.75 10.375 25.75 c
9.0635 25.75 8 26.8135 8 28.125 c
8 29.4365 9.0635 30.5 10.375 30.5 c
11.6865 30.5 12.75 29.4365 12.75 28.125 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.9255 0 1 0 k
 0.9255 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
43.25 33 m
43.25 30.998 41.627 29.375 39.625 29.375 c
37.623 29.375 36 30.998 36 33 c
36 35.002 37.623 36.625 39.625 36.625 c
41.627 36.625 43.25 35.002 43.25 33 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
13.25 43.75 m
13.25 40.9883 11.0117 38.75 8.25 38.75 c
5.4883 38.75 3.25 40.9883 3.25 43.75 c
3.25 46.5117 5.4883 48.75 8.25 48.75 c
11.0117 48.75 13.25 46.5117 13.25 43.75 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.3922 0.9451 0 0 k
 0.3922 0.9451 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
6.5 22.25 m
6.5 20.7314 5.2686 19.5 3.75 19.5 c
2.2314 19.5 1 20.7314 1 22.25 c
1 23.7686 2.2314 25 3.75 25 c
5.2686 25 6.5 23.7686 6.5 22.25 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0235 0.0118 0.6 0 k
 0.0235 0.0118 0.6 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
34.4883 32.75 m
34.4883 31.9277 33.8223 31.2617 33 31.2617 c
32.1777 31.2617 31.5117 31.9277 31.5117 32.75 c
31.5117 33.5723 32.1777 34.2383 33 34.2383 c
33.8223 34.2383 34.4883 33.5723 34.4883 32.75 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
49.25 43.75 m
49.25 40.9883 47.0117 38.75 44.25 38.75 c
41.4883 38.75 39.25 40.9883 39.25 43.75 c
39.25 46.5117 41.4883 48.75 44.25 48.75 c
47.0117 48.75 49.25 46.5117 49.25 43.75 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.3922 0.9451 0 0 k
 0.3922 0.9451 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
42.5 22.25 m
42.5 20.7314 41.2686 19.5 39.75 19.5 c
38.2314 19.5 37 20.7314 37 22.25 c
37 23.7686 38.2314 25 39.75 25 c
41.2686 25 42.5 23.7686 42.5 22.25 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
49.25 7.752 m
49.25 4.9902 47.0117 2.752 44.25 2.752 c
41.4883 2.752 39.25 4.9902 39.25 7.752 c
39.25 10.5137 41.4883 12.752 44.25 12.752 c
47.0117 12.752 49.25 10.5137 49.25 7.752 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.8353 0 0 0 k
 0.8353 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
37.25 7.875 m
37.25 3.5264 33.7236 0 29.375 0 c
25.0264 0 21.5 3.5264 21.5 7.875 c
21.5 12.2236 25.0264 15.75 29.375 15.75 c
33.7236 15.75 37.25 12.2236 37.25 7.875 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
13.25 7.75 m
13.25 4.9883 11.0117 2.75 8.25 2.75 c
5.4883 2.75 3.25 4.9883 3.25 7.75 c
3.25 10.5117 5.4883 12.75 8.25 12.75 c
11.0117 12.75 13.25 10.5117 13.25 7.75 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.9255 0 1 0 k
 0.9255 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
7.25 33 m
7.25 30.998 5.627 29.375 3.625 29.375 c
1.623 29.375 0 30.998 0 33 c
0 35.002 1.623 36.625 3.625 36.625 c
5.627 36.625 7.25 35.002 7.25 33 c
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0235 0.4078 0 0 k
 0.0235 0.4078 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
39.6533 16.0381 m
39.6533 15.1064 38.8975 14.3506 37.9658 14.3506 c
37.0342 14.3506 36.2783 15.1064 36.2783 16.0381 c
36.2783 16.9697 37.0342 17.7256 37.9658 17.7256 c
38.8975 17.7256 39.6533 16.9697 39.6533 16.0381 c
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Pyramids)
(Pyramids) 1 1 19.5 19.5 [
%AI3_Tile
(0 O 0 R 0.1882 0.1294 0.102 0.0118 k
 0.1882 0.1294 0.102 0.0118 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
1 19.5 m
10.25 10.25 l
19.5 19.5 l
1 19.5 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.6235 0.4863 0.4863 0.4784 k
 0.6235 0.4863 0.4863 0.4784 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
19.5 1 m
10.25 10.25 l
1 1 l
19.5 1 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.3529 0.2549 0.2235 0.0667 k
 0.3529 0.2549 0.2235 0.0667 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
1 1 m
10.25 10.25 l
1 19.5 l
1 1 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.4902 0.3647 0.3451 0.2196 k
 0.4902 0.3647 0.3451 0.2196 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
19.5 19.5 m
10.25 10.25 l
19.5 1 l
19.5 19.5 l
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Red Stripe)
(Red Stripe) 37 19 73 55 [
%AI3_Tile
(0 O 0 R 0 0.9608 0.9137 0 k
 0 0.9608 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 18 w 4 M []0 d0 XR
37 37 m
73 37 l
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Red Tablecloth)
(Red Tablecloth) 0 0 24 24 [
%AI3_Tile
(0 O 0 R 0.25 1 1 0 k
 0.25 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
6 18 m
0 18 L
0 24 L
6 24 L
6 18 L
f18 18 m
12 18 L
12 24 L
18 24 L
18 18 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.1225 0.5 0.5 0 k
 0.1225 0.5 0.5 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
12 18 m
6 18 L
6 24 L
12 24 L
12 18 L
f24 18 m
18 18 L
18 24 L
24 24 L
24 18 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
12 12 m
6 12 L
6 18 L
12 18 L
12 12 L
f24 12 m
18 12 L
18 18 L
24 18 L
24 12 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.1225 0.5 0.5 0 k
 0.1225 0.5 0.5 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
6 12 m
0 12 L
0 18 L
6 18 L
6 12 L
f18 12 m
12 12 L
12 18 L
18 18 L
18 12 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.25 1 1 0 k
 0.25 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
6 6 m
0 6 L
0 12 L
6 12 L
6 6 L
f18 6 m
12 6 L
12 12 L
18 12 L
18 6 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.1225 0.5 0.5 0 k
 0.1225 0.5 0.5 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
12 6 m
6 6 L
6 12 L
12 12 L
12 6 L
f24 6 m
18 6 L
18 12 L
24 12 L
24 6 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
12 0 m
6 0 L
6 6 L
12 6 L
12 0 L
f24 0 m
18 0 L
18 6 L
24 6 L
24 0 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.1225 0.5 0.5 0 k
 0.1225 0.5 0.5 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
6 0 m
0 0 L
0 6 L
6 6 L
6 0 L
f18 0 m
12 0 L
12 6 L
18 6 L
18 0 L
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(New Pattern 1)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7892.2769 8610.2773 m
-7848.209 8610.2773 L
-7848.209 8563.4238 L
-7892.2769 8563.4238 L
-7892.2769 8610.2773 L
nu0 O
0.445 0.356 0.267 0 k
-7848.209 8563.4238 m
-7870.1006 8586.4512 L
-7869.8574 8586.7705 -7869.4834 8586.8066 -7869.1694 8586.7607 C
-7864.8774 8582.1309 -7853.7441 8569.9639 -7849.3311 8565.1406 C
-7848.4927 8564.0684 -7848.0586 8563.4268 -7848.209 8563.4238 C
f/BBAccumRotation (3.141593) XT
0.15 0.12 0.09 0 k
-7848.2241 8563.4238 m
-7849.3975 8563.7168 -7870.3647 8585.417 Y
-7870.3647 8585.918 -7870.2593 8586.2441 -7870.1006 8586.4512 C
-7848.209 8563.4238 L
-7848.2134 8563.4238 -7848.2158 8563.4199 -7848.2241 8563.4238 c
f/BBAccumRotation (3.141593) XT
0.2 0.16 0.12 0 k
-7849.3311 8565.1406 m
-7853.7441 8569.9639 -7864.8774 8582.1309 -7869.1694 8586.7607 C
-7868.8574 8586.7158 -7868.6055 8586.5898 Y
-7867.4551 8586.2871 -7853.4839 8570.458 -7849.3311 8565.1406 C
f/BBAccumRotation (3.141593) XT
U0.075 0.5 0.5 0 k
-7884.9487 8594.709 m
-7886.8486 8593.8164 -7888.6577 8593.5156 -7890.0303 8593.9082 c
-7890.585 8594.0664 -7891.0698 8594.3359 -7891.46 8594.7246 c
-7891.8506 8595.1152 -7892.1182 8595.5996 -7892.2769 8596.1533 c
-7893 8598.6836 -7891.3682 8602.6914 -7888.0303 8606.0303 c
-7884.6904 8609.3672 -7880.6846 8611 -7878.1519 8610.2773 c
-7877.6001 8610.1172 -7877.1152 8609.8486 -7876.7246 8609.459 c
-7876.3345 8609.0703 -7876.0674 8608.5859 -7875.9087 8608.0313 c
-7875.4482 8606.4219 -7875.9424 8604.2158 -7877.2192 8601.9648 c
-7877.9512 8600.6758 -7878.9385 8599.3711 -7880.1538 8598.1543 c
-7881.6826 8596.6279 -7883.3486 8595.46 -7884.9487 8594.709 c
f0.0382 0.25 0.25 0 k
-7882.9766 8592.7363 m
-7885.1094 8591.96 -7888.4175 8593.1279 -7890.0303 8593.9082 C
-7888.6577 8593.5156 -7886.8486 8593.8164 -7884.9487 8594.709 c
-7884.5142 8594.9131 -7884.0752 8595.1484 -7883.6362 8595.4141 C
-7881.082 8593.6201 L
-7881.7095 8593.2637 -7882.3442 8592.9668 -7882.9766 8592.7363 c
f0.057 0.38 0.38 0 k
-7881.082 8593.6201 m
-7883.6362 8595.4141 L
-7882.4546 8596.1221 -7881.2671 8597.041 -7880.1538 8598.1543 c
-7880.0513 8598.2578 -7879.9526 8598.3623 -7879.853 8598.4668 C
-7877.9209 8596.0625 L
-7878.8647 8595.1328 -7880.0366 8594.2139 -7881.082 8593.6201 C
f0.1125 0.75 0.75 0 k
-7872.0791 8577.8164 m
-7872.4424 8578.1787 -7882.9766 8592.7363 Y
-7882.3442 8592.9668 -7881.7095 8593.2637 -7881.082 8593.6201 C
-7866.6807 8576.7627 L
-7868.7617 8576.168 -7870.7568 8576.4912 -7872.0791 8577.8164 c
f0.0932 0.6217 0.6217 0 k
-7866.6807 8576.7627 m
-7881.082 8593.6201 L
-7880.0078 8594.2314 -7878.957 8595.0254 -7877.9912 8595.9912 c
-7877.9663 8596.0156 -7877.9458 8596.0391 -7877.9209 8596.0625 C
-7861.5327 8580.2842 L
-7861.7681 8580 -7862.0127 8579.7236 -7862.2783 8579.4551 c
-7863.6426 8578.0928 -7865.1846 8577.1895 -7866.6807 8576.7627 C
f0.0734 0.4808 0.4808 0 k
-7856.0562 8590.2051 m
-7853.0234 8587.168 -7852.772 8582.2412 -7855.0503 8577.9541 C
-7856.5122 8578.4863 L
-7853.73 8582.7539 -7853.4097 8587.5547 -7856.0562 8590.2051 c
f0.0382 0.25 0.25 0 k
-7865.6582 8571.5078 m
-7864.4561 8570.6611 L
-7867.77 8569.9355 -7871.0874 8570.6465 -7873.3486 8572.9111 c
-7871.519 8571.0811 -7868.6582 8570.668 -7865.6582 8571.5078 C
f0.0927 0.6183 0.6183 0 k
-7865.6582 8571.5078 m
-7868.6582 8570.668 -7871.519 8571.0811 -7873.3486 8572.9111 c
-7875.1167 8574.6797 -7874.0518 8576.6504 -7873.3247 8579.5352 C
-7871.0439 8575.4668 -7866.6729 8576.7412 V
-7865.7231 8571.5527 L
-7865.6582 8571.5078 L
f*u
1 D
0.15 1 1 0 k
-7856.0562 8590.2051 m
-7857.7583 8591.9053 -7858.9951 8591.3477 -7861.7646 8590.7334 C
-7875.1802 8599.9248 L
-7875.2598 8599.7568 -7875.2598 8599.7568 -7875.1802 8599.9248 c
-7873.998 8602.4082 -7875.001 8606.1523 -7875.9087 8608.0313 C
-7875.4482 8606.4219 -7875.9424 8604.2158 -7877.2192 8601.9648 c
-7877.8882 8600.7852 -7878.7754 8599.5938 -7879.853 8598.4668 C
-7877.9438 8596.041 -7877.9199 8596.0645 v
-7877.9209 8596.0645 -7877.9209 8596.0645 -7877.9209 8596.0625 C
-7861.5327 8580.2842 L
-7856.5513 8578.499 L
-7856.5122 8578.4863 L
-7853.73 8582.7539 -7853.4097 8587.5547 -7856.0562 8590.2051 c
f*U
0 D
0.0535 0.35 0.35 0 k
-7864.4561 8570.6611 m
-7865.6582 8571.5078 L
-7863.3218 8572.1592 -7860.897 8573.5713 -7858.8105 8575.6611 c
-7857.915 8576.5537 -7857.1494 8577.5049 -7856.5122 8578.4863 C
-7855.0503 8577.9541 L
-7855.7041 8576.7246 -7856.5649 8575.5479 -7857.6304 8574.4844 c
-7859.6382 8572.4727 -7862.0474 8571.1885 -7864.4561 8570.6611 C
f0.0662 0.4412 0.4412 0 k
-7856.5122 8578.4863 m
-7857.1494 8577.5049 -7857.915 8576.5537 -7858.8105 8575.6611 c
-7860.897 8573.5713 -7863.3218 8572.1592 -7865.6582 8571.5078 C
-7865.7231 8571.5527 L
-7866.6729 8576.7412 L
-7865.1606 8577.207 -7863.6143 8578.1182 -7862.2783 8579.4551 c
-7862.0127 8579.7236 -7861.7681 8580 -7861.5327 8580.2842 C
-7856.5513 8578.499 L
-7856.5122 8578.4863 L
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 11)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7893 8611 m
-7811.0791 8611 L
-7811.0791 8529.0781 L
-7893 8529.0781 L
-7893 8611 L
nu0 O
0 0 0 1 k
-7852.0391 8529.0781 m
-7848.4194 8566.418 L
-7811.0791 8570.0391 L
-7848.4194 8573.6602 L
-7852.0391 8611 L
-7855.6602 8573.6602 L
-7893 8570.0391 L
-7855.6602 8566.418 L
-7852.0391 8529.0781 L
fUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 27)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7774.3335 8567.4414 m
-7894 8567.4414 L
-7894 8612 L
-7774.3335 8612 L
-7774.3335 8567.4414 L
nu0 O
0 0 0 1 k
-7774.4927 8569.3857 m
-7778.6982 8568.418 -7782.6138 8570.8164 -7787.0342 8571.126 c
-7791.3818 8571.4316 -7795.1558 8571.0723 -7799.4414 8570.874 c
-7808.2222 8570.5156 -7815.9409 8568.9434 -7824.8457 8569.5195 c
-7828.4014 8569.7393 -7893.644 8564.041 -7894 8570 c
-7894.0825 8571.2402 -7883.8506 8571.7002 -7883.3369 8571.8994 c
-7873.2656 8575.7734 -7831.9609 8578.875 -7824.7993 8577.8027 c
-7811.6138 8575.8662 -7800.1504 8574.6582 -7786.9648 8572.7217 c
-7782.6143 8572.123 -7778.7202 8569.3369 -7774.5103 8570.1914 c
-7774.4175 8570.2148 -7774.3442 8570.0313 -7774.3335 8569.8086 c
-7774.3247 8569.585 -7774.3896 8569.3652 -7774.4927 8569.3857 c
-7774.4927 8569.3857 l
f-7774.4927 8577.9316 m
-7778.6982 8576.9668 -7782.6138 8579.3652 -7787.0342 8579.6758 c
-7791.3818 8579.9805 -7795.1558 8579.6211 -7799.4414 8579.4238 c
-7808.2222 8579.0645 -7815.9409 8577.4912 -7824.8457 8578.0703 c
-7828.4014 8578.2881 -7893.644 8572.5898 -7894 8578.5488 c
-7894.0825 8579.7891 -7883.8506 8580.249 -7883.3369 8580.4482 c
-7873.2656 8584.3232 -7831.9609 8587.4238 -7824.7993 8586.3535 c
-7811.6138 8584.415 -7800.1504 8583.208 -7786.9648 8581.2705 c
-7782.6143 8580.6719 -7778.7202 8577.8857 -7774.5103 8578.7402 c
-7774.4175 8578.7637 -7774.3442 8578.5791 -7774.3335 8578.3555 c
-7774.3247 8578.1338 -7774.3896 8577.915 -7774.4927 8577.9316 c
-7774.4927 8577.9316 l
f-7774.4927 8586.4824 m
-7778.6982 8585.5156 -7782.6138 8587.915 -7787.0342 8588.2246 c
-7791.3818 8588.5273 -7795.1558 8588.1699 -7799.4414 8587.9727 c
-7808.2222 8587.6133 -7815.9409 8586.041 -7824.8457 8586.6191 c
-7828.4014 8586.8369 -7893.644 8581.1387 -7894 8587.0977 c
-7894.0825 8588.3379 -7883.8506 8588.7988 -7883.3369 8588.9961 c
-7873.2656 8592.8691 -7831.9609 8595.9736 -7824.7993 8594.9023 c
-7811.6138 8592.9648 -7800.1504 8591.7568 -7786.9648 8589.8193 c
-7782.6143 8589.2207 -7778.7202 8586.4336 -7774.5103 8587.2891 c
-7774.4175 8587.3125 -7774.3442 8587.1279 -7774.3335 8586.9043 c
-7774.3247 8586.6826 -7774.3896 8586.4629 -7774.4927 8586.4824 c
-7774.4927 8586.4824 l
f-7774.4927 8595.0313 m
-7778.6982 8594.0645 -7782.6138 8596.4629 -7787.0342 8596.7734 c
-7791.3818 8597.0781 -7795.1558 8596.7188 -7799.4414 8596.5195 c
-7808.2222 8596.1641 -7815.9409 8594.5898 -7824.8457 8595.168 c
-7828.4014 8595.3857 -7893.644 8589.6875 -7894 8595.6465 c
-7894.0825 8596.8867 -7883.8506 8597.3477 -7883.3369 8597.5449 c
-7873.2656 8601.4209 -7831.9609 8604.5225 -7824.7993 8603.4502 c
-7811.6138 8601.5137 -7800.1504 8600.3057 -7786.9648 8598.3682 c
-7782.6143 8597.7695 -7778.7202 8594.9824 -7774.5103 8595.8379 c
-7774.4175 8595.8613 -7774.3442 8595.6777 -7774.3335 8595.4531 c
-7774.3247 8595.2324 -7774.3896 8595.0117 -7774.4927 8595.0313 c
-7774.4927 8595.0313 l
f-7774.4927 8603.5801 m
-7778.6982 8602.6133 -7782.6138 8605.0117 -7787.0342 8605.3203 c
-7791.3818 8605.627 -7795.1558 8605.2676 -7799.4414 8605.0703 c
-7808.2222 8604.7119 -7815.9409 8603.1387 -7824.8457 8603.7168 c
-7828.4014 8603.9336 -7893.644 8598.2363 -7894 8604.1953 c
-7894.0825 8605.4355 -7883.8506 8605.8945 -7883.3369 8606.0938 c
-7873.2656 8609.9697 -7831.9609 8613.0713 -7824.7993 8612 c
-7811.6138 8610.0625 -7800.1504 8608.8545 -7786.9648 8606.917 c
-7782.6143 8606.3184 -7778.7202 8603.5322 -7774.5103 8604.3867 c
-7774.4175 8604.4102 -7774.3442 8604.2266 -7774.3335 8604.002 c
-7774.3247 8603.7793 -7774.3896 8603.5625 -7774.4927 8603.5801 c
-7774.4927 8603.5801 l
fUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7893 8611 m
-7886.8447 8611 L
-7886.8447 8569.2402 L
-7893 8569.2402 L
-7893 8611 L
n100 Ar
0 O
0.5333 0.0275 0.6039 0 k
-7891.1338 8589.6748 m
-7890.873 8587.2383 -7890.8174 8585.2891 -7890.7617 8583.8867 C
-7890.7617 8583.8867 L
-7890.6982 8582.375 -7890.5801 8580.3936 -7890.4121 8578.2803 C
-7890.4121 8578.2803 L
-7890.293 8582.123 -7890.4214 8585.8096 -7891.1338 8589.6748 C
f100 Ar
0.7373 0.0235 0.8392 0 k
-7890.4121 8578.2803 m
-7890.0566 8573.8057 -7888.6279 8569.2412 -7888.6279 8569.2402 C
-7889.7358 8576.2813 -7888.4912 8583.0381 -7889.7578 8590.1201 C
-7889.7578 8590.1201 L
-7891.0234 8597.1611 -7890.0313 8603.918 -7890.9312 8611 C
-7890.9312 8611 L
-7891.3848 8611 -7891.8193 8611 -7892.2734 8611 C
-7892.2734 8611 L
-7891.9312 8608.6777 -7891.8418 8606.4502 -7891.877 8604.1152 C
-7891.877 8604.1152 L
-7891.7393 8598.7734 -7891.5786 8593.7598 -7891.1338 8589.6748 C
-7891.1338 8589.6748 L
-7890.4238 8585.832 -7890.291 8582.1455 -7890.4121 8578.2803 C
f100 Ar
0.5137 0.0275 0.5804 0 k
-7892.2734 8611 m
-7892.519 8611 -7892.7534 8611 -7893 8611 C
-7893 8611 L
-7892.2598 8608.707 -7891.9502 8606.4521 -7891.877 8604.1152 C
-7891.877 8604.1152 L
-7891.8418 8606.4365 -7891.9297 8608.6641 -7892.2734 8611 C
f100 Ar
0.8941 0.0392 0.9647 0.0039 k
-7889.2559 8611 m
-7889.8198 8611 -7890.3633 8611 -7890.9312 8611 C
-7890.9312 8611 L
-7890.0273 8603.958 -7891.0337 8597.2021 -7889.7578 8590.1201 C
-7889.7578 8590.1201 L
-7888.499 8583.0791 -7889.7334 8576.3223 -7888.6279 8569.2402 C
-7888.6279 8569.2412 -7887.6416 8576.1318 -7886.8447 8583.1201 C
-7886.8447 8583.1201 L
-7887.04 8587.8213 -7888.4697 8592.332 -7888.8447 8597.0596 C
-7888.8447 8597.0596 L
-7889.2046 8601.7607 -7888.5752 8606.2715 -7889.2559 8611 C
f100 Ar
0.8902 0.1647 0.9765 0.0431 k
-7886.8447 8583.1201 m
-7886.2744 8588.4277 -7887.0615 8593.4873 -7887.521 8595.418 C
-7887.521 8595.418 L
-7888.6104 8599.8369 -7888.6362 8610.998 -7888.6362 8611 C
-7888.6362 8611 L
-7888.8447 8611 -7889.0449 8611 -7889.2559 8611 C
-7889.2559 8611 L
-7888.5728 8606.2988 -7889.2017 8601.7881 -7888.8447 8597.0596 C
-7888.8447 8597.0596 L
-7888.4736 8592.3594 -7887.04 8587.8486 -7886.8447 8583.1201 C
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed 1)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7891.4009 8609.7881 m
-7812.334 8609.7881 L
-7812.334 8549.9844 L
-7891.4009 8549.9844 L
-7891.4009 8609.7881 L
n0 O
0 0 0 1 k
-7856.6079 8573.4883 m
-7856.0649 8568.3154 -7855.7017 8567.4072 v
-7854.7031 8562.9609 -7854.9751 8562.5078 v
-7854.1582 8559.9658 -7856.4282 8560.2393 v
-7859.5127 8560.5107 -7859.9673 8565.7744 v
-7860.1489 8567.0459 -7860.3296 8567.4072 v
-7860.9658 8571.9453 -7861.6006 8571.8545 v
-7864.0513 8571.2197 -7864.686 8569.3135 v
-7865.5034 8566.2275 -7865.7744 8566.1377 v
-7866.1382 8565.1396 -7866.1382 8564.2314 v
-7866.5918 8561.0557 -7866.7729 8560.6924 v
-7867.5903 8556.4268 -7867.8633 8556.1553 v
-7868.2246 8555.4287 -7868.3169 8554.3398 v
-7869.4961 8549.8018 -7870.8574 8549.9844 v
-7873.5791 8549.4385 -7872.3096 8553.7041 v
-7871.7646 8555.1563 l
-7871.2202 8556.7002 -7871.311 8557.4248 v
-7871.311 8560.1475 -7871.0386 8560.9639 v
-7870.7666 8564.3213 -7870.585 8564.957 v
-7870.313 8566.2275 -7871.0386 8566.5 v
-7871.311 8567.3174 -7871.855 8565.1396 v
-7872.853 8560.874 -7873.2168 8560.7822 v
-7874.7583 8555.792 -7875.3042 8555.7021 v
-7876.665 8552.0713 -7876.9375 8551.9795 v
-7877.7554 8549.6201 -7880.0234 8550.4375 v
-7881.293 8551.9795 -7879.751 8554.249 v
-7878.5713 8557.5156 -7878.5713 8557.9697 v
-7877.5728 8561.6904 -7877.3008 8562.1445 v
-7876.1206 8567.7705 -7875.7578 8568.2256 v
-7875.939 8569.7666 -7876.9375 8567.6807 v
-7878.208 8565.0479 -7879.1143 8564.1416 v
-7880.6582 8561.1455 -7880.9302 8560.9639 v
-7881.293 8559.6943 -7881.6567 8558.9678 v
-7882.564 8554.7031 -7884.3794 8555.1563 v
-7886.5566 8555.2471 -7885.3774 8558.5146 v
-7884.561 8561.0557 -7884.1074 8561.6904 v
-7882.6543 8566.7734 -7882.019 8567.3174 v
-7879.2969 8572.4893 -7879.3872 8572.7627 v
-7880.2954 8574.6689 -7881.4751 8572.9443 v
-7882.564 8571.9453 -7883.29 8571.4912 v
-7885.3774 8569.7666 -7885.9214 8569.042 v
-7887.1006 8567.9521 -7887.5542 8566.9541 v
-7889.6426 8563.7783 -7890.8223 8564.7764 v
-7893 8565.9561 -7888.916 8570.4033 v
-7886.4658 8573.3057 -7886.0127 8573.8516 v
-7882.4736 8577.6631 -7882.291 8578.208 v
-7878.3887 8585.1045 -7878.3887 8585.6484 v
-7876.1206 8588.624 -7873.8521 8590.167 v
-7870.8506 8592.1045 -7866.9551 8590.167 v
-7864.1006 8589.5547 l
-7860.1489 8587.8271 -7859.5127 8585.376 v
-7856.6079 8578.5703 -7856.6079 8573.4883 v
f-7847.1265 8592.3838 m
-7847.6694 8587.2109 -7848.0337 8586.3037 v
-7849.0313 8581.8564 -7848.7583 8581.4033 v
-7849.5762 8578.8604 -7847.3071 8579.1338 v
-7844.2222 8579.4063 -7843.7681 8584.6709 v
-7843.5864 8585.9404 -7843.4038 8586.3037 v
-7842.7695 8590.8408 -7842.1343 8590.75 v
-7839.6841 8590.1143 -7839.0498 8588.21 v
-7838.2319 8585.124 -7837.959 8585.0322 v
-7837.5977 8584.0342 -7837.5977 8583.126 v
-7837.1426 8579.9502 -7836.9609 8579.5869 v
-7836.145 8575.3213 -7835.8726 8575.0498 v
-7835.5098 8574.3232 -7835.4194 8573.2354 v
-7834.2393 8568.6982 -7832.8774 8568.8799 v
-7830.1553 8568.335 -7831.4258 8572.6006 v
-7831.9697 8574.0518 l
-7832.5142 8575.5947 -7832.4238 8576.3203 v
-7832.4238 8579.043 -7832.6958 8579.8594 v
-7832.9688 8583.2178 -7833.1494 8583.8525 v
-7833.4214 8585.124 -7832.6958 8585.3955 v
-7832.4238 8586.2119 -7831.8794 8584.0342 v
-7830.8818 8579.7695 -7830.5186 8579.6787 v
-7828.9751 8574.6875 -7828.4312 8574.5967 v
-7827.0698 8570.9658 -7826.7974 8570.875 v
-7825.981 8568.5156 -7823.7119 8569.333 v
-7822.4414 8570.875 -7823.9839 8573.1436 v
-7825.1641 8576.4131 -7825.1641 8576.8643 v
-7826.1626 8580.5859 -7826.4346 8581.04 v
-7827.6143 8586.665 -7827.9775 8587.1201 v
-7827.7969 8588.6631 -7826.7974 8586.5752 v
-7825.5273 8583.9443 -7824.6201 8583.0361 v
-7823.0767 8580.042 -7822.8047 8579.8594 v
-7822.4414 8578.5889 -7822.0786 8577.8623 v
-7821.1714 8573.5986 -7819.3569 8574.0518 v
-7817.1777 8574.1416 -7818.3584 8577.4092 v
-7819.1743 8579.9502 -7819.6279 8580.5859 v
-7821.0801 8585.667 -7821.7153 8586.2119 v
-7824.438 8591.3857 -7824.3481 8591.6572 v
-7823.4399 8593.5635 -7822.2598 8591.8389 v
-7821.1714 8590.8408 -7820.4448 8590.3867 v
-7818.3584 8588.6631 -7817.813 8587.9375 v
-7816.6328 8586.8477 -7816.1802 8585.8486 v
-7814.0918 8582.6729 -7812.9126 8583.6719 v
-7810.7354 8584.8516 -7814.8193 8589.2979 v
-7817.2681 8592.2021 -7817.7222 8592.7471 v
-7821.2617 8596.5576 -7821.4434 8597.1025 v
-7825.3457 8604 -7825.3457 8604.5439 v
-7827.6143 8607.5186 -7829.8833 8609.0615 v
-7832.8838 8611 -7836.7798 8609.0615 v
-7839.6353 8608.4502 l
-7843.5864 8606.7227 -7844.2222 8604.2725 v
-7847.1265 8597.4658 -7847.1265 8592.3838 v
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed 10)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7893.5 8611.5 m
-7799.6504 8611.5 L
-7799.6504 8550.8789 L
-7893.5 8550.8789 L
-7893.5 8611.5 L
nuu0 O
0.6235 0.4745 0.9922 0.4627 k
0 R
0 0 0 1 K
1 J 1 j-7820.9463 8600.7217 m
-7829.3887 8593.8301 l
-7829.3887 8581.2402 l
-7820.9463 8588.1309 l
-7820.9463 8600.7217 l
b0.2549 0.1804 0.149 0.0275 k
-7820.9463 8558.2705 m
-7829.3887 8551.3789 l
-7808.5903 8568.3594 l
-7800.1504 8575.252 l
-7820.9463 8558.2705 l
b0.4941 0.3569 0.7294 0.2078 k
-7820.9463 8570.8613 m
-7829.3887 8563.9688 l
-7829.3887 8551.3789 l
-7820.9463 8558.2705 l
-7820.9463 8570.8613 l
b0.3529 0.2353 0.7961 0.0706 k
-7850 8576.791 m
-7858.4414 8569.8984 l
-7829.3887 8563.9688 l
-7820.9463 8570.8613 l
-7850 8576.791 l
b0.6235 0.4745 0.9922 0.4627 k
-7884.5601 8611 m
-7893 8604.1094 l
-7874.8535 8581.8867 l
-7866.4146 8588.7773 l
-7884.5601 8611 l
b0.2549 0.1804 0.149 0.0275 k
-7859.6855 8568.8838 m
-7868.125 8561.9941 l
-7858.4414 8569.8984 l
-7850 8576.791 l
-7859.6855 8568.8838 l
b0.0314 0.0196 0.9137 0 k
-7866.4146 8588.7773 m
-7884.5601 8573.9609 L
-7859.6855 8568.8838 L
-7850 8576.791 L
-7820.9463 8570.8613 L
-7820.9463 8558.2705 L
-7800.1504 8575.252 L
-7820.9463 8600.7217 L
-7820.9463 8588.1309 L
-7850 8594.0625 L
-7859.6855 8605.9219 L
-7884.5601 8611 L
-7866.4146 8588.7773 L
b0.3529 0.2353 0.7961 0.0706 k
-7884.5601 8573.9609 m
-7893 8567.0703 l
-7868.125 8561.9941 l
-7859.6855 8568.8838 l
-7884.5601 8573.9609 l
bUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed 15)
0 A
uu0 J 0 j 1 w 4 M []0 d0 XR
-7894 8612 m
-7894 8586.209 L
-7866.0703 8586.209 L
-7866.0703 8612 L
-7894 8612 L
n0 O
0.9255 0 1 0 k
-7866.0703 8596.3281 m
-7867.0688 8595.5742 -7868.0625 8594.7305 -7869.1138 8593.792 c
-7874.5679 8588.916 -7879.084 8588.5254 -7881.7202 8590.1777 c
-7883.3599 8591.209 -7884.084 8593.376 -7883.7222 8594.5098 c
-7883.1206 8596.3994 -7881.3999 8597.0371 -7880.0591 8596.1094 C
-7881.2969 8595.3867 -7880.7778 8593.6406 -7878.9336 8593.9961 c
-7876.252 8594.5117 -7876.5039 8598.0859 -7878.0054 8599.875 c
-7880.0039 8602.2539 -7883.7983 8604.502 -7893.999 8596.3301 C
-7893.999 8586.207 l
-7866.0718 8586.207 l
-7866.0703 8596.3281 L
f0.9569 0.9294 0 0 k
-7866.0703 8605.1953 m
-7866.0703 8596.3281 L
-7867.0688 8595.5742 -7868.0625 8594.7305 -7869.1138 8593.792 c
-7874.5679 8588.916 -7879.084 8588.5254 -7881.7202 8590.1777 c
-7883.3599 8591.209 -7884.084 8593.376 -7883.7222 8594.5098 c
-7883.1206 8596.3994 -7881.3999 8597.0371 -7880.0591 8596.1094 C
-7881.2969 8595.3867 -7880.7778 8593.6406 -7878.9336 8593.9961 c
-7876.252 8594.5117 -7876.5039 8598.0859 -7878.0054 8599.875 c
-7880.0039 8602.2539 -7883.7983 8604.502 -7893.999 8596.3301 C
-7893.999 8605.1953 L
-7866.0703 8605.1953 L
fUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed 16)
0 A
uu0 J 0 j 1 w 4 M []0 d0 XR
-7894 8612 m
-7868.1978 8612 L
-7868.1978 8586.207 L
-7894 8586.207 L
-7894 8612 L
nu-7894 8612 m
-7893.9902 8586.208 L
-7868.1992 8586.208 L
-7868.208 8612 L
-7894 8612 L
n0 O
0.9569 0.9294 0 0 k
-7875.2466 8591.6699 m
-7881.8584 8587.7891 -7887.1816 8588.7949 -7889.7153 8591.3457 c
-7891.0786 8592.7227 -7891.291 8594.9961 -7890.6826 8596.0195 c
-7889.668 8597.7227 -7887.8184 8597.9238 -7886.7217 8596.7148 C
-7888.0918 8596.293 -7888.1338 8594.3447 -7886.2734 8594.0879 c
-7882.5176 8593.5713 -7876.0273 8602.2598 -7883.8799 8612 C
-7875 8612 L
-7875 8605.1973 L
-7868.1978 8605.1973 L
-7868.1978 8596.3281 L
-7871.9312 8593.5156 -7873.8159 8592.5088 -7875.2466 8591.6699 c
f0.9255 0 1 0 k
-7883.8799 8612 m
-7876.0273 8602.2598 -7882.5176 8593.5713 -7886.2734 8594.0879 c
-7888.1338 8594.3447 -7888.0918 8596.293 -7886.7217 8596.7148 C
-7887.8184 8597.9238 -7889.668 8597.7227 -7890.6826 8596.0195 c
-7891.291 8594.9961 -7891.0786 8592.7227 -7889.7153 8591.3457 c
-7887.1816 8588.7949 -7881.8584 8587.7891 -7875.2466 8591.6699 c
-7873.8159 8592.5088 -7871.9312 8593.5156 -7868.1978 8596.3281 C
-7868.1978 8586.207 l
-7893.9922 8586.207 l
-7893.9922 8611.998 l
-7883.8799 8612 L
fUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed 19)
0 A
uuuu0 J 0 j 1 w 4 M []0 d0 XR
-7892.9961 8611 m
-7892.9961 8585.4814 L
-7750.1895 8585.4814 L
-7750.1895 8611 L
-7892.9961 8611 L
n0 O
0.0078 0.9529 0 0 k
-7750.1895 8607.2178 m
-7750.1895 8589.2646 L
-7892.9961 8589.2646 L
-7892.9961 8607.2178 L
-7750.1895 8607.2178 L
f*u
1 D
0.0314 0.0196 0.8078 0 k
-7820.8618 8600.7793 m
-7820.8618 8600.334 -7820.7129 8599.1621 -7820.1738 8598.4375 c
-7819.4863 8597.5078 -7818.8535 8596.9316 -7817.3306 8596.9316 c
-7816.2886 8596.9316 -7815.4702 8597.8994 -7815.4702 8598.9395 c
-7815.4702 8599.9805 -7816.1406 8601.0957 -7816.8657 8601.5234 c
-7816.8657 8600.2969 -7817.3672 8599.5342 -7818.7246 8599.5342 c
-7819.5791 8599.5342 -7820.1914 8600.1484 -7820.1914 8600.7793 c
-7819.8022 8600.7793 -7819.3926 8601.0215 -7819.3926 8601.5049 c
-7819.6719 8601.3379 -7819.9146 8601.2266 -7820.1914 8601.2266 c
-7820.1914 8601.6719 -7820.043 8602.1934 -7819.6904 8602.5645 c
-7819.6162 8602.1934 -7819.4673 8601.8945 -7819.1694 8601.8945 c
-7818.8159 8601.8945 -7818.4824 8602.2852 -7818.4824 8602.7129 c
-7818.4824 8603.1602 -7818.7422 8603.5127 -7819.1895 8603.5127 c
-7819.9312 8603.5127 -7820.7129 8602.5645 -7820.7871 8601.2266 c
-7821.1592 8601.2266 L
-7821.1592 8601.6914 -7821.123 8602.0625 -7821.0098 8602.3418 c
-7820.9351 8602.5449 -7820.8618 8602.7324 -7820.8618 8602.918 c
-7820.8618 8603.1777 -7821.2334 8604.1074 -7821.5313 8604.7773 c
-7821.8281 8604.1074 -7822.2002 8603.1777 -7822.2002 8602.918 c
-7822.2002 8602.7324 -7822.125 8602.5449 -7822.0513 8602.3418 c
-7821.939 8602.0625 -7821.9023 8601.6914 -7821.9023 8601.2266 c
-7822.2744 8601.2266 L
-7822.3486 8602.5645 -7823.1289 8603.5127 -7823.873 8603.5127 c
-7824.3193 8603.5127 -7824.5801 8603.1602 -7824.5801 8602.7129 c
-7824.5801 8602.2852 -7824.2441 8601.8945 -7823.8906 8601.8945 c
-7823.5938 8601.8945 -7823.4458 8602.1934 -7823.3711 8602.5645 c
-7823.0176 8602.1934 -7822.8687 8601.6719 -7822.8687 8601.2266 c
-7823.1489 8601.2266 -7823.3896 8601.3379 -7823.668 8601.5049 c
-7823.668 8601.0215 -7823.2598 8600.7793 -7822.8687 8600.7793 c
-7822.8687 8600.1484 -7823.4824 8599.5342 -7824.3374 8599.5342 c
-7825.6953 8599.5342 -7826.1978 8600.2969 -7826.1978 8601.5234 c
-7826.9214 8601.0957 -7827.5898 8599.9805 -7827.5898 8598.9395 c
-7827.5898 8597.8994 -7826.7734 8596.9316 -7825.7329 8596.9316 c
-7824.207 8596.9316 -7823.5762 8597.5078 -7822.8887 8598.4375 c
-7822.3486 8599.1621 -7822.2002 8600.334 -7822.2002 8600.7793 c
-7821.9023 8600.7793 L
-7821.9023 8599.7207 -7822.3857 8598.6602 -7822.8687 8597.75 c
-7823.0918 8597.3232 -7823.3535 8596.8027 -7823.3535 8596.3379 c
-7823.3535 8595.7793 -7823.0918 8595.166 -7822.7207 8594.4961 c
-7822.3672 8593.8457 -7821.8657 8592.8789 -7821.5313 8592.0625 c
-7821.1953 8592.8789 -7820.6943 8593.8457 -7820.3418 8594.4961 c
-7819.9688 8595.166 -7819.709 8595.7793 -7819.709 8596.3379 c
-7819.709 8596.8027 -7819.9688 8597.3232 -7820.1914 8597.75 c
-7820.6758 8598.6602 -7821.1592 8599.7207 -7821.1592 8600.7793 C
-7820.8618 8600.7793 l
f*U
*u
-7893 8592.0625 m
-7892.666 8592.8789 -7892.1641 8593.8457 -7891.8105 8594.4961 c
-7891.439 8595.166 -7891.1802 8595.7793 -7891.1802 8596.3379 c
-7891.1802 8596.8027 -7891.439 8597.3232 -7891.6626 8597.75 c
-7892.1455 8598.6602 -7892.6289 8599.7207 -7892.6289 8600.7793 C
-7892.332 8600.7793 l
-7892.332 8600.334 -7892.1826 8599.1621 -7891.6426 8598.4375 c
-7890.9561 8597.5078 -7890.3242 8596.9316 -7888.7998 8596.9316 c
-7887.7578 8596.9316 -7886.9414 8597.8994 -7886.9414 8598.9395 c
-7886.9414 8599.9805 -7887.6094 8601.0957 -7888.335 8601.5234 c
-7888.335 8600.2969 -7888.8369 8599.5342 -7890.1934 8599.5342 c
-7891.0488 8599.5342 -7891.6626 8600.1484 -7891.6626 8600.7793 c
-7891.271 8600.7793 -7890.8633 8601.0215 -7890.8633 8601.5049 c
-7891.1426 8601.3379 -7891.3823 8601.2266 -7891.6626 8601.2266 c
-7891.6626 8601.6719 -7891.5137 8602.1934 -7891.1602 8602.5645 c
-7891.0854 8602.1934 -7890.9375 8601.8945 -7890.6406 8601.8945 c
-7890.2871 8601.8945 -7889.9521 8602.2852 -7889.9521 8602.7129 c
-7889.9521 8603.1602 -7890.2129 8603.5127 -7890.6582 8603.5127 c
-7891.4023 8603.5127 -7892.1826 8602.5645 -7892.2578 8601.2266 c
-7892.6289 8601.2266 L
-7892.6289 8601.6914 -7892.5918 8602.0625 -7892.481 8602.3418 c
-7892.4063 8602.5449 -7892.332 8602.7324 -7892.332 8602.918 c
-7892.332 8603.1777 -7892.7031 8604.1074 -7893 8604.7773 c
-7893 8592.0625 l
f*U
*u
-7750.1914 8604.7773 m
-7750.4902 8604.1074 -7750.8623 8603.1777 -7750.8623 8602.918 c
-7750.8623 8602.7324 -7750.7871 8602.5449 -7750.7129 8602.3418 c
-7750.6016 8602.0625 -7750.5654 8601.6914 -7750.5654 8601.2266 C
-7750.9346 8601.2266 l
-7751.0098 8602.5645 -7751.791 8603.5127 -7752.5352 8603.5127 c
-7752.9814 8603.5127 -7753.2402 8603.1602 -7753.2402 8602.7129 c
-7753.2402 8602.2852 -7752.9063 8601.8945 -7752.5527 8601.8945 c
-7752.2559 8601.8945 -7752.1074 8602.1934 -7752.0342 8602.5645 c
-7751.6807 8602.1934 -7751.5313 8601.6719 -7751.5313 8601.2266 c
-7751.8096 8601.2266 -7752.0518 8601.3379 -7752.3311 8601.5049 c
-7752.3311 8601.0215 -7751.9209 8600.7793 -7751.5313 8600.7793 c
-7751.5313 8600.1484 -7752.1455 8599.5342 -7753 8599.5342 c
-7754.3574 8599.5342 -7754.8584 8600.2969 -7754.8584 8601.5234 c
-7755.583 8601.0957 -7756.252 8599.9805 -7756.252 8598.9395 c
-7756.252 8597.8994 -7755.4346 8596.9316 -7754.3936 8596.9316 c
-7752.8682 8596.9316 -7752.2383 8597.5078 -7751.5488 8598.4375 c
-7751.0098 8599.1621 -7750.8623 8600.334 -7750.8623 8600.7793 c
-7750.5654 8600.7793 L
-7750.5654 8599.7207 -7751.0479 8598.6602 -7751.5313 8597.75 c
-7751.7529 8597.3232 -7752.0137 8596.8027 -7752.0137 8596.3379 c
-7752.0137 8595.7793 -7751.7529 8595.166 -7751.3818 8594.4961 c
-7751.0303 8593.8457 -7750.5273 8592.8789 -7750.1914 8592.0625 c
-7750.1914 8604.7773 l
f*U
0 D
-7866.2617 8595.5889 m
-7869.71 8594.3809 -7875.4463 8591.6367 -7879.4863 8594.1826 c
-7880.9946 8595.1328 -7881.9102 8596.1426 -7882.0625 8598.3516 c
-7882.3418 8602.3994 -7878.7129 8603.8262 -7877.457 8604.1406 c
-7874.8887 8604.7822 -7872.3618 8603.6797 -7871.4336 8602.9609 c
-7870.1694 8601.9814 -7870.0649 8600.8672 -7869.9766 8601.0342 c
-7869.8862 8601.2012 -7870.0713 8602.083 -7870.7402 8602.8652 C
-7872.8008 8604.8721 -7875.082 8605.25 -7877.9072 8604.6523 c
-7878.2832 8604.5723 -7882.3442 8603.8457 -7883.0854 8599.0703 C
-7883.1641 8598.2266 -7883.4434 8595.125 -7879.7656 8592.9258 c
-7875.3926 8590.3125 -7869.708 8592.1484 -7865.9863 8593.3867 c
-7863.9609 8594.083 -7862.5854 8594.7402 -7861.2168 8595.3242 c
-7861.1074 8595.3691 -7849.1055 8600.5938 -7848.168 8600.9199 c
-7844.7207 8602.127 -7838.9839 8604.8721 -7834.9458 8602.3262 c
-7833.4375 8601.375 -7832.5215 8600.3652 -7832.3687 8598.1563 c
-7832.0898 8594.1094 -7835.7183 8592.6816 -7836.9727 8592.3682 c
-7839.542 8591.7246 -7842.0703 8592.8281 -7842.9961 8593.5469 c
-7844.2598 8594.5273 -7844.3662 8595.6406 -7844.4551 8595.4736 c
-7844.5439 8595.3066 -7844.3594 8594.4248 -7843.6904 8593.6426 C
-7841.6313 8591.6367 -7839.3496 8591.2578 -7836.5234 8591.8555 c
-7836.1465 8591.9355 -7832.0879 8592.6621 -7831.3457 8597.4375 C
-7831.2656 8598.2813 -7830.9878 8601.3838 -7834.666 8603.582 c
-7839.0391 8606.1953 -7844.7222 8604.3594 -7848.4458 8603.1211 c
-7850.4702 8602.4248 -7851.8457 8601.7676 -7853.2144 8601.1836 c
-7853.313 8601.1426 -7865.2671 8595.9336 -7866.2617 8595.5889 c
f-7776.8008 8595.5889 m
-7773.3535 8594.3809 -7767.6182 8591.6367 -7763.5762 8594.1826 c
-7762.0703 8595.1328 -7761.1543 8596.1426 -7761.001 8598.3516 c
-7760.7217 8602.3994 -7764.3506 8603.8262 -7765.6055 8604.1406 c
-7768.1738 8604.7822 -7770.7031 8603.6797 -7771.6289 8602.9609 c
-7772.8926 8601.9814 -7772.998 8600.8672 -7773.0879 8601.0342 c
-7773.1768 8601.2012 -7772.9922 8602.083 -7772.3232 8602.8652 C
-7770.2617 8604.8721 -7767.9814 8605.25 -7765.1553 8604.6523 c
-7764.7793 8604.5723 -7760.7207 8603.8457 -7759.9775 8599.0703 C
-7759.8984 8598.2266 -7759.6201 8595.125 -7763.2969 8592.9258 c
-7767.6719 8590.3125 -7773.3545 8592.1484 -7777.0762 8593.3867 c
-7779.1025 8594.083 -7780.4785 8594.7402 -7781.8486 8595.3242 c
-7781.9551 8595.3691 -7793.958 8600.5938 -7794.8945 8600.9199 c
-7798.3418 8602.127 -7804.0791 8604.8721 -7808.1191 8602.3262 c
-7809.627 8601.375 -7810.542 8600.3652 -7810.6953 8598.1563 c
-7810.9746 8594.1094 -7807.3457 8592.6816 -7806.0898 8592.3682 c
-7803.5215 8591.7246 -7800.9951 8592.8281 -7800.0664 8593.5469 c
-7798.8018 8594.5273 -7798.6982 8595.6406 -7798.6074 8595.4736 c
-7798.5186 8595.3066 -7798.7031 8594.4248 -7799.373 8593.6426 C
-7801.4336 8591.6367 -7803.7158 8591.2578 -7806.5391 8591.8555 c
-7806.916 8591.9355 -7810.9766 8592.6621 -7811.7178 8597.4375 C
-7811.7969 8598.2813 -7812.0762 8601.3838 -7808.3984 8603.582 c
-7804.0234 8606.1953 -7798.3408 8604.3594 -7794.6182 8603.1211 c
-7792.5938 8602.4248 -7791.2178 8601.7676 -7789.8486 8601.1836 c
-7789.75 8601.1426 -7777.7959 8595.9336 -7776.8008 8595.5889 c
f0.0078 0.9529 0 0 k
-7750.1914 8586.5293 m
-7750.1914 8585.4814 L
-7892.9961 8585.4814 L
-7892.9961 8586.5293 L
-7750.1914 8586.5293 L
f0.0314 0.0196 0.8078 0 k
-7750.1914 8588.1006 m
-7750.1914 8587.751 L
-7892.9961 8587.751 L
-7892.9961 8588.1006 L
-7750.1914 8588.1006 L
f0.0078 0.9529 0 0 k
-7750.1914 8609.9521 m
-7750.1914 8611 L
-7892.9961 8611 L
-7892.9961 8609.9521 L
-7750.1914 8609.9521 L
f0.0314 0.0196 0.8078 0 k
-7750.1914 8608.3818 m
-7750.1914 8608.7305 L
-7892.9961 8608.7305 L
-7892.9961 8608.3818 L
-7750.1914 8608.3818 L
f-7877.0703 8598.7305 m
-7877.0703 8599.2441 -7876.6694 8599.6426 -7876.1558 8599.6426 c
-7875.645 8599.6426 -7875.2441 8599.2441 -7875.2441 8598.7305 c
-7875.2441 8598.7305 l
-7875.2441 8598.2178 -7875.645 8597.8174 -7876.1558 8597.8174 c
-7876.6694 8597.8174 -7877.0703 8598.2178 -7877.0703 8598.7305 c
-7877.0703 8598.7305 l
f-7839.3594 8597.7988 m
-7839.3594 8598.3125 -7838.9609 8598.7119 -7838.4473 8598.7119 c
-7837.9346 8598.7119 -7837.5352 8598.3125 -7837.5352 8597.7988 c
-7837.5352 8597.7988 l
-7837.5352 8597.2871 -7837.9346 8596.8867 -7838.4473 8596.8867 c
-7838.9609 8596.8867 -7839.3594 8597.2871 -7839.3594 8597.7988 c
-7839.3594 8597.7988 l
f-7766.1504 8598.7305 m
-7766.1504 8598.2178 -7766.5498 8597.8174 -7767.0625 8597.8174 c
-7767.5762 8597.8174 -7767.9766 8598.2178 -7767.9766 8598.7305 c
-7767.9766 8598.7305 l
-7767.9766 8599.2441 -7767.5762 8599.6426 -7767.0625 8599.6426 c
-7766.5498 8599.6426 -7766.1504 8599.2441 -7766.1504 8598.7305 c
-7766.1504 8598.7305 l
f-7803.8618 8597.7988 m
-7803.8618 8597.2871 -7804.2598 8596.8867 -7804.7734 8596.8867 c
-7805.2871 8596.8867 -7805.6855 8597.2871 -7805.6855 8597.7988 c
-7805.6855 8597.7988 l
-7805.6855 8598.3125 -7805.2871 8598.7119 -7804.7734 8598.7119 c
-7804.2598 8598.7119 -7803.8618 8598.3125 -7803.8618 8597.7988 c
-7803.8618 8597.7988 l
fUUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed 20)
0 A
uuuu0 J 0 j 1 w 4 M []0 d0 XR
-7893 8610.9961 m
-7893 8585.4785 L
-7867.4824 8585.4785 L
-7867.4824 8610.9961 L
-7893 8610.9961 L
n0 O
0.0078 0.9529 0 0 k
-7867.4824 8589.2617 m
-7889.2178 8589.2617 L
-7889.2178 8610.9961 L
-7871.2646 8610.9961 L
-7871.2646 8607.2139 L
-7867.4824 8607.2139 L
-7867.4824 8589.2617 L
f*u
1 D
0.0314 0.0196 0.8078 0 k
-7867.4814 8604.7734 m
-7867.7793 8604.1045 -7868.1504 8603.1748 -7868.1504 8602.9141 c
-7868.1504 8602.7285 -7868.0762 8602.543 -7868.002 8602.3379 c
-7867.8906 8602.0586 -7867.8535 8601.6875 -7867.8535 8601.2227 C
-7868.2246 8601.2227 l
-7868.2998 8602.5605 -7869.0801 8603.5098 -7869.8242 8603.5098 c
-7870.2695 8603.5098 -7870.5303 8603.1553 -7870.5303 8602.71 c
-7870.5303 8602.2832 -7870.1953 8601.8926 -7869.8418 8601.8926 c
-7869.5449 8601.8926 -7869.3975 8602.1895 -7869.3223 8602.5605 c
-7868.9688 8602.1895 -7868.8193 8601.6689 -7868.8193 8601.2227 c
-7869.0986 8601.2227 -7869.3398 8601.334 -7869.6191 8601.502 c
-7869.6191 8601.0176 -7869.21 8600.7764 -7868.8193 8600.7764 c
-7868.8193 8600.1445 -7869.4336 8599.5313 -7870.2881 8599.5313 c
-7871.6455 8599.5313 -7872.1465 8600.2939 -7872.1465 8601.5195 c
-7872.8721 8601.0938 -7873.541 8599.9785 -7873.541 8598.9355 c
-7873.541 8597.8955 -7872.7217 8596.9297 -7871.6816 8596.9297 c
-7870.1582 8596.9297 -7869.5254 8597.5049 -7868.8369 8598.4346 c
-7868.2998 8599.1602 -7868.1504 8600.3301 -7868.1504 8600.7764 c
-7867.8535 8600.7764 L
-7867.8535 8599.7168 -7868.3359 8598.6582 -7868.8193 8597.7461 c
-7869.043 8597.3193 -7869.3018 8596.7988 -7869.3018 8596.334 c
-7869.3018 8595.7764 -7869.043 8595.1621 -7868.6719 8594.4941 c
-7868.3184 8593.8428 -7867.8154 8592.877 -7867.4814 8592.0586 c
-7867.4814 8604.7734 l
f*U
*u
-7886.418 8610.998 m
-7885.6006 8610.6641 -7884.6328 8610.1621 -7883.9824 8609.8086 c
-7883.3135 8609.4355 -7882.7002 8609.1758 -7882.1426 8609.1758 c
-7881.6777 8609.1758 -7881.1558 8609.4355 -7880.7295 8609.6602 c
-7879.8184 8610.1436 -7878.7578 8610.627 -7877.6992 8610.626 C
-7877.6992 8610.3291 l
-7878.1455 8610.3291 -7879.3174 8610.1797 -7880.042 8609.6406 c
-7880.9697 8608.9531 -7881.5479 8608.3213 -7881.5479 8606.7969 c
-7881.5479 8605.7559 -7880.5801 8604.9375 -7879.5391 8604.9375 c
-7878.498 8604.9375 -7877.3818 8605.6064 -7876.9561 8606.332 c
-7878.1826 8606.332 -7878.9463 8606.834 -7878.9463 8608.1904 c
-7878.9463 8609.0469 -7878.332 8609.6602 -7877.6992 8609.6602 c
-7877.6992 8609.2695 -7877.458 8608.8604 -7876.9746 8608.8604 c
-7877.1416 8609.1396 -7877.2529 8609.3809 -7877.2529 8609.6602 c
-7876.8066 8609.6602 -7876.2871 8609.5107 -7875.915 8609.1582 c
-7876.2871 8609.084 -7876.584 8608.9346 -7876.584 8608.6367 c
-7876.584 8608.2842 -7876.1934 8607.9492 -7875.7656 8607.9492 c
-7875.3193 8607.9492 -7874.9658 8608.209 -7874.9658 8608.6553 c
-7874.9658 8609.3994 -7875.915 8610.1797 -7877.2529 8610.2549 c
-7877.2529 8610.627 L
-7876.7881 8610.627 -7876.417 8610.5889 -7876.1377 8610.4785 c
-7875.9336 8610.4033 -7875.748 8610.3291 -7875.5615 8610.3291 c
-7875.3008 8610.3291 -7874.3721 8610.7002 -7873.7031 8610.998 c
-7886.418 8610.998 l
f*U
0 D
0.0078 0.9529 0 0 k
-7867.4766 8585.4785 m
-7893 8585.4785 L
-7892.998 8585.4834 L
-7892.998 8611 L
-7891.9502 8611 L
-7891.9502 8586.5254 L
-7867.4766 8586.5254 L
-7867.4766 8585.4785 L
f0.0314 0.0196 0.8078 0 k
-7867.4766 8587.748 m
-7890.7305 8587.748 L
-7890.7266 8587.7529 L
-7890.7295 8587.7529 L
-7890.7295 8611 L
-7890.3799 8611 L
-7890.3799 8588.0977 L
-7867.4766 8588.0977 L
-7867.4766 8587.748 L
f-7867.4814 8608.3779 m
-7870.0986 8608.377 L
-7870.0977 8610.9961 L
-7869.749 8610.9961 L
-7869.749 8608.7275 L
-7867.4814 8608.7275 L
-7867.4814 8608.3779 L
f0.0078 0.9529 0 0 k
-7868.5303 8609.9492 m
-7868.5303 8610.9961 L
-7867.4824 8610.9961 L
-7867.4824 8609.9492 L
-7868.5303 8609.9492 L
f0.0314 0.0196 0.8078 0 k
-7881.5938 8593.7559 m
-7885.3936 8593.085 L
-7884.7217 8596.8848 L
-7880.9209 8597.5566 L
-7881.5938 8593.7559 L
fUUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed 21)
0 A
uuu0 J 0 j 1 w 4 M []0 d0 XR
-7893 8610.9971 m
-7893 8585.4795 L
-7867.4824 8585.4795 L
-7867.4824 8610.9971 L
-7893 8610.9971 L
n/BBAccumRotation (6.283186) XT
0 O
0.0078 0.9529 0 0 k
-7867.4824 8589.2627 m
-7889.2178 8589.2627 L
-7889.2178 8610.9971 L
-7871.2646 8610.9971 L
-7871.2646 8607.2148 L
-7867.4824 8607.2148 L
-7867.4824 8589.2627 L
f/BBAccumRotation (6.283186) XT
*u
0.0314 0.0196 0.8078 0 k
-7867.4824 8591.7002 m
-7867.7793 8592.3691 -7868.1514 8593.2988 -7868.1514 8593.5596 c
-7868.1514 8593.7451 -7868.0762 8593.9307 -7868.0039 8594.1357 c
-7867.8906 8594.415 -7867.8545 8594.7861 -7867.8545 8595.251 C
-7868.2256 8595.251 l
-7868.2998 8593.9131 -7869.0801 8592.9639 -7869.8262 8592.9639 c
-7870.2705 8592.9639 -7870.5303 8593.3184 -7870.5303 8593.7637 c
-7870.5303 8594.1904 -7870.1953 8594.5811 -7869.8442 8594.5811 c
-7869.5449 8594.5811 -7869.3975 8594.2842 -7869.3232 8593.9131 c
-7868.9697 8594.2842 -7868.8223 8594.8047 -7868.8223 8595.251 c
-7869.0986 8595.251 -7869.3408 8595.1396 -7869.6201 8594.9717 c
-7869.6201 8595.4561 -7869.2119 8595.6973 -7868.8223 8595.6973 c
-7868.8223 8596.3291 -7869.4346 8596.9424 -7870.2881 8596.9424 c
-7871.6455 8596.9424 -7872.1465 8596.1797 -7872.1465 8594.9541 c
-7872.873 8595.3799 -7873.542 8596.4951 -7873.542 8597.5381 c
-7873.542 8598.5781 -7872.7222 8599.5439 -7871.6826 8599.5439 c
-7870.1592 8599.5439 -7869.5264 8598.9688 -7868.8398 8598.0391 c
-7868.2998 8597.3135 -7868.1514 8596.1436 -7868.1514 8595.6973 c
-7867.8545 8595.6973 L
-7867.8545 8596.7568 -7868.3369 8597.8154 -7868.8223 8598.7275 c
-7869.0439 8599.1543 -7869.3047 8599.6748 -7869.3047 8600.1396 c
-7869.3047 8600.6973 -7869.0439 8601.3115 -7868.6729 8601.9795 c
-7868.3193 8602.6309 -7867.8174 8603.5967 -7867.4824 8604.415 c
-7867.4824 8591.7002 l
f/BBAccumRotation (6.283186) XT
*U
*u
-7874.0625 8610.9932 m
-7874.8818 8610.6592 -7875.8486 8610.1572 -7876.499 8609.8037 c
-7877.168 8609.4307 -7877.7822 8609.1709 -7878.3398 8609.1709 c
-7878.8047 8609.1709 -7879.3242 8609.4307 -7879.752 8609.6553 c
-7880.6631 8610.1387 -7881.7222 8610.6221 -7882.7822 8610.6211 C
-7882.7822 8610.3242 l
-7882.3359 8610.3242 -7881.165 8610.1748 -7880.4385 8609.6357 c
-7879.5098 8608.9482 -7878.9346 8608.3164 -7878.9346 8606.792 c
-7878.9346 8605.751 -7879.9014 8604.9326 -7880.9424 8604.9326 c
-7881.9834 8604.9326 -7883.0986 8605.6016 -7883.5254 8606.3271 c
-7882.2998 8606.3271 -7881.5361 8606.8291 -7881.5361 8608.1855 c
-7881.5361 8609.042 -7882.1494 8609.6553 -7882.7822 8609.6553 c
-7882.7822 8609.2646 -7883.0234 8608.8555 -7883.5078 8608.8555 c
-7883.3398 8609.1348 -7883.2266 8609.376 -7883.2266 8609.6553 c
-7883.6758 8609.6553 -7884.1943 8609.5059 -7884.5664 8609.1533 c
-7884.1943 8609.0791 -7883.8975 8608.9297 -7883.8975 8608.6318 c
-7883.8975 8608.2793 -7884.2881 8607.9443 -7884.7158 8607.9443 c
-7885.1602 8607.9443 -7885.5137 8608.2041 -7885.5137 8608.6504 c
-7885.5137 8609.3945 -7884.5664 8610.1748 -7883.2266 8610.25 c
-7883.2266 8610.6221 L
-7883.6934 8610.6221 -7884.0654 8610.584 -7884.3447 8610.4736 c
-7884.5479 8610.3984 -7884.7334 8610.3242 -7884.9199 8610.3242 c
-7885.1807 8610.3242 -7886.1094 8610.6953 -7886.7783 8610.9932 c
-7874.0625 8610.9932 l
f/BBAccumRotation (6.283186) XT
*U
0.0078 0.9529 0 0 k
-7867.4766 8585.4795 m
-7893 8585.4795 L
-7892.998 8585.4844 L
-7892.998 8611 L
-7891.9502 8611 L
-7891.9502 8586.5264 L
-7867.4766 8586.5264 L
-7867.4766 8585.4795 L
f/BBAccumRotation (6.283186) XT
0.0314 0.0196 0.8078 0 k
-7867.4766 8587.749 m
-7890.7305 8587.749 L
-7890.7266 8587.7539 L
-7890.7295 8587.7539 L
-7890.7295 8611 L
-7890.3799 8611 L
-7890.3799 8588.0986 L
-7867.4766 8588.0986 L
-7867.4766 8587.749 L
f/BBAccumRotation (6.283186) XT
-7867.4814 8608.3789 m
-7870.0986 8608.3779 L
-7870.0977 8610.9971 L
-7869.749 8610.9971 L
-7869.749 8608.7285 L
-7867.4814 8608.7285 L
-7867.4814 8608.3789 L
f/BBAccumRotation (6.283186) XT
0.0078 0.9529 0 0 k
-7868.5303 8609.9502 m
-7868.5303 8610.9971 L
-7867.4824 8610.9971 L
-7867.4824 8609.9502 L
-7868.5303 8609.9502 L
f/BBAccumRotation (6.283186) XT
0.0314 0.0196 0.8078 0 k
-7881.5938 8593.7568 m
-7885.3936 8593.0859 L
-7884.7217 8596.8857 L
-7880.9209 8597.5576 L
-7881.5938 8593.7568 L
f/BBAccumRotation (6.283186) XT
UUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed 22)
0 A
uuuuu0 J 0 j 1 w 4 M []0 d0 XR
-7893 8610.9971 m
-7893 8585.4795 L
-7879.4834 8585.4795 L
-7879.4834 8610.9971 L
-7893 8610.9971 L
n0 O
0.0078 0.9529 0 0 k
-7879.4834 8589.2627 m
-7889.2178 8589.2627 L
-7889.2178 8607.2148 L
-7879.4834 8607.2148 L
-7879.4834 8589.2627 L
f*u
0.0314 0.0196 0.8078 0 k
-7879.4814 8592.0596 m
-7879.8154 8592.8779 -7880.3184 8593.8438 -7880.6719 8594.4951 c
-7881.043 8595.1631 -7881.3018 8595.7773 -7881.3018 8596.335 c
-7881.3018 8596.7998 -7881.043 8597.3203 -7880.8193 8597.7471 c
-7880.3359 8598.6592 -7879.8545 8599.7178 -7879.8545 8600.7773 C
-7880.1514 8600.7773 l
-7880.1514 8600.3311 -7880.2998 8599.1611 -7880.8369 8598.4355 c
-7881.5254 8597.5059 -7882.1582 8596.9307 -7883.6826 8596.9307 c
-7884.7217 8596.9307 -7885.542 8597.8965 -7885.542 8598.9365 c
-7885.542 8599.9795 -7884.8721 8601.0947 -7884.1465 8601.5205 c
-7884.1465 8600.2949 -7883.6455 8599.5322 -7882.2881 8599.5322 c
-7881.4346 8599.5322 -7880.8193 8600.1455 -7880.8193 8600.7773 c
-7881.21 8600.7773 -7881.6191 8601.0186 -7881.6191 8601.5029 c
-7881.3398 8601.335 -7881.0986 8601.2236 -7880.8193 8601.2236 c
-7880.8193 8601.6699 -7880.9697 8602.1904 -7881.3232 8602.5615 c
-7881.3975 8602.1904 -7881.5449 8601.8936 -7881.8442 8601.8936 c
-7882.1953 8601.8936 -7882.5303 8602.2842 -7882.5303 8602.7109 c
-7882.5303 8603.1563 -7882.2705 8603.5107 -7881.8262 8603.5107 c
-7881.0801 8603.5107 -7880.2998 8602.5615 -7880.2246 8601.2236 c
-7879.8545 8601.2236 L
-7879.8545 8601.6885 -7879.8906 8602.0596 -7880.0039 8602.3389 c
-7880.0762 8602.5439 -7880.1514 8602.7295 -7880.1514 8602.915 c
-7880.1514 8603.1758 -7879.7793 8604.1055 -7879.4814 8604.7744 c
-7879.4814 8592.0596 l
f*U
-7890.3799 8608.3789 m
-7890.3799 8588.0986 L
-7879.4766 8588.0986 L
-7879.4766 8587.749 L
-7890.7305 8587.749 L
-7890.7266 8587.7539 L
-7890.7295 8587.7539 L
-7890.7295 8608.7285 L
-7879.4814 8608.7285 L
-7879.4814 8608.3789 L
-7890.3799 8608.3789 L
f0.0078 0.9529 0 0 k
-7879.4834 8610.9971 m
-7879.4834 8609.9502 L
-7891.9502 8609.9502 L
-7891.9502 8586.5264 L
-7879.4766 8586.5264 L
-7879.4766 8585.4795 L
-7893 8585.4795 L
-7892.998 8585.4844 L
-7892.998 8611 L
-7879.4834 8610.9971 L
fUUUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed 23)
0 A
uuuuu0 J 0 j 1 w 4 M []0 d0 XR
-7879.4766 8610.9971 m
-7879.4766 8585.4795 L
-7892.9951 8585.4795 L
-7892.9951 8610.9971 L
-7879.4766 8610.9971 L
n0 O
0.0078 0.9529 0 0 k
-7892.9951 8589.2627 m
-7883.2598 8589.2627 L
-7883.2598 8607.2148 L
-7892.9951 8607.2148 L
-7892.9951 8589.2627 L
f*u
0.0314 0.0196 0.8078 0 k
-7892.9951 8604.7744 m
-7892.6982 8604.1055 -7892.3262 8603.1758 -7892.3262 8602.915 c
-7892.3262 8602.7295 -7892.3994 8602.5439 -7892.4746 8602.3389 c
-7892.585 8602.0596 -7892.623 8601.6885 -7892.623 8601.2236 C
-7892.252 8601.2236 l
-7892.1777 8602.5615 -7891.3975 8603.5107 -7890.6514 8603.5107 c
-7890.207 8603.5107 -7889.9473 8603.1563 -7889.9473 8602.7109 c
-7889.9473 8602.2842 -7890.2822 8601.8936 -7890.6367 8601.8936 c
-7890.9297 8601.8936 -7891.0801 8602.1904 -7891.1543 8602.5615 c
-7891.5078 8602.1904 -7891.6553 8601.6699 -7891.6553 8601.2236 c
-7891.377 8601.2236 -7891.1367 8601.335 -7890.8574 8601.5029 c
-7890.8574 8601.0186 -7891.2656 8600.7773 -7891.6553 8600.7773 c
-7891.6553 8600.1455 -7891.043 8599.5322 -7890.1895 8599.5322 c
-7888.832 8599.5322 -7888.3311 8600.2949 -7888.3311 8601.5205 c
-7887.6055 8601.0947 -7886.9346 8599.9795 -7886.9346 8598.9365 c
-7886.9346 8597.8965 -7887.7529 8596.9307 -7888.7959 8596.9307 c
-7890.3184 8596.9307 -7890.9512 8597.5059 -7891.6377 8598.4355 c
-7892.1777 8599.1611 -7892.3262 8600.3311 -7892.3262 8600.7773 c
-7892.623 8600.7773 L
-7892.623 8599.7178 -7892.1406 8598.6592 -7891.6553 8597.7471 c
-7891.4336 8597.3203 -7891.1738 8596.7998 -7891.1738 8596.335 c
-7891.1738 8595.7773 -7891.4336 8595.1631 -7891.8047 8594.4951 c
-7892.1582 8593.8438 -7892.6602 8592.8779 -7892.9951 8592.0596 c
-7892.9951 8604.7744 l
f*U
-7882.0977 8608.3789 m
-7882.0977 8588.0986 L
-7893 8588.0986 L
-7893 8587.749 L
-7881.7471 8587.749 L
-7881.75 8587.7539 L
-7881.7471 8587.7539 L
-7881.7471 8608.7285 L
-7892.9961 8608.7285 L
-7892.9961 8608.3789 L
-7882.0977 8608.3789 L
f0.0078 0.9529 0 0 k
-7892.9951 8610.9971 m
-7892.9951 8609.9502 L
-7880.5254 8609.9502 L
-7880.5254 8586.5264 L
-7893 8586.5264 L
-7893 8585.4795 L
-7879.4766 8585.4795 L
-7879.4785 8585.4844 L
-7879.4785 8611 L
-7892.9951 8610.9971 L
fUUUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed 24)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7893 8611 m
-7867.2046 8611 L
-7867.2046 8585.1992 L
-7893 8585.1992 L
-7893 8611 L
nu-7893 8611 m
-7867.208 8610.9902 L
-7867.208 8585.1992 L
-7893 8585.208 L
-7893 8611 L
nu0 O
0.9255 0 1 0 k
-7880.873 8594.998 m
-7879.084 8593.4961 -7875.5098 8593.2441 -7874.9946 8595.9258 c
-7874.6382 8597.7705 -7876.3848 8598.2891 -7877.1074 8597.0508 C
-7878.4736 8598.9355 -7876.6143 8601 -7874.6519 8601.9297 c
-7872.6914 8602.8584 -7869.4912 8602.7549 -7867.207 8600.8701 C
-7867.207 8610.9922 L
-7877.3281 8610.9922 L
-7885.5 8600.791 -7883.252 8596.9961 -7880.873 8594.998 c
f0.9569 0.9294 0 0 k
-7867.2046 8592.0029 m
-7867.2046 8600.8691 L
-7867.2065 8600.8691 -7867.2065 8600.8701 -7867.207 8600.8701 C
-7867.207 8592.0029 L
-7867.2046 8592.0029 L
f-7886.1934 8592.0029 m
-7867.207 8592.0029 L
-7867.207 8600.8701 L
-7869.4912 8602.7549 -7872.6914 8602.8584 -7874.6519 8601.9297 c
-7876.6143 8601 -7878.4736 8598.9355 -7877.1074 8597.0508 C
-7876.3848 8598.2891 -7874.6382 8597.7705 -7874.9946 8595.9258 c
-7875.5098 8593.2441 -7879.084 8593.4961 -7880.873 8594.998 c
-7883.252 8596.9961 -7885.5 8600.791 -7877.3281 8610.9922 C
-7886.1934 8610.9922 L
-7886.1934 8592.0029 L
fUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed 28)
0 A
uuuuu0 J 0 j 1 w 4 M []0 d0 XR
-7868.6538 8611 m
-7868.6538 8586.6582 L
-7892.9961 8586.6582 L
-7892.9961 8611 L
-7868.6538 8611 L
nu0 R
0.8588 0.7294 0 0 K
2 J 1.9633 w-7868.6538 8586.6582 m
-7893 8586.6582 L
S0.8941 0.1373 0 0 K
-7892.9351 8590.7148 m
-7884.8198 8590.7148 L
-7884.8198 8594.7734 L
-7888.877 8594.7734 L
-7888.877 8598.8301 L
-7880.7617 8598.8301 L
-7880.7617 8590.7148 L
-7872.6465 8590.7148 L
-7872.6465 8594.7734 L
-7876.7046 8594.7734 L
-7876.7046 8598.8301 L
-7868.6538 8598.8301 L
-7868.6538 8590.7051 L
S0.8588 0.7294 0 0 K
-7893 8602.8555 m
-7868.6538 8602.8555 L
SUUUUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed 29)
0 A
uuuuu0 J 0 j 1 w 4 M []0 d0 XR
-7868.6582 8611 m
-7868.6582 8586.6602 L
-7893 8586.6602 L
-7893 8611 L
-7868.6582 8611 L
nu0 R
0.8588 0.7294 0 0 K
1.9633 w-7868.6582 8586.6602 m
-7892.999 8586.6602 L
-7892.999 8611 L
S-7876.8022 8611 m
-7876.8022 8602.8574 L
-7868.6582 8602.8574 L
S0.8941 0.1373 0 0 K
-7888.9375 8611 m
-7880.8242 8611 L
-7888.9375 8611 L
-7888.9375 8590.7168 L
-7872.7168 8590.7168 L
-7872.7168 8594.7695 L
-7884.877 8594.7695 L
-7884.877 8606.7793 L
-7880.832 8606.7793 L
-7880.832 8598.8281 L
-7868.6582 8598.8281 L
-7868.6582 8590.709 L
SUUUUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed 3)
0 A
uu0 J 0 j 1 w 4 M []0 d0 XR
-7892.916 8611 m
-7892.916 8599.1504 L
-7833.3154 8599.1504 L
-7833.3154 8611 L
-7892.916 8611 L
nu0 O
0 0 0 1 k
-7834.8159 8605.0303 m
-7834.7866 8605.0723 -7834.7407 8605.0918 -7834.7041 8605.127 C
-7834.811 8605.1602 -7834.8618 8605.1514 -7834.8159 8605.0303 C
f-7833.3154 8605.4922 m
-7833.7026 8605.5049 -7834.3174 8605.5039 -7834.7041 8605.127 C
-7834.3599 8605.0137 -7833.4326 8604.4121 -7833.3154 8605.4922 C
f-7834.8857 8603.2783 m
-7834.4033 8603.6016 L
-7834.6841 8603.8936 -7834.6338 8603.3838 -7834.8857 8603.2783 C
f-7834.7095 8604.2891 m
-7834.7354 8604.6865 L
-7834.9927 8604.2988 L
-7834.7095 8604.2891 L
f-7859.3735 8608.2344 m
-7859.3247 8608.4063 -7859.2935 8608.5928 -7859.3169 8608.834 C
-7859.3735 8608.2344 L
f-7860.4927 8606.4355 m
-7860.5918 8606.3711 -7860.6626 8606.3438 -7860.7222 8606.3271 C
-7860.6538 8606.2969 -7860.5962 8606.3379 -7860.4927 8606.4355 C
f-7858.3599 8608.0684 m
-7858.5566 8608.124 L
-7858.4946 8608.0674 -7858.4238 8608.041 -7858.3599 8608.0684 C
f-7845.9575 8606.5518 m
-7845.7729 8606.8398 -7845.5986 8607.1006 -7845.4658 8607.2783 C
-7845.8247 8607.584 -7845.855 8606.9326 -7845.9575 8606.5518 C
f-7865.6289 8600.6523 m
-7865.6768 8600.9697 L
-7865.729 8600.8262 -7865.7554 8600.6875 -7865.6289 8600.6523 C
f-7860.7598 8601.127 m
-7860.7554 8601.3105 -7860.7666 8601.4463 -7860.7866 8601.5449 C
-7860.8047 8601.5186 -7860.8257 8601.5 -7860.8442 8601.4688 C
-7860.7598 8601.127 L
f-7857.5718 8607.4219 m
-7857.5698 8607.4082 -7857.5649 8607.4004 -7857.561 8607.3867 C
-7857.3999 8607.5859 L
-7857.4863 8607.6455 -7857.5415 8607.5898 -7857.5718 8607.4219 C
f-7867.1978 8600.2148 m
-7867.2671 8600.0371 -7867.334 8599.8154 -7867.3926 8599.5176 C
-7867.2417 8599.6641 -7867.1714 8599.9727 -7867.1978 8600.2148 C
f-7860.7505 8606.3281 m
-7860.752 8606.3242 -7860.7505 8606.3193 -7860.752 8606.3145 C
-7860.7446 8606.3154 -7860.731 8606.3242 -7860.7222 8606.3271 C
-7860.7329 8606.3311 -7860.7407 8606.3232 -7860.7505 8606.3281 C
f-7859.145 8601.4736 m
-7859.231 8601.4199 -7859.311 8601.3809 -7859.4009 8601.3105 C
-7859.2935 8601.2354 -7859.2026 8601.3281 -7859.145 8601.4736 C
f-7845.9575 8606.5518 m
-7846.0103 8606.4727 -7846.061 8606.3945 -7846.1138 8606.3096 C
-7846.04 8606.3164 -7845.9946 8606.4141 -7845.9575 8606.5518 C
f-7836.1138 8605.7471 m
-7836.27 8605.7529 -7836.3071 8605.5264 -7836.3359 8605.2959 C
-7836.2505 8605.4014 -7836.1743 8605.543 -7836.1138 8605.7471 C
f-7892.5342 8607.1416 m
-7892.5967 8607.1328 L
-7892.5703 8607.1152 -7892.5503 8607.124 -7892.5342 8607.1416 C
f-7886.5576 8607.9922 m
-7886.5298 8608.0625 -7886.5 8608.1426 -7886.4785 8608.2461 C
-7886.5298 8608.3281 -7886.5586 8608.1816 -7886.5576 8607.9922 C
f*u
-7881.0518 8600.2744 m
-7881.4424 8600.7383 -7881.8457 8599.791 -7882.1855 8599.7422 C
-7882.0698 8600.1367 L
-7882.4121 8599.8066 L
-7882.4082 8600.3721 L
-7882.9746 8600.1074 -7883.6777 8600.6934 -7883.8848 8599.793 C
-7883.8184 8600.6982 L
-7884.4194 8599.9805 L
-7884.0752 8600.5928 L
-7884.75 8600.7822 -7885.7754 8600.0781 -7885.9194 8600.084 C
-7885.8584 8600.4209 L
-7885.9688 8600.5938 -7886.0562 8600.3711 -7886.1714 8600.2617 C
-7886.082 8600.7666 L
-7887.0991 8600.6289 -7887.377 8601.7695 -7888.5122 8601.2383 C
-7888.8218 8601.3594 -7888.3408 8601.4014 -7888.3359 8601.6846 C
-7888.5049 8602.0859 -7888.9023 8601.7031 -7888.9878 8601.4785 C
-7888.8984 8602.2676 -7888.4199 8602.0264 -7888.7832 8602.6602 C
-7889.041 8602.2715 -7888.6074 8603.3906 -7889.061 8603.2354 C
-7889.2393 8602.2227 L
-7889.4922 8602.3984 -7889.29 8603.0137 -7889.689 8602.915 C
-7890.145 8602.4746 -7889.1313 8601.7666 -7889.8657 8601.6191 C
-7890.2334 8601.6855 -7890.6401 8603.9629 -7891.353 8603.418 C
-7891.9688 8603.9453 -7891.0298 8604.9941 -7891.8809 8604.7344 C
-7891.3359 8605.3984 L
-7891.4766 8605.6846 -7891.3882 8606.1914 -7891.7568 8605.9766 C
-7891.873 8605.585 -7892.1016 8605.0801 -7892.3008 8605.0313 C
-7891.5034 8605.7969 -7893 8606.1836 -7892.2578 8607.1797 C
-7892.5342 8607.1416 L
-7892.5 8607.1807 -7892.4912 8607.2783 -7892.5098 8607.3555 C
-7892.877 8607.4248 L
-7892.6504 8607.6455 -7892.1113 8607.7393 -7892.3618 8608.4844 C
-7892.8945 8608.6719 L
-7892.752 8609.2305 -7892.9473 8609.4648 -7892.916 8609.916 C
-7891.3496 8611 L
-7891.4111 8610.6621 -7891.6367 8610.4434 -7891.5527 8610.1016 C
-7891.1343 8609.8057 -7891.2114 8610.7109 -7890.8184 8610.2461 C
-7890.9922 8609.7998 L
-7890.9609 8609.9697 -7890.9058 8610.0234 -7890.9912 8610.082 C
-7891.1289 8610.3711 -7891.189 8610.0322 -7891.1904 8609.75 C
-7891.0527 8609.1807 -7890.6558 8609.5625 -7890.5386 8609.957 C
-7890.0298 8609.8838 -7890.4336 8608.9336 -7890.3218 8608.7607 C
-7890.0586 8609.7129 -7889.4722 8608.7363 -7889.1567 8609.1777 C
-7889.3594 8608.5615 L
-7888.9722 8607.8135 -7888.625 8608.4277 -7888.3984 8608.6465 C
-7888.4863 8608.1406 L
-7887.9473 8608.2363 -7887.6802 8606.5313 -7887.2695 8608.3281 C
-7887.3262 8607.9912 L
-7887.105 8607.834 -7886.7695 8607.4561 -7886.5576 8607.9922 C
-7886.5527 8607.7793 -7886.5151 8607.5166 -7886.4258 8607.4551 C
-7886.3057 8608.1484 -7886.0762 8607.623 -7885.75 8607.498 C
-7885.9663 8607.3174 -7885.897 8606.4199 -7886.125 8606.2012 C
-7885.6226 8605.2793 -7885.6641 8607.2041 -7885.2417 8607.1914 C
-7884.9878 8606.7305 -7885.4688 8606.6895 -7885.5298 8606.3516 C
-7884.877 8606.8408 -7884.189 8604.2744 -7883.7778 8606.0723 C
-7884.0576 8606.6455 L
-7883.7983 8607.0342 -7883.6577 8607.0303 -7883.689 8606.8613 C
-7883.7729 8606.9199 -7883.8008 8606.751 -7883.8306 8606.583 C
-7883.0474 8605.6543 -7882.605 8607.9033 -7881.8145 8607.54 C
-7881.873 8607.2031 -7881.9863 8607.0928 -7881.9912 8606.8096 C
-7881.627 8606.459 -7881.6367 8608.5527 -7881.0488 8607.8555 C
-7881.1641 8607.4639 L
-7880.9678 8607.2295 -7880.8232 8607.793 -7880.8496 8607.9072 C
-7880.834 8606.3789 -7879.605 8607.9814 -7879.1953 8605.9902 C
-7878.9072 8606.8281 -7878.082 8607.4824 -7877.8306 8607.0215 C
-7877.4688 8606.1055 -7878.1504 8606.0137 -7878.0161 8605.1602 C
-7877.7329 8605.1523 -7877.584 8605.9961 -7877.1626 8605.7002 C
-7877.1553 8606.5479 -7877.9961 8607.4238 -7877.2026 8607.9082 C
-7877.0913 8607.4512 L
-7877.1738 8607.5117 -7877.2866 8607.6846 -7877.4014 8607.5742 C
-7877.6313 8607.0723 -7877.2642 8607.0049 -7877.2114 8606.7754 C
-7876.3594 8607.0332 L
-7876.2969 8607.9375 -7876.8066 8607.7256 -7876.8594 8607.9551 C
-7876.1846 8607.7637 -7875.373 8606.4385 -7874.7466 8607.041 C
-7874.8057 8606.7031 L
-7874.0063 8607.4727 -7874.3394 8605.0488 -7873.7031 8606.5 C
-7873.3672 8606.2637 -7873.8242 8605.541 -7873.3169 8605.4697 C
-7873.1738 8605.4648 -7873.2578 8605.8066 -7873.2832 8605.9219 C
-7872.6602 8606.2422 -7873.0088 8605.0625 -7872.4336 8605.8945 C
-7872.5576 8604.9375 L
-7871.8721 8605.5957 -7871.1538 8607.2705 -7870.561 8606.8574 C
-7870.5967 8606.1211 -7870.9634 8606.1895 -7871.1089 8605.6289 C
-7870.3066 8606.9609 -7869.1841 8605.7959 -7868.4424 8606.5088 C
-7868.6641 8607.1377 -7868.0913 8607.9688 -7868.5664 8608.4922 C
-7868.689 8607.5352 -7868.9121 8608.1641 -7869.166 8608.0576 C
-7868.7554 8610.1406 -7867.4473 8607.0449 -7867.3218 8608.8506 C
-7867.2129 8608.1113 L
-7867.0991 8608.2217 -7866.8105 8608.7793 -7867.0098 8609.0117 C
-7866.1914 8608.5352 L
-7866.4785 8607.9775 -7867.084 8606.6943 -7867.2744 8607.4912 C
-7867.5073 8606.707 -7866.939 8606.9727 -7867.145 8606.0723 C
-7866.5977 8607.3008 -7866.8086 8605.5527 -7866.2417 8605.8193 C
-7866.498 8606.8887 -7865.6777 8607.2676 -7865.7031 8607.7842 C
-7865.5176 8607.5859 -7865.105 8608.0801 -7864.9458 8608.4424 C
-7864.6177 8608.543 -7863.8657 8607.6816 -7863.3394 8608.0508 C
-7863.5386 8607.7168 -7863.8535 8607.2744 -7863.8306 8606.5957 C
-7863.5718 8606.9824 -7863.2886 8606.9727 -7863.2402 8606.1807 C
-7864.1558 8604.7363 -7863.5352 8607.999 -7864.3647 8607.0625 C
-7864.5698 8606.1641 -7864.7969 8605.9434 -7865.2241 8605.6758 C
-7865.0298 8605.1602 -7865.1152 8604.9355 -7865.0352 8604.3105 C
-7864.5122 8606.2178 -7863.6753 8604.4961 -7862.9912 8605.4375 C
-7862.7031 8605.9941 -7862.9199 8607.1895 -7862.2671 8607.3965 C
-7862.8281 8607.9785 L
-7862.2114 8607.4512 -7862.6831 8608.5391 -7862.1743 8608.75 C
-7862.375 8608.1338 L
-7862.0649 8608.0117 -7861.9497 8608.1211 -7861.7778 8608.5703 C
-7862.0415 8607.6152 L
-7861.8735 8607.4961 -7861.563 8607.375 -7861.5591 8607.9395 C
-7861.5151 8607.707 -7861.501 8607.5215 -7861.501 8607.3594 C
-7861.4673 8607.5176 -7861.3882 8607.6191 -7861.1919 8607.5879 C
-7861.3071 8607.4785 -7861.3887 8607.5391 -7861.3921 8607.2559 C
-7860.6431 8607.4805 -7861.2178 8606.2227 -7860.752 8606.3145 C
-7860.8257 8606.0938 -7860.6934 8605.8184 -7860.5278 8605.7012 C
-7860.5386 8607.2051 -7859.6177 8607.4014 -7859.3735 8608.2344 C
-7859.3774 8608.2129 L
-7858.7505 8608.8164 L
-7858.8774 8608.6934 -7858.7407 8608.2842 -7858.5566 8608.124 C
-7858.5874 8608.1318 L
-7858.3882 8607.8984 -7858.8247 8606.499 -7858.2271 8606.9326 C
-7857.9126 8607.376 L
-7857.9673 8607.3223 -7857.9146 8607.0928 -7857.8857 8606.9785 C
-7857.561 8607.3867 L
-7857.0674 8605.9824 -7856.6274 8608.1777 -7856.0454 8607.4883 C
-7856.2134 8607.6074 -7856.4688 8607.501 -7856.3599 8607.0449 C
-7856.2466 8606.873 -7856.0767 8607.0391 -7855.9878 8607.2598 C
-7856.0186 8607.0918 L
-7854.9087 8608.0195 L
-7854.9985 8607.5127 -7855.6191 8607.4746 -7855.3423 8606.9023 C
-7855.1782 8606.2168 -7854.8599 8606.9424 -7854.6606 8606.9941 C
-7854.686 8607.3906 -7855.0527 8607.7422 -7854.6826 8607.9551 C
-7854.6362 8607.7598 -7854.2842 8607.3496 -7854.4497 8607.0654 C
-7854.0698 8607.4707 -7853.5186 8607.7148 -7853.1782 8608.4199 C
-7853.0698 8608.2461 -7853.2383 8608.082 -7853.2954 8608.0273 C
-7853.3232 8608.1406 L
-7853.5513 8607.9209 -7853.3574 8607.123 -7853.8081 8607.5342 C
-7853.8462 8606.2324 -7853.1606 8607.1738 -7852.7666 8606.9922 C
-7853.395 8606.1064 L
-7852.3345 8604.3223 -7850.9058 8606.2559 -7849.856 8606.2793 C
-7850.165 8606.6855 -7850.4214 8606.2988 -7850.3857 8607.3154 C
-7849.7329 8607.8047 -7849.8193 8607.5801 -7849.1689 8607.7871 C
-7849.2241 8607.7334 L
-7848.8882 8607.2129 -7848.4282 8608.2168 -7848.207 8607.3047 C
-7848.354 8606.7441 -7848.686 8607.8311 -7848.6934 8606.6973 C
-7847.8735 8606.7852 L
-7848.1313 8606.1143 -7848.6934 8606.6973 -7849.0063 8606.5391 C
-7849.2319 8606.6006 -7848.5537 8606.6943 -7848.6606 8607.4336 C
-7849.4263 8607.3984 -7849.6001 8606.6699 -7849.9766 8605.6055 C
-7850.2065 8604.8193 -7849.6431 8604.8047 -7849.501 8604.7988 C
-7849.0122 8605.9707 -7848.3018 8606.5156 -7847.5415 8605.9834 C
-7847.123 8605.123 L
-7846.749 8605.9033 -7846.9087 8607.4375 -7846.229 8607.2441 C
-7846.4321 8606.6279 L
-7846.2842 8606.3857 -7846.186 8606.3047 -7846.1138 8606.3096 C
-7846.4058 8605.8438 -7846.7202 8605.3184 -7846.9839 8604.834 C
-7846.5986 8603.5225 -7845.8735 8605.4814 -7845.3071 8605.7441 C
-7845.3359 8605.5781 -7845.5337 8605.5264 -7845.5942 8605.1895 C
-7844.7466 8604.8789 -7843.8599 8606.4375 -7843.2046 8606.6426 C
-7842.9282 8606.0703 -7843.749 8606.2637 -7843.6138 8605.4121 C
-7843.27 8605.7402 -7842.8818 8604.9941 -7842.7886 8605.7822 c
-7842.939 8604.6563 -7841.9985 8605.7002 -7842.6558 8604.6465 C
-7841.417 8604.1553 -7840.0513 8605.1895 -7838.7983 8605.8301 C
-7838.8599 8605.4912 -7838.8599 8605.209 -7838.8071 8604.9814 C
-7839.231 8604.9951 -7839.854 8604.6738 -7840.0879 8603.8896 C
-7839.811 8603.3135 -7839.4302 8604.6602 -7839.3506 8604.3203 C
-7839.4927 8604.041 -7839.7734 8604.0498 -7839.7798 8603.4844 C
-7839.417 8602.8496 -7839.2134 8603.748 -7838.9575 8603.8555 C
-7839.0962 8604.1416 L
-7838.2993 8604.9082 -7838.6558 8606.1094 -7837.811 8605.7988 C
-7837.5039 8605.1113 -7837.813 8605.2344 -7837.8193 8604.3848 C
-7837.6191 8604.7188 -7836.9766 8603.793 -7836.77 8604.6934 C
-7837.2817 8604.7656 L
-7836.9233 8605.0049 -7836.585 8605.001 -7836.3359 8605.2959 C
-7836.3618 8605.1133 -7836.3823 8604.9258 -7836.4575 8604.8535 c
-7836.1743 8605.1279 -7835.8081 8605.0586 -7835.6626 8605.623 C
-7835.5825 8604.7129 L
-7835.752 8605.1143 -7836.2598 8605.1875 -7836.3462 8604.6807 C
-7836.2974 8603.8857 -7835.7842 8604.3799 -7835.5591 8604.3164 C
-7836.5503 8604.0645 -7836.563 8602.6504 -7837.4033 8603.2422 C
-7837.2598 8603.5215 L
-7837.7842 8604.208 -7838.3218 8603.0742 -7838.7798 8603.1025 C
-7838.6514 8602.917 -7838.623 8602.5859 -7838.6841 8602.4326 C
-7839.6978 8603.1416 -7840.6934 8602.6064 -7841.8481 8603.0371 C
-7842.1958 8602.1426 L
-7842.2178 8602.8232 L
-7842.7817 8603.123 -7842.3394 8601.8633 -7842.7041 8601.9316 C
-7842.5649 8601.9277 -7842.5903 8602.041 -7842.561 8602.2109 C
-7843.2178 8601.4385 -7842.9263 8602.8447 -7843.2935 8602.6289 C
-7843.1177 8603.3594 -7842.585 8602.8906 -7842.749 8603.8574 C
-7843.4033 8603.0859 -7844.4194 8603.5127 -7844.5151 8601.873 C
-7845.729 8602.5332 -7847.2354 8601.5059 -7848.2554 8601.3652 C
-7848.395 8601.6523 -7848.1689 8601.5898 -7848.2207 8601.8184 C
-7848.6255 8600.8691 -7849.5767 8602.4814 -7849.5825 8601.6328 C
-7849.7778 8601.8662 -7849.8599 8602.4902 -7849.9126 8602.7178 C
-7850.1714 8602.3105 -7850.481 8602.1113 -7850.811 8601.9951 C
-7850.5698 8602.2285 L
-7850.5962 8602.3438 L
-7850.938 8602.0137 L
-7850.9238 8601.9609 L
-7851.7446 8601.7188 -7852.6895 8601.9238 -7853.4346 8601.0137 c
-7853.0054 8601.5684 -7853.5415 8602.0371 -7853.3394 8602.3711 C
-7853.7178 8601.0234 -7854.6226 8600.9941 -7855.3569 8601.1309 C
-7855.354 8601.4141 -7855.4102 8601.6406 -7855.3247 8601.8652 C
-7855.7505 8601.3105 L
-7855.6934 8601.6494 L
-7856.4561 8601.8994 -7857.2866 8600.3975 -7857.7896 8601.0352 C
-7857.479 8601.1953 -7857.4766 8601.4785 -7857.4458 8601.9297 C
-7857.9927 8601.8965 -7858.5073 8601.8809 -7859.145 8601.4736 C
-7859.1118 8601.5566 -7859.0879 8601.6514 -7859.0879 8601.7539 C
-7859.2554 8601.8721 -7859.4561 8601.5391 -7859.6274 8601.375 C
-7859.6514 8602.0527 L
-7859.9766 8601.7393 -7860.3994 8602.0879 -7860.7866 8601.5449 C
-7860.938 8602.291 -7861.7271 8600.8555 -7862.1743 8601.1699 C
-7862.3462 8601.0049 -7861.8018 8601.9492 -7862.2817 8601.9082 C
-7862.3506 8600.4375 -7862.9058 8601.8711 -7862.9434 8600.2871 C
-7863.3633 8600.8652 L
-7863.4561 8600.0762 L
-7863.813 8601.5586 -7864 8599.4121 -7864.5313 8599.8818 C
-7864.5034 8600.0518 -7864.4463 8600.1074 -7864.4736 8600.2207 C
-7864.645 8600.0566 -7865.041 8599.9551 -7864.7344 8599.5498 C
-7865.0176 8599.5586 -7865.981 8599.1914 -7865.5488 8600.0273 C
-7865.5801 8599.5742 -7865.1841 8599.959 -7865.0127 8600.123 C
-7865.0352 8600.8027 -7865.4609 8600.5342 -7865.5664 8601.2734 C
-7865.5801 8601.1982 -7865.6362 8601.082 -7865.6768 8600.9697 C
-7865.7378 8601.3896 L
-7866.2695 8600.6426 -7866.8105 8601.1807 -7867.1978 8600.2148 C
-7867.2202 8600.4258 -7867.313 8600.5879 -7867.4961 8600.54 C
-7867.5039 8599.6904 L
-7868.0698 8599.708 L
-7867.8047 8600.9434 L
-7868.4258 8601.1904 -7868.8623 8599.7881 -7869.3721 8599.5781 C
-7869.5034 8600.9961 -7870.3672 8599.043 -7870.8086 8600.3008 C
-7870.4102 8600.6846 L
-7871.2617 8600.4277 -7871.397 8601.2813 -7872.1914 8600.7959 C
-7871.5176 8600.3223 -7871.5137 8600.6064 -7870.5327 8599.4453 C
-7871.5176 8600.04 -7872.2344 8598.6465 -7873.1362 8599.4678 C
-7873.0762 8599.8047 -7872.8496 8600.0234 -7873.0703 8600.3711 C
-7873.2466 8599.6406 -7873.9199 8600.3965 -7873.7866 8599.5439 C
-7874.0664 8599.833 -7874.1152 8600.6289 -7874.2866 8600.7461 C
-7875.2266 8599.7002 L
-7875.1978 8599.8691 L
-7876.7954 8601.8418 -7878.1802 8598.5449 -7879.7832 8599.3867 C
-7879.752 8599.8398 L
-7880.1538 8599.1719 L
-7879.8394 8599.6152 -7880.29 8599.7402 -7880.3145 8600.1377 C
-7881.3418 8599.1504 L
-7881.3647 8599.5479 -7881.3042 8600.4512 -7881.0518 8600.2744 C
f-7867.5264 8600.6543 m
-7867.2832 8600.7158 L
-7867.2344 8600.6729 -7867.1841 8600.6621 -7867.1289 8600.7539 C
-7867.2832 8600.7158 L
-7867.4082 8600.8281 -7867.5 8601.1855 -7867.5264 8600.6543 C
f1 D
-7844.9634 8602.5674 m
-7845.3599 8602.4648 L
-7845.2778 8602.4072 -7844.9927 8602.6816 -7845.1089 8602.2881 C
-7845.0513 8602.3438 -7844.9087 8602.3398 -7844.9634 8602.5674 C
f0 D
-7867.8218 8606.2637 m
-7867.6479 8606.7109 L
-7867.5122 8606.1406 L
-7867.8218 8606.2637 L
f-7870.9878 8606.3047 m
-7870.6479 8606.6328 L
-7870.6191 8606.5186 L
-7870.9634 8606.1895 L
-7870.9878 8606.3047 L
f-7874.7969 8601.6094 m
-7874.7754 8601.6426 -7874.7554 8601.667 -7874.7305 8601.7227 C
-7874.752 8601.7012 -7874.7754 8601.6602 -7874.7969 8601.6094 C
-7875.0625 8601.2002 -7875.168 8602.2188 -7875.3838 8601.2324 C
-7875.1191 8600.3857 -7874.9487 8601.2617 -7874.7969 8601.6094 C
f-7868.082 8601.8018 m
-7868.0879 8601.2363 -7868.4824 8601.1367 -7868.6001 8600.7432 C
-7868.769 8600.8623 -7868.5386 8601.3633 -7868.4785 8601.7012 C
-7868.5625 8601.7598 -7868.6191 8601.707 -7868.7344 8601.5957 C
-7868.668 8602.7813 -7868.4258 8601.1904 -7868.082 8601.8018 C
f-7860.6118 8601.9697 m
-7860.6978 8602.0293 L
-7860.3818 8602.4727 L
-7860.6118 8601.9697 L
f-7859.1362 8602.5469 m
-7858.9614 8603.2773 -7858.5103 8603.1494 -7858.1978 8603.3105 C
-7858.1167 8602.6846 -7858.4346 8601.9609 -7858.8018 8602.0273 C
-7859.231 8601.4746 -7858.9634 8602.9941 -7859.1362 8602.5469 C
f-7872.0352 8602.7705 m
-7871.8066 8602.9902 -7871.4863 8604.2832 -7871.0386 8603.5889 C
-7871.3794 8603.2607 L
-7871.2969 8603.2002 L
-7871.3838 8602.6953 L
-7871.2886 8604.0508 -7871.835 8602.8223 -7872.0352 8602.7705 C
f-7855.9927 8602.9043 m
-7855.6782 8603.3477 -7855.1094 8603.8945 -7855.1626 8604.4063 C
-7855.1431 8603.4434 -7855.5986 8603.0049 -7855.7393 8603.0088 C
-7855.8218 8603.0674 -7855.8818 8603.0137 -7855.9927 8602.9043 C
f-7855.9009 8603.9766 m
-7856.0698 8604.0928 -7856.0078 8604.7158 -7856.3232 8604.2715 C
-7856.27 8603.7607 -7856.3926 8602.5215 -7856.8442 8602.9297 C
-7856.4966 8603.8262 -7856.4658 8604.2773 -7856.0078 8604.7158 C
-7855.9009 8603.9766 L
f1 D
-7856.4834 8602.0137 m
-7856.6689 8602.1445 L
-7856.8882 8602.5449 -7856.9346 8603.6367 -7857.2417 8602.5449 C
-7856.6689 8602.1445 L
-7856.6191 8602.0508 -7856.5591 8601.9941 -7856.4834 8602.0137 C
f0 D
-7852.6479 8602.0625 m
-7852.8345 8601.7324 L
-7852.6514 8601.7656 -7852.6294 8601.9102 -7852.6479 8602.0625 C
-7852.4927 8602.3447 L
-7852.8994 8602.6934 -7852.689 8602.3594 -7852.6479 8602.0625 C
f-7856.1118 8602.2266 m
-7855.5718 8602.3242 L
-7855.7446 8602.4434 -7856.0806 8602.6807 -7856.1118 8602.2266 C
f-7852.7681 8602.9199 m
-7852.9946 8602.9824 -7853.5874 8603.1143 -7853.5039 8603.0537 C
-7853.4521 8602.543 -7852.9126 8602.6406 -7852.7681 8602.9199 C
f-7841.0527 8603.5215 m
-7841.2178 8604.2051 L
-7840.8774 8604.2529 L
-7841.0527 8603.5215 L
f-7844.5806 8604.4785 m
-7844.7778 8604.4277 L
-7844.8618 8604.7695 L
-7844.5806 8604.4785 L
f1 D
-7848.5361 8604.8184 m
-7848.5186 8604.6719 -7848.5278 8604.4844 -7848.5566 8604.3281 C
-7848.6138 8604.2695 -7848.6626 8604.1807 -7848.686 8604.0391 C
-7848.6353 8604.0371 -7848.5874 8604.1641 -7848.5566 8604.3281 C
-7848.4102 8604.4814 -7848.1919 8604.3975 -7848.0913 8604.1895 C
-7848.1514 8603.8535 -7848.3774 8603.917 -7848.4658 8603.6934 C
-7848.1294 8602.8906 -7847.3735 8605.3008 -7847.5903 8602.9873 C
-7847.4482 8603.2646 -7846.9614 8603.873 -7847.1294 8604.2744 C
-7847.5142 8604.1406 -7848.2422 8604.3906 -7848.5361 8604.8184 C
-7848.5513 8604.9414 -7848.585 8605.0391 -7848.6514 8605.0566 C
-7848.6313 8604.9727 -7848.5874 8604.8936 -7848.5361 8604.8184 C
f0 D
-7853.4863 8605.3164 m
-7853.6255 8605.2598 -7853.686 8605.1904 -7853.7134 8605.1143 C
-7853.833 8604.9434 -7853.9233 8604.6846 -7853.8882 8604.3672 C
-7853.5986 8604.6465 -7853.7842 8604.9082 -7853.7134 8605.1143 C
-7853.6401 8605.2178 -7853.561 8605.2969 -7853.4863 8605.3164 C
f-7853.4521 8606.334 m
-7854.1362 8605.3926 L
-7853.9063 8605.8945 L
-7854.3618 8605.457 L
-7854.3018 8606.0762 -7853.8442 8606.7988 -7853.4521 8606.334 C
f1 D
-7854.522 8605.9014 m
-7854.6162 8605.3506 L
-7854.4722 8605.9141 L
-7854.522 8605.9014 L
-7854.501 8606.0273 L
-7855.2666 8605.7109 L
-7854.522 8605.9014 L
f0 D
-7862.3442 8604.7949 m
-7862.6313 8606.7031 -7861.6665 8606.1484 -7861.5186 8607.0684 C
-7861.4858 8606.4297 -7861.1958 8605.4385 -7861.9438 8605.4609 C
-7861.2974 8604.8193 -7861.5386 8606.6953 -7861.1538 8605.0986 C
-7861.4634 8605.2207 -7861.8369 8604.7227 -7861.8911 8604.668 C
-7861.5254 8604.6006 L
-7861.7329 8603.4199 -7862.0879 8605.1826 -7862.3442 8604.7949 C
f1 D
-7866.3008 8605.1982 m
-7866.7554 8605.041 L
-7866.2754 8605.0859 L
-7866.3008 8605.1982 L
f0 D
-7878.125 8605.6172 m
-7878.0913 8606.0674 -7878.709 8606.8799 -7878.856 8606.0342 C
-7878.5449 8605.9111 -7878.2046 8605.957 -7878.125 8605.6172 C
f1 D
-7883.2168 8605.4902 m
-7882.6777 8605.8691 L
-7882.7817 8606.8906 -7883.1592 8605.8271 -7883.4121 8606.0049 C
-7883.5 8605.498 -7883.3008 8605.832 -7883.2168 8605.4902 C
f0 D
-7886.7256 8605.4834 m
-7886.897 8605.3184 L
-7886.7168 8606.3311 L
-7886.7256 8605.4834 L
f-7886.1426 8607.4453 m
-7886.229 8607.5049 -7886.5977 8607.2891 -7886.4897 8606.833 C
-7886.1426 8607.4453 L
f1 D
-7889.6289 8606.7598 m
-7889.4258 8607.6592 L
-7889.6504 8607.7227 L
-7889.6289 8606.7598 L
f-7889.4072 8606.1309 m
-7889.3394 8606.2334 -7889.3105 8606.4375 -7889.292 8606.667 C
-7889.1729 8606.9063 -7888.9746 8606.9902 -7888.7817 8606.7334 C
-7888.813 8606.2822 -7888.9502 8606.5703 -7889.0664 8606.459 C
-7888.981 8606.4014 -7888.8418 8606.1133 -7888.6714 8606.2773 C
-7888.8633 8607.0762 -7888.7222 8607.0713 -7888.7441 8607.751 C
-7889.2617 8608.1846 -7889.2393 8607.3125 -7889.292 8606.667 C
-7889.3618 8606.5273 -7889.4058 8606.3379 -7889.4072 8606.1309 C
f-7887.416 8605.9551 m
-7887.3481 8605.873 -7887.2886 8605.7832 -7887.2617 8605.6689 C
-7887.2305 8605.8398 L
-7887.3008 8606.1328 -7887.3618 8606.0654 -7887.416 8605.9551 C
-7887.4912 8606.043 -7887.5786 8606.1211 -7887.668 8606.1953 C
-7887.7256 8606.7676 -7887.3711 8607.1592 -7887.2778 8607.4785 C
-7887.4463 8607.3154 -7887.5918 8606.7559 -7887.8159 8607.1006 C
-7887.7866 8607.2695 -7887.8145 8607.3848 -7887.6738 8607.377 C
-7887.9824 8607.502 L
-7888.3359 8606.7041 -7887.998 8606.457 -7887.668 8606.1953 C
-7887.6577 8606.0684 -7887.6328 8605.9375 -7887.5703 8605.791 C
-7887.5176 8605.708 -7887.4688 8605.8496 -7887.416 8605.9551 C
f0 D
-7889.667 8605.46 m
-7889.6978 8605.291 -7889.6426 8605.0625 -7889.729 8604.8398 C
-7889.8984 8604.6758 L
-7890.124 8605.0215 -7889.8657 8605.4102 -7889.667 8605.46 C
f1 D
-7879.7441 8604.4775 m
-7879.856 8604.6504 -7879.5967 8605.3223 -7879.3442 8605.1445 C
-7879.4785 8605.9961 L
-7879.4849 8605.4316 -7879.9922 8605.5039 -7880.0488 8605.4482 C
-7880.1382 8604.6602 -7879.9409 8604.9941 -7879.7441 8604.4775 C
f0 D
-7867.0664 8605.166 m
-7867.209 8604.8857 -7867.855 8605.5303 -7867.9473 8604.457 C
-7868.166 8605.6523 -7867.4023 8605.4014 -7867.0664 8605.166 C
f1 D
-7866.9912 8603.9766 m
-7866.9258 8604.0088 -7866.873 8604.0176 -7866.8271 8604.0215 C
-7866.6289 8604.248 -7866.6504 8605.1074 -7866.3066 8604.6338 C
-7866.3926 8604.4102 -7866.5327 8604.6973 -7866.6182 8604.4727 C
-7866.6001 8603.9346 -7866.6504 8604.0352 -7866.8271 8604.0215 C
-7866.8706 8603.9727 -7866.9199 8603.9424 -7866.9912 8603.9766 C
f0 D
-7873.7222 8603.9551 m
-7873.957 8603.1689 L
-7874.3242 8603.2383 L
-7873.7222 8603.9551 L
f-7877.666 8602.5469 m
-7877.6362 8602.999 -7878.0576 8603.0117 -7878.145 8602.7881 C
-7878.1182 8603.3818 -7877.8359 8603.3057 -7877.6113 8603.3691 C
-7877.582 8603.418 -7877.5352 8603.4482 -7877.4634 8603.4463 C
-7877.5073 8603.4043 -7877.5562 8603.3838 -7877.6113 8603.3691 C
-7877.6953 8603.2295 -7877.6367 8602.9258 -7877.6367 8602.7168 C
-7877.5249 8602.543 L
-7877.8359 8602.3828 L
-7877.666 8602.5469 L
f-7884.6016 8601.9082 m
-7884.853 8602.3711 -7884.8833 8602.2031 -7885.0527 8602.0391 C
-7884.998 8601.8086 -7884.7729 8601.7441 -7884.6016 8601.9082 C
f1 D
-7875.5762 8602.0313 m
-7876 8602.3262 -7875.3721 8602.9297 -7875.6504 8603.2217 C
-7875.4282 8603.1592 L
-7875.7886 8603.791 -7875.6855 8602.4863 -7875.939 8602.665 C
-7875.7695 8602.5469 L
-7875.6353 8601.9766 -7876.0298 8602.1582 -7876.061 8601.707 C
-7875.8633 8601.4727 -7875.4072 8601.9121 -7875.5762 8602.0313 c
f0 D
-7885 8601.5264 m
-7885.4199 8602.1055 -7885.3457 8600.9141 -7885.6001 8600.8096 C
-7885.2656 8600.2891 -7885.3145 8601.3672 -7885 8601.5264 C
f1 D
-7878.5898 8599.9727 m
-7878.5625 8599.8584 L
-7878.2217 8600.1895 L
-7878.248 8600.3008 L
-7878.5898 8599.9727 L
f*U
0 D
-7885.5215 8607.4834 m
-7885.625 8607.5566 -7885.6934 8607.5439 -7885.75 8607.498 C
-7885.6777 8607.4697 -7885.6016 8607.4561 -7885.5215 8607.4834 C
f-7865.7983 8608.0684 m
-7865.7886 8607.915 -7865.752 8607.835 -7865.7031 8607.7842 C
-7865.709 8607.873 -7865.7329 8607.9668 -7865.7983 8608.0684 C
f-7864.9766 8608.4395 m
-7864.9663 8608.4434 -7864.9551 8608.4395 -7864.9458 8608.4424 C
-7864.9385 8608.46 -7864.9282 8608.4785 -7864.9199 8608.4951 C
-7864.9766 8608.4395 L
f-7836.3618 8606.4912 m
-7836.186 8607.2207 -7836.5322 8606.6104 -7836.6719 8606.6133 c
-7836.5322 8606.6104 -7836.4766 8606.0986 -7836.3618 8606.4912 C
f-7837.4751 8605.2793 m
-7837.3911 8605.4961 -7837.271 8605.6426 -7837.1255 8605.7051 C
-7837.2178 8605.7266 -7837.3169 8605.6504 -7837.4751 8605.2793 c
f-7836.5674 8605.5928 m
-7836.7842 8605.7441 -7836.9722 8605.7734 -7837.1255 8605.7051 C
-7836.9834 8605.6719 -7836.8618 8605.3936 -7836.5674 8605.5928 C
f-7840.4722 8605.4844 m
-7840.2974 8605.9316 -7839.9614 8605.6953 Y
-7840.6934 8606.1143 -7839.813 8606.54 -7839.752 8606.877 C
-7840.207 8606.7207 -7840.2114 8606.1563 -7840.4722 8605.4844 c
f-7841.4414 8605.2559 m
-7841.3682 8605.251 -7841.2954 8605.2363 -7841.2383 8605.1689 C
-7841.311 8605.2822 -7841.3774 8605.2891 -7841.4414 8605.2559 C
f-7841.7153 8605.6934 m
-7841.9697 8605.5879 -7842.0591 8605.0801 -7842.1743 8604.6895 C
-7841.8682 8604.3242 -7841.6714 8605.1318 -7841.4414 8605.2559 C
-7841.6226 8605.2666 -7841.7983 8605.2119 -7841.7153 8605.6934 C
f-7849.5327 8608.1387 m
-7849.4751 8608.1934 -7849.3345 8608.1895 -7849.3306 8608.4727 C
-7849.7554 8608.4844 L
-7849.9263 8608.3193 -7849.6177 8608.1973 -7849.5327 8608.1387 C
f-7851.0991 8606.7715 m
-7851.438 8606.7256 -7851.2622 8607.4561 -7851.4346 8607.2891 C
-7851.4146 8606.3281 L
-7851.0991 8606.7715 L
f-7850.9102 8601.8994 m
-7850.811 8601.9951 L
-7850.8481 8601.9814 -7850.8857 8601.9727 -7850.9238 8601.9609 C
-7850.9102 8601.8994 L
f-7852.7329 8607.7266 m
-7852.4985 8608.7949 L
-7852.7842 8608.5215 -7852.7871 8607.6719 -7852.7329 8607.7266 C
f-7854.0278 8608.4463 m
-7853.8286 8608.7773 L
-7854.4521 8608.457 L
-7854.0278 8608.4463 L
f-7855.5874 8607.9277 m
-7855.6431 8608.1553 L
-7856.0698 8607.8848 L
-7855.5874 8607.9277 L
f-7872.5664 8607.0313 m
-7872.6313 8606.127 -7871.9502 8606.5039 -7871.752 8606.2695 C
-7871.8882 8607.4063 -7872.2954 8605.8906 -7872.5664 8607.0313 C
f-7884.9297 8607.0703 m
-7884.2793 8607.2773 L
-7884.7832 8607.6309 -7884.4199 8607.2793 -7884.9297 8607.0703 C
fUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed 30)
0 A
uuu0 J 0 j 1 w 4 M []0 d0 XR
-7868.6602 8611 m
-7893 8611 L
-7893 8586.6582 L
-7868.6602 8586.6582 L
-7868.6602 8611 L
n/BBAccumRotation (7.853982) XT
0 R
0.8588 0.7294 0 0 K
1.9633 w-7884.8574 8610.999 m
-7884.8574 8594.8018 L
-7868.6602 8594.8018 L
S/BBAccumRotation (7.853982) XT
0.8941 0.1373 0 0 K
-7872.707 8610.999 m
-7872.707 8602.8838 L
-7876.7656 8602.8838 l
-7876.7656 8606.9424 l
-7880.8184 8606.9424 l
-7880.8184 8598.8252 l
-7868.6602 8598.8252 l
-7868.6602 8606.9424 l
S/BBAccumRotation (7.853982) XT
UUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed 4)
0 A
uu0 J 0 j 1 w 4 M []0 d0 XR
-7889.0078 8586.6572 m
-7889.0078 8611 L
-7880.8359 8611 L
-7880.8359 8586.6572 L
-7889.0078 8586.6572 L
n/BBAccumRotation (3.141593) XT
0 R
0.8588 0.7294 0 0 K
1.9633 w-7889.0078 8602.8555 m
-7880.9023 8602.8555 L
-7880.9023 8586.6572 l
-7889.0078 8586.6572 l
S/BBAccumRotation (10.995575) XT
-7884.9609 8598.7988 m
S/BBAccumRotation (3.141593) XT
0.8941 0.1373 0 0 K
2 J-7884.9609 8598.7988 m
-7884.9609 8590.7139 l
-7889.0078 8590.7139 l
-7889.0078 8594.7725 l
-7889.0737 8598.7988 l
S/BBAccumRotation (3.141593) XT
UU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed 5)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7893 8611 m
-7703.0498 8611 L
-7703.0498 8558.5 L
-7893 8558.5 L
-7893 8611 L
n*u
100 Ar
1 D
0 O
1 0.5 0 0.5 k
-7703.0498 8599.375 m
-7703.0498 8611 L
-7746.5498 8611 L
-7746.5498 8578.0117 L
-7747.0054 8581.9746 -7748.5049 8585.1758 -7751.0801 8587.5938 c
-7754.2114 8590.5313 -7758.9878 8592 -7765.4121 8592 C
-7774.1343 8592 L
-7774.1343 8611 L
-7790.1343 8611 L
-7790.1343 8561.2822 L
-7808.9438 8589.4297 L
-7808.9438 8611 L
-7824.9438 8611 L
-7824.9438 8589.4297 L
-7843.625 8561.6475 L
-7843.625 8572.25 L
-7859.875 8572.25 L
-7859.875 8611 L
-7875.75 8611 L
-7875.75 8572.25 L
-7892 8572.25 L
-7892 8559.5 L
-7845.0688 8559.5 L
-7843.625 8559.5 L
-7827.3599 8559.5 L
-7816.9102 8576.8281 L
-7806.5337 8559.5 L
-7790.1343 8559.5 L
-7788.9438 8559.5 L
-7763.6519 8559.5 L
-7757.8862 8559.5 -7753.5664 8560.875 -7750.6934 8563.625 c
-7748.3545 8565.8652 -7746.9839 8568.8896 -7746.5498 8572.6729 C
-7746.5498 8559.5 L
-7703.7998 8559.5 L
-7703.7998 8570.5 L
-7730.5498 8570.5 L
-7730.5498 8578.75 L
-7705.7998 8578.75 L
-7705.7998 8589.25 L
-7730.5498 8589.25 L
-7730.5498 8599.375 L
-7703.0498 8599.375 L
f100 Ar
0 D
-7761.8848 8575.8027 m
-7761.8848 8574.1855 -7762.4258 8572.8145 -7763.5039 8571.6895 c
-7764.584 8570.5645 -7766.6138 8570 -7769.5938 8570 C
-7774.1343 8570 L
-7774.1343 8581.5 L
-7770.2266 8581.5 L
-7767.1519 8581.5 -7764.9946 8580.9668 -7763.75 8579.9004 c
-7762.5078 8578.834 -7761.8848 8577.4668 -7761.8848 8575.8027 c
f*U
*u
100 Ar
1 D
1 0.5 0 0 k
-7704.0498 8598.375 m
-7704.0498 8610 L
-7747.5498 8610 L
-7747.5498 8577.0117 L
-7748.0054 8580.9746 -7749.5049 8584.1758 -7752.0801 8586.5938 c
-7755.2114 8589.5313 -7759.9878 8591 -7766.4121 8591 C
-7775.1343 8591 L
-7775.1343 8610 L
-7791.1343 8610 L
-7791.1343 8560.2822 L
-7809.9438 8588.4297 L
-7809.9438 8610 L
-7825.9438 8610 L
-7825.9438 8588.4297 L
-7844.625 8560.6475 L
-7844.625 8571.25 L
-7860.875 8571.25 L
-7860.875 8610 L
-7876.75 8610 L
-7876.75 8571.25 L
-7893 8571.25 L
-7893 8558.5 L
-7846.0688 8558.5 L
-7844.625 8558.5 L
-7828.3599 8558.5 L
-7817.9102 8575.8281 L
-7807.5337 8558.5 L
-7791.1343 8558.5 L
-7789.9438 8558.5 L
-7764.6519 8558.5 L
-7758.8862 8558.5 -7754.5664 8559.875 -7751.6934 8562.625 c
-7749.3545 8564.8652 -7747.9839 8567.8896 -7747.5498 8571.6729 C
-7747.5498 8558.5 L
-7704.7998 8558.5 L
-7704.7998 8569.5 L
-7731.5498 8569.5 L
-7731.5498 8577.75 L
-7706.7998 8577.75 L
-7706.7998 8588.25 L
-7731.5498 8588.25 L
-7731.5498 8598.375 L
-7704.0498 8598.375 L
f100 Ar
0 D
-7762.8848 8574.8027 m
-7762.8848 8573.1855 -7763.4258 8571.8145 -7764.5039 8570.6895 c
-7765.584 8569.5645 -7767.6138 8569 -7770.5938 8569 C
-7775.1343 8569 L
-7775.1343 8580.5 L
-7771.2266 8580.5 L
-7768.1519 8580.5 -7765.9946 8579.9668 -7764.75 8578.9004 c
-7763.5078 8577.834 -7762.8848 8576.4668 -7762.8848 8574.8027 c
f*U
U%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed 6)
0 A
uu0 J 0 j 1 w 4 M []0 d0 XR
-7806.7246 8611 m
-7806.7246 8576.1348 L
-7893 8576.1348 L
-7893 8611 L
-7806.7246 8611 L
nu0 O
0 0 0 0 k
-7855.3398 8610.9141 m
-7855.4849 8610.8555 L
-7855.3687 8610.8848 L
-7855.3398 8610.9141 L
f-7855.082 8611 m
-7855.2246 8611 L
-7855.1953 8610.8848 L
-7855.082 8611 L
f0 0 0 1 k
-7850.7578 8580.0586 m
-7850.6758 8579.9922 -7850.5962 8580.0586 -7850.5 8579.9922 C
-7850.3535 8580.1406 -7850.3672 8580.2617 -7850.4336 8580.4111 C
-7850.5566 8580.5039 -7850.7168 8580.5039 -7850.8242 8580.4111 C
-7850.8794 8580.3027 -7850.8511 8580.1406 -7850.7578 8580.0586 c
f-7850.3398 8579.0518 m
-7850.2319 8579.0918 -7850.2847 8579.1982 -7850.2734 8579.2793 C
-7850.3398 8579.3594 -7850.4199 8579.3867 -7850.5298 8579.373 C
-7850.6626 8579.2656 -7850.582 8578.916 -7850.3398 8579.0518 c
f-7888.9839 8594.2559 m
-7888.9702 8594.3496 -7889.0649 8594.4785 -7889.1719 8594.3975 C
-7889.2402 8594.3145 L
-7889.2129 8594.208 -7889.0513 8594.1494 -7888.9839 8594.2559 C
f-7863.6289 8591.5537 m
-7863.6289 8591.5166 L
-7863.5234 8591.5166 L
-7863.5234 8591.5537 L
-7863.6289 8591.5537 L
f-7888.4321 8593.7715 m
-7888.3926 8593.7832 -7888.4063 8593.8174 -7888.4063 8593.8535 C
-7888.4458 8593.8887 -7888.5664 8593.9121 -7888.5664 8593.8301 C
-7888.5273 8593.7949 -7888.5 8593.748 -7888.4321 8593.7715 c
f-7862.1626 8591.8818 m
-7862.1626 8592.0059 L
-7862.373 8592.1074 -7862.5718 8591.957 -7862.6895 8591.793 C
-7862.5527 8591.8184 -7862.2886 8591.7178 -7862.1626 8591.8818 C
f-7886.8159 8594.8809 m
-7886.7642 8595.0215 -7886.7642 8595.1875 -7886.9785 8595.1875 C
-7887.0991 8595.1279 -7887.1543 8595.0801 -7887.1802 8594.9639 C
-7887.127 8594.8457 -7886.9375 8594.8223 -7886.8159 8594.8809 C
f-7892.9063 8584.4707 m
-7892.9526 8584.4707 L
-7892.6694 8584.4043 -7892.2642 8584.3281 -7892.0474 8584.5859 C
-7892.0664 8584.7266 -7892.2358 8584.7031 -7892.3687 8584.7031 c
-7892.6138 8584.7266 -7892.7734 8584.5039 -7893 8584.5273 C
-7893 8584.4785 -7892.897 8584.5361 -7892.9063 8584.4707 C
f-7838.6504 8588.7383 m
-7838.6777 8588.7227 -7838.7046 8588.6719 -7838.7441 8588.6836 C
-7838.584 8588.5498 L
-7838.7183 8588.293 -7838.3281 8588.3887 -7838.3281 8588.2256 C
-7838.0313 8588.1992 -7837.897 8588.2529 -7837.6543 8588.4551 C
-7837.5742 8588.7109 -7837.6543 8588.7109 -7837.5879 8588.9668 C
-7837.7886 8588.9941 -7837.5742 8589.4648 -7837.9375 8589.3574 C
-7838.0991 8589.5186 -7838.2344 8589.2891 -7838.4214 8589.3838 C
-7838.3008 8589.3574 -7838.4902 8589.249 -7838.5566 8589.1953 C
-7838.6777 8589.1689 L
-7838.5566 8589.0469 -7838.6777 8588.9395 -7838.7871 8588.8447 C
-7838.6914 8588.8857 -7838.6914 8588.7783 -7838.6504 8588.7383 C
f-7890.8047 8585.1641 m
-7890.729 8585.207 -7890.6152 8585.2227 -7890.5786 8585.2969 C
-7890.6426 8585.4375 -7890.8794 8585.3721 -7891.0122 8585.3633 C
-7891.209 8585.2227 L
-7891.1055 8585.1729 -7890.9551 8585.1484 -7890.8047 8585.1641 C
f-7889.834 8584.5273 m
-7889.7969 8584.5449 -7889.7778 8584.5859 -7889.7383 8584.5859 C
-7889.7383 8584.6426 L
-7889.9746 8584.7354 -7890.145 8584.5762 -7890.3521 8584.5449 C
-7890.2383 8584.5117 -7889.9946 8584.4453 -7889.834 8584.5273 c
f0 0 0 0 k
-7889.9473 8584.6035 m
-7889.9375 8584.5703 -7890.0586 8584.668 -7890.0786 8584.5859 C
-7889.9473 8584.6035 L
f0 0 0 1 k
-7889.6738 8584.0742 m
-7889.6914 8584.0918 L
-7889.6738 8584.0742 L
-7889.7681 8584.0488 L
-7889.7305 8584.0566 -7889.6914 8584.0322 -7889.6738 8584.0742 C
f-7883.5254 8583.0527 m
-7883.498 8583.0625 -7883.498 8583.0918 -7883.498 8583.1191 C
-7883.5718 8583.0742 L
-7883.5449 8583.082 -7883.5352 8583.0625 -7883.5254 8583.0527 C
f-7877.5786 8588.9902 m
-7877.5098 8589.0303 -7877.498 8589.083 -7877.5098 8589.1504 C
-7877.5918 8589.2041 -7877.6191 8589.2041 -7877.6992 8589.1504 C
-7877.6602 8589.083 -7877.7129 8588.9609 -7877.5786 8588.9902 C
f-7875.5313 8585.1113 m
-7875.4785 8585.0977 -7875.4102 8585.1113 -7875.3711 8585.1641 C
-7875.4238 8585.2188 -7875.4102 8585.3262 -7875.5054 8585.3262 c
-7875.6406 8585.3262 -7875.6001 8585.1641 -7875.5313 8585.1113 C
f-7875.25 8582.9043 m
-7875.1426 8582.957 -7874.9526 8583.0117 -7874.9946 8583.1738 c
-7874.9946 8583.3359 -7875.0742 8583.4287 -7875.25 8583.4287 C
-7875.4102 8583.5098 -7875.4102 8583.293 -7875.5054 8583.2676 C
-7875.519 8583.0791 -7875.3711 8583.0117 -7875.25 8582.9043 C
f-7875.3169 8584.627 m
-7875.2778 8584.627 -7875.2358 8584.6143 -7875.209 8584.6543 C
-7875.209 8584.7217 -7875.2222 8584.7744 -7875.2778 8584.8164 C
-7875.3711 8584.8164 -7875.4238 8584.6543 -7875.3169 8584.627 C
f-7874.5625 8588.8545 m
-7874.5098 8588.8809 -7874.4414 8588.8809 -7874.3999 8588.9482 C
-7874.4551 8589.0303 -7874.3887 8589.123 -7874.5098 8589.1777 C
-7874.7246 8589.1914 -7874.75 8588.9219 -7874.5625 8588.8545 C
f-7885.103 8588.9512 m
-7885.293 8589.0098 L
-7885.2383 8588.9258 L
-7885.103 8588.9512 L
f-7884.0664 8589.3281 m
-7883.9458 8589.3887 -7883.7695 8589.4238 -7883.8398 8589.5762 c
-7884.0122 8589.8486 -7884.3887 8589.6592 -7884.5918 8589.6367 c
-7884.6465 8589.6367 L
-7884.5918 8589.5996 -7884.6719 8589.542 -7884.6191 8589.4922 C
-7884.8618 8589.5527 -7884.7129 8589.2813 -7884.9414 8589.3281 C
-7884.6465 8589.2344 -7884.3633 8589.2344 -7884.0664 8589.3281 C
f-7873.9839 8585.2324 m
-7873.877 8585.1914 -7873.9038 8585.3262 -7873.8633 8585.3672 C
-7873.8906 8585.4482 -7874.0122 8585.4482 -7874.0513 8585.3672 c
-7874.0649 8585.3008 -7874.0254 8585.2744 -7873.9839 8585.2324 C
f-7873.2441 8588.4375 m
-7873.1758 8588.4648 -7873.2168 8588.5439 -7873.2168 8588.5986 C
-7873.2441 8588.6523 -7873.3242 8588.6113 -7873.3794 8588.626 C
-7873.459 8588.5439 -7873.3647 8588.3838 -7873.2441 8588.4375 c
f-7873.0542 8586.9434 m
-7872.9746 8586.9834 -7872.9609 8587.0898 -7873.0137 8587.1445 C
-7873.082 8587.1309 -7873.1626 8587.1719 -7873.1758 8587.0762 C
-7873.2168 8586.9688 -7873.0962 8586.9961 -7873.0542 8586.9434 C
f-7872.9878 8588.2354 m
-7872.8945 8588.3281 -7872.5977 8588.1807 -7872.6934 8588.4375 C
-7872.813 8588.3838 -7872.9746 8588.5586 -7873.082 8588.3965 C
-7873.0542 8588.3574 -7873.0542 8588.2754 -7872.9878 8588.2354 C
f-7881.8711 8588.9648 m
-7881.7642 8588.9648 -7881.6719 8588.9648 -7881.6152 8588.8555 C
-7881.6426 8588.8047 -7881.75 8588.7773 -7881.7114 8588.6953 C
-7881.2656 8588.8047 -7880.7007 8588.709 -7880.4458 8589.1543 C
-7880.4321 8589.2617 -7880.498 8589.3418 -7880.5801 8589.4082 C
-7880.6602 8589.4082 -7880.8223 8589.4238 -7880.9023 8589.5039 C
-7881.0649 8589.3281 -7881.375 8589.585 -7881.5762 8589.4082 C
-7881.5352 8589.4238 -7881.5234 8589.3691 -7881.4824 8589.3418 C
-7881.6313 8589.248 -7881.8457 8589.1543 -7881.9663 8589.0186 C
-7881.8711 8588.9648 L
f-7880.9297 8591.0518 m
-7880.877 8591.4023 -7881.3198 8591.2129 -7881.4824 8591.2129 C
-7881.7778 8591.0234 L
-7881.5234 8590.9033 -7881.1719 8590.8359 -7880.9297 8591.0518 C
f0 0 0 0 k
-7881.1582 8591.0518 m
-7881.252 8591.1855 L
-7881.3618 8591.0234 L
-7881.252 8591.1602 L
-7881.1582 8591.0518 L
f0 0 0 1 k
-7853.9082 8593.8232 m
-7853.8418 8593.958 L
-7854.2046 8594.2813 -7854.8105 8594.0527 -7855.2017 8593.8896 c
-7855.457 8593.7285 L
-7854.998 8593.5273 -7854.3262 8593.5527 -7853.9082 8593.8232 C
f-7880.1626 8591.5098 m
-7880.2578 8591.4424 L
-7880.1626 8591.415 L
-7880.1626 8591.5098 L
f-7879.0586 8591.6973 m
-7879.0039 8591.7256 -7878.9512 8591.7793 -7878.897 8591.832 C
-7878.8833 8591.9258 -7878.9902 8591.9941 -7879.0586 8592.0215 C
-7879.3008 8592.0742 -7879.5151 8591.9678 -7879.6777 8591.8613 C
-7879.7046 8591.8994 L
-7879.7441 8591.9258 -7879.6382 8591.8613 -7879.6113 8591.832 C
-7879.5962 8591.7383 -7879.7183 8591.7793 -7879.7734 8591.7656 C
-7879.5703 8591.6582 -7879.2734 8591.5762 -7879.0586 8591.6973 C
f0 0 0 0 k
-7879.2871 8591.8613 m
-7879.355 8591.8047 L
-7879.4238 8591.9121 -7879.355 8591.792 -7879.4497 8591.8047 C
-7879.3145 8591.8867 -7879.4102 8591.7109 -7879.2871 8591.8613 C
f0 0 0 1 k
-7878.5078 8592.25 m
-7878.332 8592.1152 -7878.0078 8592.1289 -7877.8066 8592.2246 C
-7877.7266 8592.291 -7877.6055 8592.3975 -7877.7383 8592.4785 C
-7877.9146 8592.5469 -7878.1426 8592.6133 -7878.3457 8592.5469 C
-7878.3984 8592.3975 -7878.5879 8592.4375 -7878.709 8592.3848 C
-7878.6816 8592.3047 -7878.3984 8592.4248 -7878.5078 8592.25 C
f0 0 0 0 k
-7878.25 8592.25 m
-7878.2246 8592.291 L
-7878.25 8592.291 L
-7878.25 8592.25 L
f0 0 0 1 k
-7876.1914 8599.0078 m
-7876.125 8599.0352 -7876.1641 8599.0889 -7876.1504 8599.1289 C
-7876.271 8599.3047 -7876.541 8599.2246 -7876.7031 8599.1953 C
-7876.7559 8599.0625 -7876.877 8599.2383 -7876.959 8599.1289 C
-7876.7153 8599.0752 -7876.4746 8598.8887 -7876.1914 8599.0078 c
f-7872.502 8576.3906 m
-7872.4214 8576.6865 -7872.7578 8576.6201 -7872.9199 8576.6865 C
-7873.3496 8576.7266 -7873.5664 8576.3105 -7873.9297 8576.2559 C
-7874.1167 8576.1348 L
-7873.6328 8576.2832 -7872.8926 8575.8125 -7872.502 8576.3906 C
f-7870.166 8594.9023 m
-7870.1382 8594.9424 -7870.0703 8594.9424 -7870.0449 8594.9961 C
-7870.0298 8595.0762 -7870.0161 8595.1982 -7870.166 8595.252 C
-7870.5566 8595.252 L
-7870.5703 8595.2246 -7870.541 8595.2109 -7870.5298 8595.1846 C
-7870.6895 8595.0898 L
-7870.623 8594.8486 -7870.3535 8594.9023 -7870.166 8594.9023 C
f0 0 0 0 k
-7873.1489 8594.9023 m
-7873.2832 8594.9287 L
-7873.2422 8594.9023 L
-7873.1489 8594.9023 L
f0 0 0 1 k
-7867.0176 8595.1719 m
-7866.9648 8595.1094 L
-7866.9961 8595.0586 -7867.0488 8595.0967 -7867.0918 8595.084 C
-7866.9648 8594.9082 -7866.7734 8594.9199 -7866.5625 8594.832 C
-7866.4351 8594.9082 -7866.2671 8594.9434 -7866.2358 8595.1338 c
-7866.2031 8595.2969 -7866.3633 8595.3223 -7866.4351 8595.4111 C
-7866.584 8595.4863 -7866.7329 8595.2734 -7866.8906 8595.3857 C
-7866.8687 8595.3486 L
-7867.145 8595.1338 L
-7867.1016 8595.1465 -7867.0391 8595.1094 -7867.0176 8595.1719 C
f-7870.5649 8579.9727 m
-7870.6978 8579.918 L
-7870.5649 8579.918 L
-7870.5649 8579.9727 L
f-7870.4688 8580.7793 m
-7870.3887 8580.7393 -7870.5503 8580.8994 -7870.5898 8580.8477 C
-7870.375 8581.0088 L
-7870.6582 8580.8867 L
-7870.4688 8580.7793 l
f-7870.375 8580.8203 m
-7870.3618 8580.7529 -7870.2559 8580.793 -7870.2129 8580.7793 C
-7870.1602 8580.8477 -7870.0801 8580.8867 -7870.1055 8580.9814 c
-7870.1328 8581.0352 -7870.1992 8580.9951 -7870.2402 8581.0088 C
-7870.1992 8580.9678 -7870.1465 8580.9678 -7870.1055 8580.9141 C
-7870.1602 8580.8203 -7870.2817 8580.8066 -7870.334 8580.8203 C
-7870.3481 8580.8477 -7870.3223 8580.8613 -7870.3086 8580.8867 C
-7870.4297 8580.9141 L
-7870.334 8580.8477 L
-7870.375 8580.8203 L
f-7869.7559 8579.8105 m
-7869.7832 8579.7832 L
-7869.7559 8579.8105 L
-7869.8906 8579.877 L
-7869.8242 8579.9043 -7869.7969 8579.8506 -7869.7559 8579.8105 C
f-7867.7832 8589.8857 m
-7867.4551 8589.9482 -7867.0542 8589.6348 -7866.7383 8589.9238 C
-7866.6543 8590.0996 -7866.832 8590.251 -7866.9702 8590.251 c
-7867.2871 8590.2881 -7867.498 8590.0234 -7867.7832 8589.9482 C
-7867.7832 8589.8857 L
f-7864.6313 8596.2559 m
-7864.4824 8596.2676 -7864.293 8596.2285 -7864.229 8596.4043 c
-7864.166 8596.5938 -7864.3457 8596.5684 -7864.4082 8596.6426 C
-7864.5352 8596.6816 -7864.6406 8596.6064 -7864.7578 8596.5938 C
-7864.7466 8596.543 -7864.7246 8596.4922 -7864.7886 8596.4922 C
-7864.7153 8596.3545 -7864.7793 8596.3545 -7864.6313 8596.2559 C
f-7866.5366 8585.2656 m
-7866.4102 8585.2783 -7866.2534 8585.3281 -7866.209 8585.4424 C
-7866.1992 8585.5801 -7866.2847 8585.6426 -7866.3887 8585.6563 c
-7866.5488 8585.6563 -7866.729 8585.6689 -7866.8223 8585.543 C
-7866.855 8585.3281 -7866.6543 8585.3535 -7866.5366 8585.2656 C
f-7864.1016 8597.0977 m
-7864.0078 8597.0225 -7864.166 8596.9707 -7864.123 8596.9453 c
-7864.082 8596.9209 -7864.0391 8596.9961 -7864.0298 8597.0098 c
-7863.9961 8597.0469 L
-7864.061 8597.1348 -7864.2192 8597.1348 -7864.2817 8597.0469 C
-7864.229 8597.0469 -7864.187 8597.1348 -7864.1016 8597.0977 C
f-7866.2642 8577.9551 m
-7866.1152 8577.916 -7866.0098 8578.0049 -7865.9038 8578.1055 C
-7865.8945 8578.2441 -7865.9146 8578.4326 -7866.0625 8578.4072 c
-7866.1895 8578.3691 -7866.4863 8578.1055 -7866.2642 8577.9551 C
f-7865.8306 8581.251 m
-7865.8198 8581.2012 -7865.8618 8581.1895 -7865.8833 8581.1631 C
-7865.8306 8581.0254 -7865.7344 8581.1504 -7865.7031 8581.1895 C
-7865.377 8581.1387 -7864.9961 8580.9883 -7864.7114 8581.3154 C
-7864.6777 8581.4648 -7864.7534 8581.6055 -7864.8687 8581.667 C
-7865.4282 8581.6416 L
-7865.397 8581.6172 L
-7865.6289 8581.5156 -7865.8086 8581.4521 -7866.0098 8581.2754 C
-7865.9458 8581.2637 -7865.873 8581.3027 -7865.8306 8581.251 C
f-7865.3223 8587.2041 m
-7865.3442 8587.2676 -7865.291 8587.3047 -7865.2695 8587.3574 C
-7865.2695 8587.3174 L
-7865.2192 8587.3174 L
-7865.2192 8587.3574 L
-7865.25 8587.3438 -7865.2598 8587.3691 -7865.2695 8587.3818 C
-7865.207 8587.4688 -7865.1113 8587.4941 -7865.0703 8587.3818 C
-7865.3223 8587.3438 -7865.0801 8587.1289 -7865.2192 8587.0547 C
-7865.0586 8587.0156 -7864.7114 8586.9414 -7864.6367 8587.2295 C
-7864.6465 8587.3301 -7864.7422 8587.4199 -7864.8159 8587.4688 C
-7864.9312 8587.4434 -7865.0918 8587.5078 -7865.2192 8587.5313 C
-7865.1978 8587.5313 -7865.1641 8587.5439 -7865.145 8587.5078 C
-7865.145 8587.4688 L
-7865.3442 8587.4434 L
-7865.313 8587.4063 -7865.377 8587.3301 -7865.3022 8587.292 C
-7865.4497 8587.2295 L
-7865.4082 8587.2168 -7865.3442 8587.2559 -7865.3223 8587.2041 C
f-7862.3809 8601.3242 m
-7862.2534 8601.4141 -7862.3926 8601.54 -7862.4551 8601.5781 c
-7862.6558 8601.7041 -7862.8457 8601.4395 -7863.0137 8601.5781 C
-7862.834 8601.4521 -7862.6138 8601.251 -7862.3809 8601.3242 C
f0 0 0 0 k
-7865.123 8587.2559 m
-7865.0703 8587.2559 -7865.1758 8587.3174 -7865.1758 8587.292 c
-7865.1758 8587.2559 L
-7865.123 8587.2559 l
f-7865.0161 8587.1426 m
-7865.0078 8587.1914 -7864.9526 8587.2422 -7864.9214 8587.292 C
-7864.9648 8587.3574 L
-7864.9312 8587.3691 -7864.9434 8587.4063 -7864.9434 8587.4434 C
-7865.0488 8587.3174 L
-7865.0161 8587.2422 -7864.9434 8587.2295 -7865.0161 8587.1426 C
-7865.0703 8587.2295 L
-7865.0801 8587.1797 -7865.0391 8587.168 -7865.0161 8587.1426 C
f0 0 0 1 k
-7844.334 8598.3105 m
-7844.457 8598.1768 L
-7844.457 8598.1094 -7843.918 8598.3906 -7844.0664 8598.0137 C
-7843.7031 8598.1768 -7843.1777 8598.082 -7842.9766 8598.4727 C
-7842.9351 8598.459 -7842.8672 8598.499 -7842.8398 8598.4463 C
-7842.9766 8598.3379 L
-7842.7207 8598.2969 -7842.4238 8598.123 -7842.166 8598.2832 C
-7842.127 8598.3379 -7842.061 8598.4316 -7842.127 8598.499 c
-7842.5039 8598.9434 -7843.123 8598.2031 -7843.3926 8598.9297 C
-7843.6353 8599.0645 -7844.0664 8599.0645 -7844.2954 8598.9561 C
-7844.5918 8599.0508 L
-7844.3633 8599.0098 -7844.5503 8598.8223 -7844.498 8598.7266 C
-7844.6855 8598.7266 L
-7844.5503 8598.6074 L
-7844.752 8598.4463 L
-7844.6582 8598.4463 -7844.4297 8598.459 -7844.334 8598.3105 C
f-7862.0742 8597.2227 m
-7861.9375 8597.2871 -7861.7266 8597.1973 -7861.6738 8597.4375 C
-7861.6519 8597.6758 -7861.875 8597.5625 -7861.9688 8597.6758 C
-7862.0649 8597.7012 -7862.0962 8597.5625 -7862.2017 8597.6133 C
-7862.1802 8597.5889 L
-7862.1914 8597.5117 -7862.2871 8597.1973 -7862.0742 8597.2227 C
f-7863.9082 8582.5469 m
-7863.7383 8582.46 -7863.5801 8582.46 -7863.4214 8582.5469 C
-7863.4121 8582.6113 -7863.3262 8582.6758 -7863.3999 8582.7227 c
-7863.5391 8582.9121 -7863.771 8582.7744 -7863.9297 8582.7227 C
-7863.834 8582.7002 -7863.939 8582.5986 -7863.9082 8582.5469 C
f0 0 0 0 k
-7863.6978 8582.6348 m
-7863.855 8582.6348 L
-7863.855 8582.6113 L
-7863.6978 8582.6348 L
f0 0 0 1 k
-7860.3535 8598.8584 m
-7860.481 8598.8457 -7860.3223 8598.7441 -7860.375 8598.709 C
-7860.2695 8598.6826 -7860.0801 8598.6074 -7859.9946 8598.7578 C
-7859.9727 8598.9473 -7860.0991 8598.8838 -7860.1738 8598.9727 C
-7860.4063 8598.9102 L
-7860.3535 8598.8584 L
f0 0 0 0 k
-7860.3008 8598.8223 m
-7860.1738 8598.8223 L
-7860.248 8598.9102 L
-7860.2266 8598.8838 L
-7860.3535 8598.8223 L
-7860.3008 8598.7578 L
-7860.3008 8598.8223 L
f0 0 0 1 k
-7857.6313 8598.3887 m
-7857.5366 8598.293 -7857.3481 8598.1592 -7857.187 8598.2539 C
-7857.0938 8598.2793 -7856.9458 8598.3613 -7856.8906 8598.4824 C
-7856.9458 8598.793 -7857.2817 8598.6992 -7857.4688 8598.8057 C
-7857.4434 8598.7793 L
-7857.4688 8598.6426 -7857.6177 8598.6719 -7857.6992 8598.6172 C
-7857.645 8598.5508 -7857.6177 8598.4434 -7857.6313 8598.3887 C
f-7857.3086 8603.3301 m
-7857.2954 8603.2891 -7857.3618 8603.2617 -7857.377 8603.2354 C
-7857.4434 8603.2354 L
-7857.1738 8603.2217 -7856.9038 8602.9941 -7856.6367 8603.168 C
-7856.5679 8603.2891 -7856.7422 8603.4775 -7856.8906 8603.4912 c
-7857.1055 8603.5313 -7857.2817 8603.4502 -7857.4688 8603.3965 C
-7857.3086 8603.3301 L
f-7861.0137 8581.8174 m
-7860.9199 8581.6797 -7860.645 8581.6416 -7860.4551 8581.7041 c
-7860.3281 8581.7422 -7860.2222 8581.8301 -7860.2017 8582.0059 c
-7860.1914 8582.1826 -7860.3169 8582.2705 -7860.4336 8582.334 C
-7860.5703 8582.3711 -7860.666 8582.2705 -7860.7817 8582.3711 C
-7860.666 8582.0801 -7861.1313 8582.2959 -7860.9609 8582.0684 C
-7861.0664 8582.0059 L
-7860.9946 8581.9941 -7860.9609 8581.8818 -7861.0137 8581.8174 C
f-7860.7402 8586.3242 m
-7860.709 8586.2988 L
-7860.709 8586.3242 L
-7860.6353 8586.3242 L
-7860.6558 8586.3867 L
-7860.7817 8586.2988 L
-7860.771 8586.3105 -7860.7617 8586.3369 -7860.7402 8586.3242 C
f-7856.8242 8599.9375 m
-7856.8242 8599.8154 L
-7856.6479 8599.9238 -7856.2192 8599.6943 -7856.1094 8600.0313 c
-7856.043 8600.2871 -7856.313 8600.3271 -7856.4746 8600.4209 C
-7856.5542 8600.3135 -7856.6367 8600.4209 -7856.7305 8600.4209 C
-7856.7422 8600.3945 -7856.7153 8600.3818 -7856.7031 8600.3535 C
-7856.877 8600.3398 -7856.7559 8600.2471 -7856.918 8600.1914 C
-7856.8906 8600.166 L
-7857.0254 8600.0986 L
-7856.8374 8600.085 -7857.0254 8599.8945 -7856.8242 8599.9375 C
f-7860.1055 8586.2988 m
-7860.0962 8586.4121 -7860.2441 8586.4248 -7860.2754 8586.4492 C
-7860.561 8586.4121 L
-7860.4863 8586.3242 L
-7860.5391 8586.4873 -7860.3594 8586.4375 -7860.3281 8586.4492 C
-7860.3169 8586.3994 -7860.2559 8586.3613 -7860.2754 8586.2988 c
-7860.3594 8586.123 -7860.5078 8586.2617 -7860.582 8586.2617 C
-7860.561 8586.2363 L
-7860.7402 8586.1973 L
-7860.5298 8586.1465 -7860.2441 8586.0342 -7860.1055 8586.2988 C
f-7855.9961 8589.0586 m
-7855.9702 8589.0449 -7855.9434 8589.0723 -7855.9297 8589.0859 C
-7855.9297 8589.1797 L
-7856.0254 8589.127 L
-7856.0098 8589.0996 -7855.9839 8589.0859 -7855.9961 8589.0586 C
f-7853.7617 8597.002 m
-7853.7754 8597.0273 -7853.75 8597.042 -7853.7358 8597.0703 C
-7853.8306 8597.1367 L
-7853.7886 8597.1631 -7853.8022 8597.0156 -7853.897 8596.9766 C
-7853.8711 8597.0273 -7853.8022 8596.9902 -7853.7617 8597.002 C
f-7852.4961 8588.4121 m
-7852.4702 8588.4121 L
-7852.4702 8588.5078 L
-7852.5234 8588.5195 -7852.5649 8588.4395 -7852.4961 8588.4121 C
f-7852.3086 8588.4805 m
-7852.2266 8588.3994 -7852.3086 8588.4805 -7852.3359 8588.5078 C
-7852.2817 8588.5752 L
-7852.1465 8588.4805 L
-7852.1738 8588.4395 L
-7852.1465 8588.4805 L
-7852.0938 8588.4531 -7852.1328 8588.3857 -7852.1191 8588.3457 C
-7852.2017 8588.291 -7852.2954 8588.3721 -7852.375 8588.4395 C
-7852.4023 8588.4121 L
-7852.2695 8588.3066 -7852.1074 8588.3457 -7851.918 8588.3721 C
-7851.8657 8588.4121 -7851.8496 8588.4805 -7851.8496 8588.5332 C
-7852.0254 8588.6826 -7852.2266 8588.6143 -7852.4023 8588.5332 C
-7852.3086 8588.4805 l
f0 0 0 0 k
-7852.1191 8588.6016 m
-7852.1465 8588.5752 L
-7852.0801 8588.5078 L
-7852.1191 8588.6016 L
f0 0 0 1 k
-7847.3711 8597.3457 m
-7847.1978 8597.4004 -7847.2114 8597.5752 -7847.2778 8597.6973 C
-7847.3848 8597.71 -7847.4526 8597.8174 -7847.561 8597.8311 C
-7847.561 8597.8047 -7847.5474 8597.6025 -7847.6934 8597.6689 C
-7847.5742 8597.7363 -7847.7617 8597.8174 -7847.8574 8597.8311 C
-7847.7617 8597.7637 L
-7847.8306 8597.6689 -7847.9238 8597.7363 -7848.0176 8597.6689 C
-7847.9238 8597.6025 L
-7848.0449 8597.5078 L
-7847.8306 8597.4395 -7847.6406 8597.292 -7847.3711 8597.3457 c
f-7849.9121 8591.1602 m
-7849.6694 8591.1318 -7849.4673 8590.998 -7849.3066 8591.2529 C
-7849.2793 8591.4023 -7849.4551 8591.4961 -7849.5625 8591.5361 C
-7849.8848 8591.5361 L
-7849.8594 8591.5098 L
-7849.9785 8591.374 L
-7849.9526 8591.3477 L
-7850.0474 8591.2793 L
-7849.9526 8591.2793 -7849.8442 8591.1992 -7849.9121 8591.1602 C
f0 0 0 0 k
-7849.5898 8591.2129 m
-7849.6289 8591.1602 -7849.7114 8591.1992 -7849.75 8591.1855 C
-7849.7246 8591.1455 -7849.6694 8591.1318 -7849.6289 8591.1182 C
-7849.5215 8591.1729 -7849.603 8591.3066 -7849.5898 8591.374 C
-7849.6694 8591.4551 -7849.8306 8591.3613 -7849.8848 8591.415 C
-7849.6831 8591.3613 -7849.8442 8591.1992 -7849.5898 8591.2129 C
f0 0 0 1 k
-7849.5898 8591.3203 m
-7849.6152 8591.335 -7849.6426 8591.3477 -7849.6289 8591.374 C
-7849.6289 8591.415 L
-7849.6978 8591.415 L
-7849.6978 8591.374 L
-7849.6558 8591.374 L
-7849.7246 8591.2793 L
-7849.5898 8591.3203 L
f-7848.7817 8598.1992 m
-7848.7266 8598.2266 -7848.7681 8598.3086 -7848.7559 8598.3613 C
-7848.8481 8598.4824 -7848.9961 8598.4561 -7849.145 8598.4561 C
-7849.0649 8598.4023 -7849.0098 8598.4688 -7848.9434 8598.3613 C
-7849.0098 8598.2266 L
-7849.0513 8598.2793 -7849.1313 8598.3223 -7849.1719 8598.2676 C
-7849.0649 8598.1992 -7848.916 8598.1191 -7848.7817 8598.1992 c
f-7848.6191 8590.123 m
-7848.5664 8590.2168 L
-7848.7266 8590.3105 L
-7848.7007 8590.2969 -7848.6738 8590.2842 -7848.687 8590.2578 C
-7848.7266 8590.2168 L
-7848.8481 8590.3516 L
-7848.875 8590.2842 -7848.9434 8590.3242 -7848.9824 8590.3105 C
-7848.8887 8590.3105 L
-7848.8887 8590.2578 L
-7848.8481 8590.2842 L
-7848.7817 8590.1504 L
-7849.1055 8590.1504 L
-7848.9434 8590.1367 -7848.7817 8590.042 -7848.6191 8590.123 C
f-7832.3242 8601.2559 m
-7832.2578 8601.041 -7832.5137 8601.1758 -7832.5801 8601.0938 C
-7832.5137 8601.0273 -7832.3794 8601.1758 -7832.3242 8601.0273 C
-7832.3794 8600.959 -7832.5137 8600.8926 -7832.6206 8600.959 C
-7832.6479 8600.959 L
-7832.5 8600.8398 -7832.1504 8600.9736 -7832.0703 8600.7051 C
-7832.1367 8600.7051 -7832.2046 8600.5967 -7832.1367 8600.543 C
-7831.9082 8600.5293 -7831.8262 8600.3271 -7831.6138 8600.2871 C
-7831.707 8600.2207 L
-7831.5313 8600.165 -7831.3022 8600.207 -7831.0991 8600.1914 C
-7831.248 8599.9639 -7830.7642 8600.165 -7830.8047 8599.9639 C
-7830.6953 8600.1113 -7830.5352 8600.1914 -7830.4551 8600.0986 C
-7830.2246 8600.2324 -7829.9297 8600.4766 -7829.9297 8600.7715 C
-7829.834 8600.9336 -7829.9688 8600.959 -7829.9961 8601.1621 C
-7830.0366 8601.1211 L
-7830.0513 8601.1895 -7830.145 8601.2559 -7830.0649 8601.3232 C
-7830.1719 8601.3496 -7830.2793 8601.4043 -7830.3184 8601.5117 C
-7830.3184 8601.6465 -7830.4414 8601.7813 -7830.5488 8601.7402 C
-7830.5879 8601.7676 -7830.5742 8601.8086 -7830.5742 8601.834 C
-7830.6426 8601.834 -7830.6953 8601.8486 -7830.7358 8601.9023 C
-7831.0054 8601.9961 -7831.3145 8602.0098 -7831.584 8602.2529 C
-7831.4902 8602.1982 L
-7831.543 8602.0918 L
-7831.7734 8602.3203 L
-7831.7466 8602.1982 -7831.5718 8602.0918 -7831.6519 8601.9697 C
-7831.7466 8601.8887 -7831.8398 8601.9834 -7831.9351 8601.9961 C
-7831.8398 8601.9287 L
-7831.9351 8601.8223 -7832.0962 8602.0098 -7832.2305 8601.9023 C
-7832.0703 8601.7148 -7832.2046 8601.6055 -7832.3521 8601.5117 C
-7832.6758 8601.5117 L
-7832.5273 8601.5117 -7832.3521 8601.417 -7832.3242 8601.2559 c
f-7847.0718 8591.1602 m
-7847.1113 8591.1729 -7847.1113 8591.2129 -7847.1113 8591.2529 C
-7847.0586 8591.3477 -7846.9634 8591.3203 -7846.8833 8591.3477 C
-7846.8442 8591.2529 L
-7846.9102 8591.1602 -7846.9634 8591.3066 -7847.0039 8591.1855 C
-7846.9375 8591.0391 -7846.7754 8591.1855 -7846.6543 8591.1855 C
-7846.5742 8591.374 -7846.8022 8591.3887 -7846.9102 8591.374 C
-7847.0586 8591.4297 -7847.125 8591.293 -7847.2319 8591.2529 C
-7847.207 8591.2402 -7847.1519 8591.1182 -7847.0718 8591.1602 C
f-7844.9038 8591.6719 m
-7844.7422 8591.7383 -7844.5938 8591.9258 -7844.6479 8592.0215 C
-7844.623 8592.1016 -7844.7031 8592.1416 -7844.7153 8592.1836 C
-7844.5542 8592.21 -7844.3647 8592.3574 -7844.4863 8592.5469 C
-7844.998 8592.7881 -7845.457 8592.3975 -7845.7114 8592.25 C
-7845.6177 8592.1553 L
-7845.752 8592.0889 L
-7845.5234 8591.8047 -7845.2534 8591.6426 -7844.9038 8591.6719 C
f-7821.4863 8593.1104 m
-7821.5503 8593.1104 L
-7821.459 8593.083 -7821.4038 8592.9902 -7821.3242 8592.9209 C
-7821.3633 8592.8818 -7821.3906 8592.8408 -7821.459 8592.8535 C
-7821.4863 8592.8818 L
-7821.459 8592.8271 -7821.2559 8592.8818 -7821.3242 8592.7207 C
-7821.3633 8592.6934 L
-7821.0688 8592.7324 -7821.0137 8592.4629 -7820.7441 8592.5039 C
-7820.5298 8592.248 -7820.2598 8592.5449 -7820.0718 8592.5313 C
-7820.084 8592.6387 -7819.9634 8592.6797 -7819.9102 8592.7598 C
-7819.9102 8593.3105 L
-7820.0176 8593.3652 -7820.0718 8593.4736 -7820.166 8593.5938 C
-7820.0039 8593.6758 -7819.8281 8593.8232 -7819.7754 8593.9863 c
-7819.6543 8594.2949 -7819.9902 8594.3223 -7820.0718 8594.5361 C
-7820.207 8594.457 -7820.3672 8594.5361 -7820.4878 8594.6035 C
-7820.5566 8594.6582 L
-7820.4351 8594.416 -7820.8262 8594.4961 -7820.9727 8594.4424 C
-7821.0688 8594.4424 L
-7821.0137 8594.3896 -7820.9063 8594.4023 -7820.9063 8594.3086 C
-7821.1343 8594.3086 L
-7821.0962 8594.2949 -7821.041 8594.2949 -7821 8594.2402 C
-7821.0688 8594.1465 L
-7821.0137 8594.1592 -7821 8594.1055 -7820.9727 8594.0781 C
-7820.959 8594.0391 -7821.0137 8594.0127 -7821.041 8593.9863 C
-7820.9312 8593.918 L
-7821.0137 8593.8369 -7821.1074 8593.8232 -7821.0688 8593.6895 C
-7821.3906 8593.6348 L
-7821.2954 8593.5684 L
-7821.3374 8593.5137 -7821.3906 8593.4863 -7821.459 8593.501 C
-7821.4863 8593.5273 L
-7821.418 8593.4336 L
-7821.6465 8593.4063 L
-7821.6191 8593.2988 -7821.3105 8593.2578 -7821.4863 8593.1104 C
f-7839.25 8599.208 m
-7839.3169 8599.1406 L
-7839.127 8599.0332 -7838.9663 8598.6973 -7838.603 8598.7246 c
-7838.3887 8598.71 -7838.2656 8598.8184 -7838.0513 8598.9121 C
-7837.9434 8599.249 -7838.0918 8599.4238 -7838.3066 8599.6523 C
-7838.4688 8599.5859 -7838.7642 8599.7734 -7838.9526 8599.7471 C
-7838.9946 8599.7871 L
-7838.8984 8599.6934 L
-7839.3442 8599.5576 L
-7839.2778 8599.4648 -7839.3047 8599.3154 -7839.25 8599.208 C
f0 0 0 0 k
-7844.4863 8594.5781 m
-7844.4863 8594.5518 L
-7844.3926 8594.5518 L
-7844.3926 8594.5781 L
-7844.4863 8594.5781 L
f0 0 0 1 k
-7842.6426 8593.7041 m
-7842.6426 8593.7305 -7842.6694 8593.7568 -7842.6831 8593.7715 C
-7842.6426 8593.7178 -7842.7358 8593.5957 -7842.8047 8593.6768 C
-7842.7642 8593.6367 -7842.6426 8593.6094 -7842.6426 8593.7041 C
f-7841.4849 8593.8379 m
-7841.5122 8593.7988 L
-7841.5503 8593.7988 -7841.3496 8593.7305 -7841.418 8593.6367 C
-7841.0688 8593.4199 -7840.9458 8594.0801 -7840.6094 8593.7041 C
-7840.4199 8593.8936 -7840.125 8593.7988 -7840.0586 8594.0938 c
-7840.0449 8594.3232 -7840.2598 8594.4453 -7840.4473 8594.5117 c
-7840.7441 8594.5781 L
-7840.7305 8594.5254 -7840.7969 8594.498 -7840.8398 8594.5117 C
-7840.9727 8594.5117 L
-7840.8794 8594.3232 -7841.1626 8594.4453 -7841.229 8594.3232 C
-7841.1895 8594.3232 L
-7841.2144 8594.1211 -7841.4297 8594.2295 -7841.5122 8594.0674 C
-7841.6191 8594.0273 L
-7841.6328 8593.9326 -7841.5254 8593.9063 -7841.4849 8593.8379 C
f-7832.9663 8594.4219 m
-7833.061 8594.3809 -7832.8047 8594.3809 -7832.9414 8594.2871 C
-7832.793 8594.2871 -7832.8184 8594.125 -7832.7114 8594.0977 C
-7832.7383 8594.0723 L
-7832.5098 8594.166 -7832.5649 8593.7363 -7832.1992 8593.9375 C
-7832.0391 8593.749 -7831.918 8594.0977 -7831.7695 8594.0313 C
-7831.5664 8594.2734 -7831.5527 8594.3936 -7831.6479 8594.6777 C
-7831.7817 8594.8926 -7831.7422 8594.7441 -7831.9297 8594.9727 c
-7832.0391 8595.0674 L
-7832.1055 8594.8535 -7832.2129 8595.2969 -7832.3198 8595.0674 C
-7832.4282 8595.0801 -7832.4961 8595.1621 -7832.6177 8595.1367 C
-7832.5762 8595.1094 -7832.5762 8595.0674 -7832.5762 8595.041 C
-7832.645 8594.9727 -7832.7383 8595.0137 -7832.8047 8595.001 C
-7832.7778 8594.9063 L
-7832.9414 8594.8398 L
-7832.9009 8594.8262 -7832.9009 8594.7852 -7832.9009 8594.7441 C
-7833.0078 8594.7178 L
-7833.0742 8594.5566 -7832.7778 8594.5703 -7832.9663 8594.4219 C
f0 0 0 0 k
-7832.668 8595.918 m
-7832.897 8595.9434 L
-7832.7617 8595.918 L
-7832.668 8595.918 L
f0 0 0 1 k
-7827.4023 8600.5566 m
-7827.4023 8600.4609 L
-7827.2954 8600.5039 -7827.3223 8600.3682 -7827.2695 8600.3271 C
-7827.0801 8600.3408 -7826.8105 8600.2998 -7826.7559 8600.4902 C
-7826.8242 8600.7842 L
-7826.918 8600.7324 -7827.0122 8600.8662 -7827.1074 8600.9063 C
-7827.0938 8600.7969 -7827.2817 8600.8662 -7827.2695 8600.8535 c
-7827.2422 8600.8125 L
-7827.3633 8600.7842 -7827.3887 8600.7441 -7827.498 8600.6504 C
-7827.4282 8600.6768 -7827.375 8600.623 -7827.4023 8600.5566 C
f0 0 0 0 k
-7827.3359 8600.7178 m
-7827.3359 8600.6904 L
-7827.2017 8600.6904 L
-7827.2017 8600.7178 L
-7827.3359 8600.7178 L
f0 0 0 1 k
-7826.5273 8607.8535 m
-7826.3535 8607.8535 -7826.1777 8608.0273 -7826.2993 8608.2168 c
-7826.3926 8608.3242 -7826.541 8608.3242 -7826.6626 8608.2832 c
-7826.8242 8608.2031 -7826.8105 8607.7988 -7826.5273 8607.8535 C
f-7823.1626 8597.3242 m
-7823.1758 8597.2305 -7823.1489 8597.2578 -7823.1343 8597.1367 C
-7823.0273 8597.0967 -7822.8398 8597.0566 -7822.7441 8597.1631 c
-7822.6777 8597.2705 -7822.6777 8597.3789 -7822.7441 8597.4863 C
-7822.8657 8597.5801 -7822.8398 8597.5273 -7822.9746 8597.5801 C
-7823.0688 8597.499 -7823.2144 8597.4736 -7823.2031 8597.3242 C
-7823.1626 8597.3242 L
f-7822.3535 8596.8672 m
-7822.3398 8596.9346 -7822.3809 8596.9609 -7822.4214 8597.002 C
-7822.4766 8596.9902 -7822.5566 8596.9492 -7822.5151 8596.8672 C
-7822.3535 8596.8672 L
f-7825.625 8602.207 m
-7825.5718 8602.127 -7825.4512 8602.1006 -7825.3306 8602.1133 C
-7825.3169 8602.1807 -7825.207 8602.2344 -7825.3022 8602.3018 c
-7825.3823 8602.3711 -7825.4766 8602.3945 -7825.5854 8602.3945 C
-7825.6113 8602.3418 -7825.6934 8602.2881 -7825.5854 8602.2344 C
-7825.625 8602.207 L
f0 0 0 0 k
-7825.4634 8602.2754 m
-7825.4238 8602.3018 L
-7825.3574 8602.248 -7825.5586 8602.4375 -7825.5586 8602.2754 C
-7825.5313 8602.168 -7825.4902 8602.248 -7825.4634 8602.2754 c
f0 0 0 1 k
-7822.0703 8604.376 m
-7822.2319 8604.3086 L
-7822.1113 8604.334 -7822.0449 8604.2529 -7821.9648 8604.1738 C
-7821.9648 8604.1465 -7821.9648 8604.1055 -7822.0039 8604.0791 C
-7821.9102 8604.1055 -7821.855 8604.0391 -7821.7754 8604.0117 C
-7821.8418 8603.8896 L
-7821.5054 8603.9453 -7820.9414 8603.7158 -7820.7114 8604.2129 C
-7820.7793 8604.7246 L
-7820.8066 8604.6973 L
-7820.9009 8604.9414 -7821.1016 8604.9551 -7821.2222 8605.1416 C
-7821.2222 8605.21 L
-7821.3848 8605.0879 L
-7821.4673 8605.1826 -7821.4258 8605.0352 -7821.519 8605.0488 C
-7821.7754 8605.1826 L
-7821.7886 8605.1289 -7821.7344 8605.1152 -7821.709 8605.0879 C
-7821.7617 8604.9678 -7821.8418 8605.0615 -7821.9102 8605.0879 C
-7821.855 8604.9805 -7821.9902 8604.873 -7822.125 8604.6973 C
-7822.1519 8604.7393 -7822.1934 8604.7246 -7822.2319 8604.7246 C
-7822.166 8604.7246 -7822.1382 8604.6582 -7822.0977 8604.6309 C
-7822.0977 8604.6055 L
-7822.3281 8604.5625 L
-7822.2871 8604.4551 -7822.0449 8604.5625 -7822.0703 8604.376 C
f-7821.3574 8599.5566 m
-7821.2642 8599.4883 -7821.2642 8599.4473 -7821.3169 8599.3662 c
-7821.3574 8599.3262 L
-7821.4121 8599.3398 -7821.25 8599.2988 -7821.2222 8599.3662 C
-7821.1426 8599.3135 -7821.1978 8599.1523 -7821.0352 8599.2051 C
-7820.9282 8599.1113 -7821.0879 8599.0576 -7821.1016 8598.9766 C
-7820.9414 8598.9629 -7820.9551 8599.1367 -7820.7793 8599.0713 C
-7820.6177 8598.748 -7820.3481 8599.1523 -7820.187 8599.0039 C
-7820.1602 8599.0039 -7819.998 8598.9902 -7819.998 8599.1113 C
-7819.9458 8599.124 -7819.9312 8599.0576 -7819.9038 8599.0439 C
-7819.7422 8599.1113 -7819.7031 8599.4082 -7819.5801 8599.3936 C
-7819.4863 8599.4473 -7819.5 8599.542 -7819.4199 8599.5938 C
-7819.4199 8599.6104 -7819.4458 8599.7031 -7819.3521 8599.7568 C
-7819.5664 8599.8789 -7819.123 8599.959 -7819.3794 8600.04 C
-7819.4199 8600.1348 -7819.2847 8600.1738 -7819.2578 8600.2031 C
-7819.3242 8600.2148 -7819.4063 8600.1348 -7819.4863 8600.2031 C
-7819.2305 8600.418 -7819.6758 8600.418 -7819.5801 8600.6865 C
-7819.6353 8600.6182 -7819.729 8600.6865 -7819.7422 8600.7539 c
-7819.7422 8600.8203 L
-7819.8906 8600.6865 -7819.9863 8600.9414 -7820.0918 8600.9414 C
-7820.1738 8600.9961 -7820.416 8600.7119 -7820.5762 8600.9824 C
-7820.6978 8601.0498 -7820.7246 8600.6182 -7820.9414 8600.8203 c
-7821.0352 8600.916 L
-7821.1152 8600.793 -7820.8594 8600.7676 -7820.9946 8600.6602 C
-7821.1289 8600.6055 -7821.1016 8600.7539 -7821.1978 8600.7793 C
-7821.1816 8600.7402 -7820.9414 8600.4834 -7821.2222 8600.4297 C
-7821.4512 8600.498 L
-7821.4121 8600.418 -7821.3306 8600.3359 -7821.3169 8600.2422 C
-7821.3711 8600.0684 -7821.5474 8600.2959 -7821.519 8600.1738 C
-7821.4512 8600.1348 -7821.3442 8600.1201 -7821.3848 8600.0127 C
-7821.6138 8599.8789 L
-7821.4258 8599.8652 -7821.519 8599.5938 -7821.3574 8599.5566 C
f-7815.3169 8603.3965 m
-7815.3306 8603.3828 -7815.3442 8603.3574 -7815.3711 8603.3691 C
-7815.3574 8603.2354 -7815.1543 8603.1143 -7815.209 8602.9395 C
-7814.981 8602.9395 -7815.0337 8602.5615 -7814.791 8602.6563 C
-7814.6831 8602.6289 -7814.75 8602.4414 -7814.603 8602.5615 C
-7814.5625 8602.5352 -7814.5625 8602.4941 -7814.5625 8602.4551 C
-7814.293 8602.5488 -7814.0234 8602.3994 -7813.7954 8602.5889 C
-7813.6465 8602.6025 -7813.6738 8602.8311 -7813.498 8602.7783 C
-7813.5664 8602.8447 L
-7813.5122 8602.9941 -7813.2559 8603.0586 -7813.4038 8603.2617 C
-7813.3374 8603.4238 L
-7813.459 8603.5176 -7813.498 8603.667 -7813.5391 8603.8535 C
-7813.6191 8603.9219 -7813.8359 8603.8945 -7813.7954 8604.0703 C
-7813.9839 8603.9883 -7813.957 8604.2305 -7814.0513 8604.2988 C
-7814.1167 8604.2305 L
-7814.2129 8604.3379 L
-7814.2246 8604.2871 -7814.1855 8604.2305 -7814.2402 8604.2041 C
-7814.3887 8604.2041 -7814.4688 8604.2988 -7814.5625 8604.3936 C
-7814.5625 8604.3662 -7814.5762 8604.3242 -7814.5352 8604.2988 C
-7814.6152 8604.1904 -7814.6694 8604.3662 -7814.7642 8604.3379 C
-7814.7642 8604.2715 L
-7814.8848 8604.2715 L
-7814.8594 8604.2305 L
-7814.939 8604.0967 -7815.061 8604.2305 -7815.1543 8604.2305 C
-7815.1406 8604.1777 -7815.0337 8604.1094 -7815.1138 8604.043 c
-7815.248 8603.9082 L
-7815.2617 8603.9492 -7815.3022 8603.9492 -7815.3442 8603.9492 C
-7815.248 8603.7461 L
-7815.3574 8603.6387 -7815.4375 8603.8672 -7815.5313 8603.7871 C
-7815.2778 8603.7207 -7815.4785 8603.5303 -7815.3169 8603.3965 C
f-7817.3457 8594.6152 m
-7817.332 8594.6816 -7817.252 8594.7227 -7817.2778 8594.8027 c
-7817.3457 8594.9375 -7817.5078 8594.8438 -7817.5474 8594.7754 C
-7817.4282 8594.6816 -7817.5327 8594.6016 -7817.3457 8594.6152 C
f-7815.771 8589.0938 m
-7815.7031 8589.0684 -7815.6758 8589.123 -7815.6367 8589.1621 C
-7815.582 8589.2705 -7815.7305 8589.3369 -7815.7983 8589.377 C
-7815.9458 8589.3506 -7815.7983 8589.3242 -7815.9312 8589.2559 C
-7815.9063 8589.1621 -7815.8511 8589.1094 -7815.771 8589.0938 c
f-7813.9282 8600.9414 m
-7813.8457 8600.9824 -7813.752 8600.9414 -7813.6978 8601.0498 C
-7813.7383 8601.1035 -7813.7383 8601.2246 -7813.832 8601.2383 c
-7813.9282 8601.2383 L
-7813.9946 8601.1699 -7813.7383 8601.1309 -7813.9282 8601.0498 C
-7813.9946 8601.1445 L
-7813.981 8601.0625 -7814.0078 8600.9824 -7813.9282 8600.9414 C
f-7813.4688 8596.1631 m
-7813.4688 8596.0957 -7813.4414 8596.002 -7813.4023 8595.9072 C
-7813.2534 8595.7734 -7813.0649 8595.7734 -7812.8633 8595.7734 C
-7812.6479 8595.9609 -7812.5 8596.002 -7812.5391 8596.2568 C
-7812.4199 8596.3379 -7812.6895 8596.418 -7812.5 8596.4863 C
-7812.5801 8596.5273 -7812.7817 8596.54 -7812.6626 8596.6895 C
-7812.6353 8596.5938 -7812.8633 8596.6602 -7812.916 8596.6895 C
-7812.916 8596.7402 L
-7812.957 8596.7402 -7812.9839 8596.6484 -7813.0513 8596.6895 C
-7813.1191 8596.8496 -7813.1992 8596.6201 -7813.3066 8596.6895 C
-7813.2671 8596.6602 -7813.2793 8596.6201 -7813.2793 8596.5801 C
-7813.3066 8596.5273 -7813.3887 8596.5664 -7813.4414 8596.5537 C
-7813.4688 8596.5801 L
-7813.4023 8596.5273 L
-7813.5366 8596.3633 L
-7813.4688 8596.2969 L
-7813.5625 8596.2568 L
-7813.4688 8596.1631 L
f-7812.8223 8597.0391 m
-7812.7817 8596.9844 -7812.5664 8597.0391 -7812.5938 8596.877 C
-7812.5391 8596.9033 -7812.5 8596.8496 -7812.4727 8596.8086 C
-7812.4727 8596.7402 L
-7812.4458 8596.8086 -7812.3794 8596.7695 -7812.3374 8596.7822 C
-7812.2847 8596.7559 -7812.3242 8596.7012 -7812.3105 8596.6484 C
-7812.271 8596.7012 -7812.2168 8596.6895 -7812.1758 8596.7402 C
-7812.0566 8596.6895 L
-7812.0566 8596.7266 -7812.002 8596.7402 -7811.9878 8596.7822 C
-7811.7871 8596.6602 -7811.7183 8596.9297 -7811.5703 8596.9707 c
-7811.4238 8597.0234 -7811.5703 8597.2666 -7811.3418 8597.293 C
-7811.584 8597.5352 -7811.2319 8597.7109 -7811.5039 8598.0078 C
-7811.5313 8598.0078 -7811.5703 8598.0215 -7811.5977 8597.9805 C
-7811.6934 8598.0078 -7811.666 8598.1416 -7811.625 8598.1953 C
-7811.6934 8598.1953 -7811.7183 8598.1416 -7811.7598 8598.1016 C
-7811.8398 8598.3574 -7812.1094 8598.1689 -7812.2168 8598.2637 C
-7812.2031 8598.1416 -7812.3647 8598.249 -7812.4063 8598.1689 C
-7812.4727 8598.2363 L
-7812.4321 8598.1016 L
-7812.5 8598.1289 -7812.5664 8598.0469 -7812.6353 8598.1689 C
-7812.7007 8598.0215 -7812.6074 8597.8057 -7812.8223 8597.8457 C
-7812.7422 8597.8057 -7812.7695 8597.7246 -7812.7559 8597.6563 C
-7813.0786 8597.5088 -7812.6353 8597.2266 -7812.8223 8597.0391 C
f-7809.6313 8598.9102 m
-7809.5649 8598.8008 -7809.7129 8598.7344 -7809.752 8598.7217 C
-7809.6992 8598.6797 -7809.6855 8598.627 -7809.6855 8598.5586 C
-7809.7129 8598.4912 -7809.7793 8598.5322 -7809.8198 8598.5186 C
-7809.7681 8598.4375 -7809.5503 8598.5723 -7809.5918 8598.3975 C
-7809.6602 8598.3301 L
-7809.498 8598.2637 L
-7809.5918 8598.1416 L
-7809.5122 8598.1689 -7809.3086 8598.1016 -7809.3359 8597.9414 C
-7809.4038 8597.7793 L
-7809.377 8597.7646 -7809.3496 8597.792 -7809.3359 8597.8184 C
-7809.187 8597.792 -7809.377 8597.5352 -7809.1738 8597.6162 C
-7809.229 8597.415 -7809.0801 8597.2266 -7809.1074 8597.1064 C
-7808.998 8597.1455 -7809.0273 8597.0098 -7808.9863 8596.9707 C
-7808.9312 8596.9707 -7808.9063 8597.0234 -7808.8511 8597.0098 C
-7808.8511 8596.835 -7808.7441 8597.0645 -7808.6895 8596.9434 C
-7808.582 8596.9844 -7808.4878 8597.1455 -7808.3672 8597.0391 C
-7808.4878 8597.2129 -7808.2466 8597.2666 -7808.2319 8597.3887 C
-7808.0161 8597.3594 -7808.2598 8597.1455 -7808.1113 8597.0645 C
-7808.0161 8597.2266 -7808.1777 8597.4277 -7807.9082 8597.4551 C
-7807.8145 8597.3594 L
-7807.7617 8597.415 -7807.7466 8597.6162 -7807.627 8597.4951 C
-7807.5313 8597.6846 L
-7807.4238 8597.6563 L
-7807.4102 8597.6973 -7807.4512 8597.751 -7807.397 8597.7793 c
-7807.3442 8597.792 -7807.3306 8597.7383 -7807.3047 8597.7109 C
-7807.3169 8597.8184 -7807.2886 8597.9121 -7807.209 8597.9805 C
-7807.1016 8597.9414 L
-7807.1016 8598.1953 L
-7806.8984 8598.1689 -7807.127 8598.3975 -7806.9121 8598.4248 C
-7807.1016 8598.5586 -7806.8442 8598.6797 -7806.7778 8598.7217 C
-7806.832 8598.748 -7806.9121 8598.7344 -7806.9121 8598.8154 C
-7806.981 8598.9902 -7806.7778 8598.9102 -7806.7246 8598.9766 C
-7806.9121 8599.0039 L
-7806.9526 8599.085 -7806.9121 8599.1914 -7806.8848 8599.2734 C
-7806.8442 8599.2734 L
-7806.8442 8599.3535 -7807.1016 8599.4609 -7806.9121 8599.5566 C
-7806.939 8599.542 -7806.9526 8599.5703 -7806.981 8599.5938 C
-7807.0337 8599.7031 -7806.8848 8599.7305 -7806.8848 8599.8105 C
-7806.9258 8599.8379 -7807.127 8599.542 -7807.168 8599.8105 C
-7807.1406 8600.1074 L
-7807.2617 8599.8789 L
-7807.627 8599.9863 -7807.3442 8600.498 -7807.7466 8600.5254 C
-7807.7329 8600.376 -7807.897 8600.3496 -7807.9766 8600.3633 C
-7808.1641 8600.3633 -7808.0977 8600.6328 -7808.2993 8600.5918 C
-7808.2598 8600.3359 -7808.5962 8600.2813 -7808.7168 8600.3633 c
-7808.8242 8600.418 -7808.7832 8600.5654 -7808.8794 8600.5918 C
-7808.9063 8600.498 -7808.7168 8600.3232 -7808.8794 8600.2031 C
-7809.041 8600.2959 L
-7808.9863 8600.2285 -7809.0273 8600.1074 -7809.0801 8600.04 C
-7809.2017 8600.1074 L
-7809.187 8600.04 -7809.0801 8599.959 -7809.2017 8599.918 C
-7809.3633 8599.9736 L
-7809.377 8599.9063 -7809.2559 8599.8906 -7809.3086 8599.8105 C
-7809.3496 8599.7705 -7809.4297 8599.6631 -7809.498 8599.7568 C
-7809.5649 8599.7842 -7809.3906 8599.6104 -7809.5649 8599.5566 C
-7809.6855 8599.5566 L
-7809.6313 8599.4883 -7809.5122 8599.4473 -7809.5649 8599.2988 C
-7809.793 8599.2988 L
-7809.752 8599.2461 -7809.6602 8599.2188 -7809.6855 8599.1367 C
-7809.8887 8599.0713 L
-7809.793 8599.0293 -7809.645 8599.0439 -7809.6313 8598.9102 C
f-7827.5234 8592.123 m
-7827.375 8592.1494 -7827.187 8592.0547 -7827.1055 8592.2842 C
-7827.1191 8592.46 -7827.1738 8592.8096 -7827.4282 8592.6738 C
-7827.498 8592.7422 L
-7827.6855 8592.5801 L
-7827.5786 8592.46 -7827.8198 8592.3789 -7827.6855 8592.2568 C
-7827.6177 8592.2441 -7827.498 8592.2305 -7827.5234 8592.123 C
f-7826.7153 8592.5127 m
-7826.5273 8592.4453 L
-7826.7153 8592.5127 L
f-7826.1367 8592.3242 m
-7826.3926 8592.418 L
-7826.3926 8592.3789 L
-7826.459 8592.418 L
-7826.459 8592.3516 L
-7826.1367 8592.3242 L
f-7825.7871 8592.0273 m
-7825.8145 8592.042 -7825.8262 8592.0156 -7825.855 8592.002 C
-7825.8008 8591.9746 -7825.7598 8591.9746 -7825.7207 8591.9336 C
-7825.8809 8591.8662 L
-7825.7466 8591.8408 -7825.6934 8591.7441 -7825.625 8591.6377 C
-7825.6519 8591.6104 L
-7825.4497 8591.4219 -7825.1138 8591.4219 -7824.8848 8591.4766 C
-7824.7222 8591.585 -7824.5625 8591.7988 -7824.332 8591.7305 C
-7824.2656 8591.8408 -7824.481 8591.8135 -7824.3594 8591.8945 c
-7824.2383 8591.9746 -7824.2129 8592.2031 -7824.1313 8592.3516 C
-7824.332 8592.4736 -7824.2793 8592.5938 -7824.332 8592.7695 C
-7824.3862 8592.8369 -7824.5625 8592.8232 -7824.4946 8592.9707 C
-7824.5879 8592.8633 L
-7824.7114 8592.9297 -7824.6289 8593.0654 -7824.6558 8593.1602 C
-7824.8159 8593.0254 L
-7824.8984 8593.1729 -7825.1543 8593.1328 -7825.2617 8593.1865 C
-7825.4102 8592.998 -7825.6113 8593.2393 -7825.7207 8593.3477 C
-7825.7871 8593.2266 -7825.5039 8593.0254 -7825.6934 8592.8633 C
-7825.7207 8592.8896 -7825.7329 8592.9434 -7825.7871 8592.9297 C
-7825.9487 8592.7813 -7825.584 8592.6895 -7825.7871 8592.5801 C
-7826.1094 8592.8369 L
-7825.9214 8592.54 -7825.6519 8592.3926 -7825.7871 8592.0273 C
f-7826.0161 8592.2842 m
-7825.8809 8592.2168 L
-7826.0161 8592.2842 L
f-7824.6558 8593.6172 m
-7824.6831 8593.6172 L
-7824.6831 8593.5098 L
-7824.6558 8593.6172 L
fUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed 7)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7893.0254 8611.0264 m
-7837.0938 8611.0264 L
-7837.0938 8550.6396 L
-7893.0254 8550.6396 L
-7893.0254 8611.0264 L
n0 O
0.9137 0.2627 0.9765 0.1216 k
0 R
0 0 0 1 K
1 J 1 j 0.0518 w-7867.1294 8587.7207 m
-7866.8896 8598.5215 -7872.4097 8608.8398 v
-7871.9312 8611 -7870.4897 8611 v
-7870.7305 8607.6406 -7869.7695 8607.1602 v
-7865.4502 8595.1602 -7866.1689 8587.2402 v
-7867.1294 8587.7207 l
b0.1961 0.9294 0.8941 0.0627 k
-7868.8486 8588.5811 m
B0.8627 0.0392 0.9647 0.0039 k
-7837.1191 8577.5449 m
-7837.624 8578.4102 -7838.7466 8579.2031 -7839.457 8579.8906 c
-7841.2617 8581.6348 -7843.1953 8590.0957 -7845.1577 8591.6621 c
-7847.1558 8593.2549 -7849.2905 8594.8496 -7851.6582 8595.8516 c
-7852.6978 8596.291 -7853.5625 8596.3594 -7854.6362 8596.4961 c
-7856.2817 8596.707 -7857.7393 8597.7969 -7859.397 8597.8672 c
-7861.6914 8597.9648 -7863.7422 8590.5254 -7865.625 8589.3242 c
-7866.5063 8588.7627 -7868.8486 8595.1963 -7869.8682 8595.3906 c
-7870.3174 8595.4766 -7870.7754 8595.875 -7871.2183 8596.0381 c
-7872.2402 8596.415 -7873.2202 8596.4844 -7874.2993 8596.4961 c
-7876.8306 8596.5254 -7878.8047 8594.8262 -7881.1528 8594.2051 c
-7882.5679 8593.8301 -7883.9561 8593.5176 -7885.3218 8592.9619 c
-7888.0151 8591.8672 -7889.1865 8588.4531 -7890.04 8585.9375 c
-7891.063 8582.9199 -7891.7534 8579.8047 -7893 8576.8652 C
-7890.5898 8578.0498 -7887.0742 8579.4004 -7884.6304 8577.5293 c
-7884.084 8577.1113 -7883.8369 8576.4805 -7883.1406 8576.1299 c
-7881.2065 8575.1543 -7877.585 8577.8398 -7877.5952 8574.4883 c
-7877.6094 8569.9199 -7879.9697 8565.9883 -7880.543 8561.6172 C
-7879.6206 8563.166 -7878.4385 8564.541 -7876.8218 8565.3965 c
-7873.7222 8567.0391 -7872.021 8564.6699 -7870.9858 8561.8691 c
-7870.3906 8560.2598 -7869.981 8558.5781 -7869.5977 8556.9082 c
-7869.2192 8555.2539 -7868.0186 8552.3174 -7868.3184 8550.666 C
-7867.9839 8552.5059 -7866.5239 8558.6709 -7864.833 8559.8857 c
-7863.1919 8561.0645 -7862.0479 8557.8203 -7860.6558 8559.3945 c
-7859.0518 8561.209 -7858.8608 8564.0957 -7857.8306 8566.2734 c
-7857.8447 8570.5488 -7853.2847 8564.3086 v
-7856.1094 8573.8555 -7857.8394 8576.8008 v
-7858.8135 8579.9102 -7852.1792 8575.9795 v
-7849.7393 8574.5332 -7847.5103 8576.4707 -7844.3184 8578.9863 c
-7838.7983 8580.4258 -7837.1191 8577.5449 V
b0.1882 0.0196 0.9412 0 K
-7866.4297 8588.7559 m
-7865.5942 8569.7314 -7868.2354 8562.0518 v
-7868.9912 8552.7266 -7868.2729 8551.2861 v
S0.1333 0.0275 0.9098 0 K
-7866.1841 8576.1025 m
-7855.7144 8571.6777 -7854.5137 8566.3965 v
S-7866.4297 8577.8223 m
-7878.9849 8565.5801 -7880.666 8561.7402 v
S-7840.5078 8580.1563 m
-7841.707 8582.3184 -7866.3071 8587.8965 y
-7873.6514 8582.1016 -7885.1694 8579.7002 v
-7890.3184 8579.3682 -7892.7202 8577.208 v
SU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed 8)
0 A
uu0 J 0 j 1 w 4 M []0 d0 XR
-7880.9678 8611 m
-7880.9678 8586.6572 L
-7889.1392 8586.6572 L
-7889.1392 8611 L
-7880.9678 8611 L
n0 R
0.8588 0.7294 0 0 K
1.9633 w-7880.9678 8586.6572 m
-7889.0737 8586.6572 L
-7889.0737 8602.8555 l
-7880.9678 8602.8555 l
S/BBAccumRotation (7.853982) XT
-7885.0142 8590.7139 m
S0.8941 0.1373 0 0 K
2 J-7885.0142 8590.7139 m
-7885.0142 8598.7988 l
-7880.9678 8598.7988 l
-7880.9678 8594.7393 l
-7880.9023 8590.7139 l
SUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed 9)
0 A
uu0 J 0 j 1 w 4 M []0 d0 XR
-7891.6992 8609.499 m
-7801.0913 8609.499 L
-7801.0913 8597.6182 L
-7891.6992 8597.6182 L
-7891.6992 8609.499 L
nu0 O
0 0 0 1 k
-7808.5425 8602.2305 m
-7808.8447 8602.2168 -7809.1479 8602.1992 -7809.4487 8602.1826 C
-7809.2959 8602.25 -7809.146 8602.3574 -7808.9937 8602.5254 C
-7808.7969 8602.6348 -7808.6929 8602.4209 -7808.5425 8602.2305 C
f/BBAccumRotation (0.598766) XT
-7810.2886 8602.1309 m
-7810.3418 8602.127 -7810.396 8602.123 -7810.4487 8602.1211 C
-7810.4961 8602.1484 -7810.5425 8602.1777 -7810.5854 8602.207 C
-7810.4858 8602.1777 -7810.3862 8602.1523 -7810.2886 8602.1309 C
f/BBAccumRotation (0.598766) XT
-7811.8647 8602.376 m
-7811.5854 8602.4297 -7811.3198 8602.3975 -7811.0601 8602.3369 C
-7811.2886 8602.2646 -7811.5542 8602.2617 -7811.8647 8602.376 C
f/BBAccumRotation (0.598766) XT
-7810.6089 8602.6104 m
-7810.7065 8602.4678 -7810.751 8602.3184 -7810.5913 8602.21 c
-7810.5913 8602.209 -7810.5874 8602.209 -7810.5854 8602.207 C
-7810.7417 8602.252 -7810.8999 8602.2998 -7811.0601 8602.3369 C
-7810.8906 8602.3926 -7810.7402 8602.4883 -7810.6089 8602.6104 C
f/BBAccumRotation (0.598766) XT
-7810.6089 8602.6104 m
-7810.5137 8602.748 -7810.3662 8602.877 -7810.314 8602.957 c
-7810.3999 8602.8301 -7810.4976 8602.7129 -7810.6089 8602.6104 C
f/BBAccumRotation (0.598766) XT
-7811.0073 8606.002 m
-7811.1631 8606.1094 -7811.1265 8605.1494 -7811.4409 8605.3633 C
-7812.1807 8605.6338 -7812.812 8606.0645 -7813.5015 8606.0664 C
-7813.8174 8606.2822 -7814.314 8605.2168 -7814.6265 8605.4316 C
-7815.3662 8605.7031 -7817.2578 8606.9922 -7816.1426 8606.9336 c
-7814.4678 8606.791 -7813.377 8606.5322 -7811.8745 8606.3545 C
-7810.6538 8605.9688 -7809.48 8605.5098 -7808.2319 8605.1621 C
-7807.8823 8605.1172 -7807.5542 8605.1914 -7807.2241 8605.2559 C
-7807.6538 8605.1074 -7808.0952 8604.959 -7808.583 8604.8174 C
-7809.2241 8604.5527 -7810.0015 8605.7842 -7811.0073 8606.002 C
f/BBAccumRotation (0.598766) XT
-7801.8706 8602.8105 m
-7802.0288 8602.918 -7802.3433 8603.1338 Y
-7803.0464 8602.4424 -7803.7866 8602.7129 -7804.5249 8602.9824 C
-7804.415 8603.1416 -7804.3081 8603.3027 -7804.1968 8603.4609 C
-7803.7729 8603.4063 -7803.7241 8603.1387 -7804.1006 8602.9287 C
-7803.2402 8603.5117 -7802.4272 8603.6016 -7801.5967 8603.5039 C
-7801.6479 8603.2432 -7801.6362 8602.9434 -7801.8706 8602.8105 C
f/BBAccumRotation (0.598766) XT
-7801.1074 8603.4248 m
-7801.271 8603.4561 -7801.437 8603.4834 -7801.5967 8603.5039 C
-7801.5938 8603.5313 -7801.5854 8603.5586 -7801.5776 8603.5879 C
-7801.4136 8603.5391 -7801.251 8603.4922 -7801.0913 8603.4482 C
-7801.0952 8603.4395 -7801.103 8603.4326 -7801.1074 8603.4248 C
f/BBAccumRotation (0.598766) XT
-7815.2104 8603.2559 m
-7817.3066 8603.293 -7819.2822 8603.2471 -7821.209 8603.1543 C
-7821.3569 8603.3408 -7821.4624 8603.5576 -7821.6602 8603.4453 C
-7821.812 8603.2783 -7821.9624 8603.1729 -7822.1143 8603.1035 C
-7822.396 8603.0879 -7822.6753 8603.0713 -7822.9546 8603.0527 C
-7823.0518 8603.0742 -7823.1519 8603.1006 -7823.2534 8603.1279 C
-7823.2554 8603.1289 -7823.2578 8603.1309 -7823.2593 8603.1328 c
-7823.4175 8603.2422 -7823.3726 8603.3906 -7823.2754 8603.5313 C
-7823.1655 8603.6328 -7823.0654 8603.752 -7822.98 8603.8789 c
-7823.0342 8603.7988 -7823.1792 8603.6699 -7823.2754 8603.5313 C
-7823.4058 8603.4102 -7823.5562 8603.3135 -7823.728 8603.2598 C
-7823.9858 8603.3193 -7824.251 8603.3535 -7824.5313 8603.2969 C
-7824.2202 8603.1846 -7823.9546 8603.1846 -7823.728 8603.2598 C
-7823.5654 8603.2207 -7823.4097 8603.1729 -7823.2534 8603.1279 C
-7823.2065 8603.0986 -7823.1631 8603.0713 -7823.1143 8603.041 C
-7823.7578 8603 -7824.396 8602.9531 -7825.0386 8602.9043 C
-7825.1846 8602.9287 -7825.3257 8602.9502 -7825.439 8602.9824 c
-7825.9014 8603.1113 -7826.3647 8603.2393 -7826.6519 8602.7734 C
-7826.7646 8602.7656 -7826.8799 8602.7559 -7826.9951 8602.7441 C
-7826.9722 8602.7734 -7826.9502 8602.7969 -7826.9297 8602.8301 C
-7826.98 8602.8008 -7827.021 8602.7695 -7827.0562 8602.7402 C
-7827.5386 8602.7002 -7828.0234 8602.6582 -7828.5098 8602.6162 C
-7828.8257 8602.7969 -7829.1479 8603.0234 -7829.4722 8603.1602 C
-7829.6914 8602.8418 -7829.7998 8602.6816 V
-7829.9312 8602.9219 -7830.1206 8603.0801 -7830.3394 8603.1602 C
-7830.0801 8603.4482 -7829.8394 8603.7646 -7829.6182 8603.9609 C
-7829.2905 8604.4414 -7828.8906 8602.998 -7828.5034 8603.9033 c
-7828.8906 8602.998 -7829.2905 8604.4414 -7829.6182 8603.9609 C
-7829.8394 8603.7646 -7830.0801 8603.4482 -7830.3394 8603.1602 C
-7830.7998 8603.332 -7831.394 8603.1602 -7831.8706 8602.6934 C
-7831.2783 8602.2871 -7830.7769 8602.6797 -7830.3394 8603.1602 C
-7830.1206 8603.0801 -7829.9312 8602.9219 -7829.7998 8602.6816 C
-7829.6914 8602.8418 -7829.4722 8603.1602 Y
-7829.1479 8603.0234 -7828.8257 8602.7969 -7828.5098 8602.6162 C
-7829.4585 8602.5332 -7830.4194 8602.4502 -7831.3975 8602.3691 c
-7837.7026 8601.7568 -7843.5166 8601.8652 -7850.0586 8601.4141 c
-7853.6006 8601.1367 -7857.0054 8600.7256 -7860.3457 8600.1631 c
-7867.0015 8599.0439 -7873.0762 8600.3301 -7879.8042 8597.9082 c
-7882.3838 8597.0586 -7887.1758 8597.5186 -7889.665 8597.6182 C
-7893 8599.2119 -7891.2729 8603.332 -7891.1143 8603.5645 C
-7889.063 8607.0762 -7887.4609 8605.126 -7883.2842 8607.1895 C
-7886.1289 8606.0176 -7881.1846 8604.9297 -7878.498 8607.335 c
-7874.6118 8611 -7869.0679 8608.0684 -7864.271 8609.0059 c
-7863.0718 8609.2422 -7861.7998 8609.0762 -7860.3647 8609.1484 C
-7852.9326 8610.3945 -7846.0288 8608.8438 -7838.2158 8609.127 C
-7836.146 8609.1172 -7834.3257 8608.2266 -7832.583 8607.7393 C
-7831.3105 8607.5742 -7829.9473 8608.0449 -7828.9136 8608.0439 c
-7827.2866 8608.0361 -7825.8838 8607.6992 -7824.541 8607.2773 C
-7826.0425 8607.4531 -7827.1362 8607.7109 -7828.8081 8607.8555 c
-7829.9233 8607.9141 -7828.0327 8606.624 -7827.2944 8606.3535 C
-7826.978 8606.1387 -7826.4814 8607.2041 -7826.167 8606.9883 C
-7825.478 8606.9863 -7824.8472 8606.5566 -7824.1089 8606.2852 C
-7823.7944 8606.0703 -7823.8311 8607.0313 -7823.6738 8606.9248 C
-7822.667 8606.707 -7821.8921 8605.4746 -7821.2495 8605.7383 C
-7820.7593 8605.8818 -7820.3198 8606.0293 -7819.8906 8606.1768 C
-7819.6182 8606.2295 -7819.3486 8606.2734 -7819.064 8606.2354 C
-7818.8862 8606.1543 -7818.7026 8606.0742 -7818.5166 8605.9941 C
-7818.6616 8605.7002 -7818.7144 8605.3408 -7818.7646 8604.9785 C
-7818.499 8605.0322 -7818.125 8605.2441 -7817.8569 8605.2969 c
-7818.125 8605.2441 -7818.499 8605.0322 -7818.7646 8604.9785 C
-7818.7144 8605.3408 -7818.6616 8605.7002 -7818.5166 8605.9941 C
-7817.1929 8605.4297 -7815.6641 8604.9238 -7814.2441 8604.5098 C
-7814.251 8604.4824 -7814.2578 8604.4531 -7814.2646 8604.4238 C
-7815.0938 8604.5215 -7815.9058 8604.4336 -7816.7646 8603.8496 C
-7816.3921 8604.0615 -7816.439 8604.3281 -7816.8647 8604.3848 C
-7816.9722 8604.2256 -7817.083 8604.0645 -7817.1914 8603.9063 C
-7816.4502 8603.6348 -7815.7119 8603.3633 -7815.0112 8604.0566 C
-7814.6943 8603.8408 -7814.5366 8603.7324 V
-7814.3022 8603.8652 -7814.314 8604.167 -7814.2646 8604.4238 C
-7814.1006 8604.4063 -7813.939 8604.3789 -7813.7729 8604.3477 C
-7814.1206 8603.8711 -7815.2104 8603.2559 Y
f/BBAccumRotation (0.598766) XT
-7823.7471 8603.2305 m
-7823.6318 8603.2002 -7823.4937 8603.1777 -7823.3457 8603.1543 C
-7823.8838 8603.1113 -7824.4214 8603.0703 -7824.9585 8603.0234 C
-7824.6753 8603.4902 -7824.2129 8603.3613 -7823.7471 8603.2305 c
f/BBAccumRotation (0.598766) XT
UUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pattern)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7893 8611 m
-7873.793 8611 L
-7873.793 8591.7949 L
-7893 8591.7949 L
-7893 8611 L
n1 Ap
0 O
0.64 1 0 0 k
-7873.793 8601.3965 m
-7873.793 8606.7012 -7878.0938 8611 -7883.3975 8611 c
-7888.6982 8611 -7893 8606.7012 -7893 8601.3965 c
-7893 8596.0918 -7888.6982 8591.7949 -7883.3975 8591.7949 c
-7878.0938 8591.7949 -7873.793 8596.0918 -7873.793 8601.3965 c
f/ShapeBlendPathID (B) XT
/ShapeBlendPathType (K) XT
0 Ap
100 Ar
0.543 0.8485 0 0 k
-7875.4727 8600.9043 m
-7875.4727 8605.5859 -7879.2695 8609.3809 -7883.9482 8609.3809 c
-7888.6289 8609.3809 -7892.4258 8605.5859 -7892.4258 8600.9043 c
-7892.4258 8596.2207 -7888.6289 8592.4258 -7883.9482 8592.4258 c
-7879.2695 8592.4258 -7875.4727 8596.2207 -7875.4727 8600.9043 c
f100 Ar
0.4736 0.7399 0 0 k
-7877.1504 8600.4082 m
-7877.1504 8604.4668 -7880.4414 8607.7578 -7884.5 8607.7578 c
-7888.5586 8607.7578 -7891.8506 8604.4668 -7891.8506 8600.4082 c
-7891.8506 8596.3477 -7888.5586 8593.0605 -7884.5 8593.0605 c
-7880.4414 8593.0605 -7877.1504 8596.3477 -7877.1504 8600.4082 c
f100 Ar
0.4288 0.6699 0 0 k
-7878.832 8599.9141 m
-7878.832 8603.3496 -7881.6191 8606.1348 -7885.0537 8606.1348 c
-7888.4922 8606.1348 -7891.2783 8603.3496 -7891.2783 8599.9141 c
-7891.2783 8596.4766 -7888.4922 8593.6914 -7885.0537 8593.6914 c
-7881.6191 8593.6914 -7878.832 8596.4766 -7878.832 8599.9141 c
f100 Ar
0.3584 0.5599 0 0 k
-7880.5127 8599.418 m
-7880.5127 8602.2324 -7882.793 8604.5156 -7885.6074 8604.5156 c
-7888.4209 8604.5156 -7890.7031 8602.2324 -7890.7031 8599.418 c
-7890.7031 8596.6055 -7888.4209 8594.3242 -7885.6074 8594.3242 c
-7882.793 8594.3242 -7880.5127 8596.6055 -7880.5127 8599.418 c
f100 Ar
0.2932 0.4581 0 0 k
-7882.1914 8598.9258 m
-7882.1914 8601.1172 -7883.9688 8602.8945 -7886.1602 8602.8945 c
-7888.3535 8602.8945 -7890.1289 8601.1172 -7890.1289 8598.9258 c
-7890.1289 8596.7324 -7888.3535 8594.9551 -7886.1602 8594.9551 c
-7883.9688 8594.9551 -7882.1914 8596.7324 -7882.1914 8598.9258 c
f1 Ap
100 Ar
0.2433 0.3801 0 0 k
-7883.8711 8598.4297 m
-7883.8711 8600 -7885.1426 8601.2715 -7886.7158 8601.2715 c
-7888.2832 8601.2715 -7889.5566 8600 -7889.5566 8598.4297 c
-7889.5566 8596.8613 -7888.2832 8595.5879 -7886.7158 8595.5879 c
-7885.1426 8595.5879 -7883.8711 8596.8613 -7883.8711 8598.4297 c
f/ShapeBlendPathID (A) XT
/ShapeBlendPathType (K) XT
0 Ap
100 Ar
0.64 1 0 0.54 k
-7874.2783 8598.3984 m
-7874.2471 8598.7275 -7874.2266 8599.0596 -7874.2266 8599.3965 c
-7874.2266 8605.5117 -7879.1846 8610.4688 -7885.3008 8610.4688 c
-7885.8311 8610.4688 -7886.3462 8610.4189 -7886.856 8610.3467 C
-7885.7822 8610.7627 -7884.6182 8611 -7883.3975 8611 c
-7878.0967 8611 -7873.793 8606.7012 -7873.793 8601.3965 c
-7873.793 8600.3486 -7873.9658 8599.3428 -7874.2783 8598.3984 C
fU%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 6 pt Flat / Adobe Calligraphic Brush T) -
(ool/ 10 pt Oval/ Adobe Calligraphic Brush Tool/ 12 pt Oval / Adobe Cal) -
(ligraphic Brush Tool/ 20 pt Oval/ Adobe Calligraphic Brush Tool/ 25 pt) -
( Round / Adobe Calligraphic Brush Tool/ 50 pt Flat/ Adobe Scatter Brus) -
(h Tool/ Red Push Pin/ Adobe Scatter Brush Tool/ Grass Blade/ Adobe Sca) -
(tter Brush Tool/ Handprints/ Adobe Scatter Brush Tool/ Grape Leaf/ Ado) -
(be Scatter Brush Tool/ North Star/ Adobe Scatter Brush Tool/ Subatomic) -
( Particles/ Adobe ArtOnPath Brush Tool/ 3D Arrow/ Adobe ArtOnPath Brus) -
(h Tool/ Charcoal/ Adobe ArtOnPath Brush Tool/ Fude/ Adobe ArtOnPath Br) -
(ush Tool/ Fire Ash/ Adobe ArtOnPath Brush Tool/ Scroll Pen/ Adobe ArtO) -
(nPath Brush Tool/ Type/ Adobe PatternOnPath Brush Tool/ Frieze/ Adobe ) -
(PatternOnPath Brush Tool/ Rolling Wave/ Adobe PatternOnPath Brush Tool) -
(/ Fleur-de-lis/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Grape Leaf)
(1 /Unnamed 7/ 5 0.160784 0.607843 0.184314 / 0 0.3 0.5 1 0.05 0.5 1 -0) -
(.5 0.5 1 -180 180 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Grass Blade)
(1 /Unnamed/ 5 0.12549 0.588235 0.188235 / 0 0.44 1 1 0.05 0.1 1 -0.61 ) -
(0.91 1 -7 7 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Handprints)
(1 /Unnamed 1/ 0 1 / 3 0.4 0.4 0 0.36 0.36 0 0 0 0 -60 -120 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(North Star)
(1 /New Pattern 11/ 5 0 0 0 / 1 0.05 0.25 1 0.4 0.4 0 -0.25 0.25 1 0 0 ) -
(0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Red Push Pin)
(1 /New Pattern 1/ 5 0.85098 0 0 / 0 0.502235 0.502235 0 0.68324 1 1 -0) -
(.614525 0.391061 1 0 0 0 0 21183) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Subatomic Particles)
(1 /Unnamed Brush Pattern/ 5 0.470588 0.133333 0.54902 / 1 0.803911 1.2) -
( 1 0.5 1.5 1 -2 2 1 0 0 0 0 13403) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(10 pt Oval)
(1 1 19 15 15 130 130 2 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(12 pt Oval )
(1 7 17 45 45 0 0 2 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(20 pt Oval)
(1 20 20 20 100 40 80 0 2 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(25 pt Round )
(1 10 40 100 100 0 0 2 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(50 pt Flat)
(1 40 60 0 0 44 44 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(6 pt Flat )
(1 4 8 10 10 90 90 2 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(3D Arrow)
(1 / Unnamed 10/ / / / / 5 1 1 0 /  1 3 0.5 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Charcoal)
(1 / Unnamed 3/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Fire Ash)
(1 / Unnamed 6/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Fude)
(1 / Unnamed 9/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Scroll Pen)
(1 / New Pattern 27/ / / / / 5 0 0 0 /  3 1 0.5 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Type)
(1 / Unnamed 5/ / / / / 5 0.0392157 0.313726 0.631373 /  1 3 0.5 0 1 0 ) -
(0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Fleur-de-lis)
(1 / Unnamed 19/ Unnamed 21/ Unnamed 20/ Unnamed 23/ Unnamed 22/ 5 0.93) -
(7255 0.0745098 0.521569 /  1 0 0.5 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Frieze)
(1 / Unnamed 28/ Unnamed 30/ Unnamed 29/ Unnamed 4/ Unnamed 8/ 5 0.1176) -
(47 0.576471 0.756863 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Rolling Wave)
(1 / Unnamed 15/ Unnamed 24/ Unnamed 16/ / / 5 0 1 0 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration]) Pc
0 0 0 0 k
(White) Pc
0 0 0 1 k
(Black) Pc
0 0 0 0.8 k
(80% Black) Pc
0 0 0 0.6 k
(60% Black) Pc
0 0 0 0.4 k
(40% Black) Pc
0 0 0 0.2 k
(20% Black) Pc
0 1 1 0 k
(Red M=100 Y=100) Pc
0 0.75 0.75 0 k
(75% Red M=75 Y=75) Pc
0 0.5 0.5 0 k
(50% Red M=50 Y=50) Pc
0 0.25 0.25 0 k
(25% Red M=25 Y=25) Pc
0.8 0 1 0 k
(Green C=80 Y=100) Pc
0.6 0 0.75 0 k
(75% Green C=60 Y=75) Pc
0.4 0 0.5 0 k
(50% Green C=40 Y=50) Pc
0.2 0 0.25 0 k
(25% Green C=20 Y=25) Pc
1 0.5 0 0 k
(Blue C=100 M=50) Pc
0.75 0.375 0 0 k
(75% Blue C=75 M=37.5) Pc
0.5 0.25 0 0 k
(50% Blue C=50 M=25) Pc
0.25 0.125 0 0 k
(25% Blue C=25 M=12.5) Pc
0 0.5 1 0 k
(Orange M=50 Y=100) Pc
0 0.375 0.75 0 k
(75% Orange M=37.5 Y=75) Pc
0 0.25 0.5 0 k
(50% Orange M=25 Y=50) Pc
0 0.125 0.25 0 k
(25% Orange M=12.5 Y=25) Pc
0.5 0.9 0 0 k
(Violet C=50 M=90) Pc
0.375 0.675 0 0 k
(75% Violet C=37.5 M=67.5) Pc
0.25 0.45 0 0 k
(50% Violet C=25 M=45 ) Pc
0.125 0.225 0 0 k
(25% Violet C=12.5 M=22.5) Pc
0.8 0 0 0 k
(Azure C=80) Pc
0.6 0 0 0 k
(75% Azure C=60) Pc
0.4 0 0 0 k
(50% Azure C=40) Pc
0.2 0 0 0 k
(25% Azure C=20) Pc
0 0 1 0 k
(Yellow) Pc
0 0 0.75 0 k
(75% Yellow) Pc
0 0 0.5 0 k
(50% Yellow) Pc
0 0 0.25 0 k
(25% Yellow) Pc
Bb
2 (White, Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(White, Black) Pc
Bb
0 0 0 0 Bh
2 (Black, White Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Black, White Radial) Pc
Bb
2 (Steel Bar II) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Steel Bar II) Pc
Bb
2 (Rainbow) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Rainbow) Pc
Bb
0 0 0 0 Bh
2 (Emerald Eye) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Emerald Eye) Pc
Bb
2 (Sunset) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Sunset) Pc
(Red Tablecloth) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Red Tablecloth) Pc
(Pyramids) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Pyramids) Pc
(Azure Rings) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Azure Rings) Pc
(Red Stripe) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Red Stripe) Pc
(Clown Attack) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Clown Attack) Pc
(Camouflage) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Camouflage) Pc
PB
%AI5_EndPalette
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI5_End_NonPrinting--
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
0 J 0 j 1 w 4 M []0 d0 XR
-7894 351.8779 m
8489 351.8779 L
(N) *
-7894 404.9102 m
8489 404.9102 L
(N) *
-7894 351.8779 m
8489 351.8779 L
(N) *
u100 Ar
0 O
0 0 0 1 k
207.7139 664.7969 m
207.5625 664.8228 207.4111 664.8486 207.2617 664.8657 C
206.7271 664.6216 207.0601 664.5879 207.7139 664.7969 C
f100 Ar
155.6733 687.1973 m
160.626 677.1211 L
168.8809 685.3755 L
161.8218 695.6226 L
153.2803 687.0811 152.9409 686.7417 V
151.1787 693.9619 146.5649 695.7114 Y
135.2935 686.1724 L
136.3179 685.0342 L
137.3584 686.0742 137.6841 686.4004 v
138.2881 687.0034 142.1245 688.4038 142.1245 684.3506 c
142.1245 680.0278 142.1245 667.999 142.1245 667.3862 C
141.8735 664.9634 136.6597 664.1982 Y
142.5283 663.2412 150.208 655.562 v
150.3857 655.3843 164.5542 666.9307 Y
163.7573 667.7275 L
160.9263 665.4502 160.5693 665.4502 V
159.7095 665.0181 158.1592 664.1846 156.7041 663.8545 c
154.8911 663.4419 153.2256 663.687 153.2256 668.5273 c
153.2256 674.418 153.2256 684.749 Y
155.6733 687.1973 L
f*u
100 Ar
1 D
199.1201 667.1938 m
199.1201 668.9727 199.1201 681.5293 199.1201 683.832 c
199.1201 687.1802 203.6196 686.8662 Y
203.5146 687.8081 L
195.0615 689.3584 189.7021 695.7114 Y
183.8799 691.3286 175.6802 688.1221 V
174.8862 687.8687 171.3896 685.6104 171.3896 681.9478 c
171.3896 680.0649 171.3896 665.519 Y
171.4941 660.7056 173.5874 659.4502 V
174.1104 658.9268 177.4756 655.562 Y
188.4463 663.8447 L
189.2183 658.8091 194.9341 655.562 V
198.7783 659.4058 204.98 664.1587 Y
204.2476 664.8916 L
199.1201 660.2871 199.1201 667.1938 v
f100 Ar
0 D
188.5684 665.6123 m
185.0225 663.1948 L
181.7993 661.1772 181.7993 664.7261 v
181.7993 665.8682 181.9604 688.9829 181.9604 689.3857 C
182.9492 687.7612 188.5684 684.9531 Y
188.5684 665.6123 L
f*U
*u
100 Ar
1 D
239.1855 687.1992 m
239.1855 692.3726 233.6338 695.7114 Y
221.8989 688.335 L
222.7505 695.7114 215.9683 695.7114 V
207.4194 697.4829 215.5703 701.7383 220.0059 700.3218 C
220.0059 700.6851 220.0059 701.7095 Y
208.9336 702.3091 206.8833 695.7114 v
204.8325 689.1138 211.3623 685.9375 Y
211.3623 672.772 211.3623 668.9668 v
211.3623 666.4766 208.9521 665.1924 207.7139 664.7969 C
213.8076 663.7412 221.6465 655.562 Y
225.6987 660.6973 231.3623 661.459 V
239.4268 662.2202 239.1855 670.7959 Y
239.1855 686.2212 239.1855 687.1992 v
f100 Ar
0 D
228.4883 663.438 m
225.3286 666.5977 221.5947 668.4165 Y
221.5947 686.8955 L
225.52 689.1934 L
228.9668 690.3418 228.9668 684.5015 v
228.9668 678.6616 228.4883 664.2041 228.4883 663.438 C
f*U
uu*u
100 Ar
1 D
273.7441 667.4468 m
269.8525 662.6167 262.2549 665.2617 V
259.2773 666.4961 257.1807 672.4512 Y
273.9561 682.4595 L
266.2021 695.7114 L
253.374 690.2129 L
246.7754 687.5601 246.3262 678.3716 V
245.1494 666.6675 250.4141 661.5962 Y
253.0264 657.5908 260 655.562 V
260.7334 655.562 274.8018 666.3896 Y
273.7441 667.4468 L
f100 Ar
0 D
256.7939 690.5566 m
264.0723 678.7407 L
256.623 674.2021 L
256.7939 690.5566 L
f*U
UU*u
100 Ar
1 D
121.3022 689.8062 m
130.2852 694.1567 128.144 700.1416 V
126.333 702.8984 125.1958 702.9243 122.7578 703.7803 C
120.8501 704.8975 122.7896 706.04 123.5039 706.3037 c
124.9365 706.834 127.9985 707.4199 Y
127.9985 709.167 L
126.2617 709.2554 118.5361 706.1104 v
115.6787 704.9463 114.1982 703.4287 113.4668 701.978 c
111.438 698.2104 114.7778 695.814 115.8638 694.2134 C
117.1851 691.1572 115.0991 689.8159 113.8584 688.9619 c
112.5845 688.0845 111.0571 687.0332 109.8145 686.1777 C
109.0322 687.3857 108.4316 688.1138 Y
104.2681 695.7114 L
101.0444 700.7949 104.5518 703.2554 v
104.918 703.5122 105.2739 703.7627 105.623 704.0073 C
108.0107 701.8184 109.2197 699.4141 Y
110.6758 700.2871 L
109.4858 702.6328 107.0728 705.0239 V
109.3218 706.6016 110.8921 707.7031 Y
110.4189 708.5552 L
106.3662 705.6924 L
103.8672 707.9419 100.27 710.04 95.5361 710.04 c
85.3296 710.04 76.7578 698.6855 Y
68.0449 685.085 74.2832 671.7554 v
80.522 658.4258 95.2456 656.4707 Y
111.3125 654.6948 120.8657 659.5278 v
130.4185 664.3608 132.2197 674.9585 Y
132.8516 682.6235 129.0176 686.458 v
125.1831 690.292 121.3022 689.8062 Y
f100 Ar
0 D
117.6631 667.3882 m
117.6631 664.1084 115.043 661.1289 Y
106.3184 654.1602 94.8086 658.9453 V
87.3916 663.73 87.2393 673.793 Y
87.9868 697.2813 87.9668 696.6479 v
87.9463 696.0151 86.7168 706.3076 95.6821 707.4199 c
99.5894 707.9048 102.6611 706.4458 104.8853 704.6465 C
98.4951 700.1328 L
88.937 693.5083 94.8989 682.2466 V
95.2759 681.6602 96.9668 679.0337 98.5918 676.5078 c
100.2822 673.8809 104.1289 669.894 101.916 666.8721 C
101.436 665.9072 100.376 665.4019 98.2114 666.2534 C
92.4385 669.8496 92.3438 676.5684 Y
91.2085 676.5684 L
90.6406 674.2026 93.7632 668.8086 v
96.8862 663.4141 101.8071 664.1714 Y
108.8105 664.3608 112.4063 671.6475 v
114.6987 676.292 112.4546 681.7026 110.5254 685.0176 C
111.2534 685.4795 112.1411 686.0239 113.1504 686.6035 c
115.9834 688.2314 117.6631 684.8359 117.6631 680.3945 c
117.6631 676.0229 117.6631 669.5015 117.6631 667.3882 c
f*U
*u
100 Ar
1 D
344.8115 701.7295 m
333.8193 710.7944 319.0225 708.499 v
304.2256 706.2031 300.165 694.96 Y
296.8721 684.7295 302.7441 680.6147 v
308.6172 676.5005 314.6709 679.3257 Y
314.1689 680.7051 L
308.002 678.5093 304.3555 681.4209 V
298.7666 687.0103 303.0664 691.0918 Y
306.584 695.7114 316.1221 695.7114 v
318.6367 695.7114 320.8682 695.709 322.9619 695.6255 C
321.2383 693.5303 318.8018 690.3662 317.5771 687.8491 C
317.2051 686.9941 313.5225 680.5068 322.7031 677.3804 C
325.2061 676.0708 327.665 675.7988 329.791 673.6729 c
331.1348 672.3286 329.5615 670.1592 328.2207 668.7437 C
328.1621 668.7715 328.1064 668.7998 328.0469 668.8286 c
325.791 669.9219 313.8838 675.0542 306.0264 668.1484 C
302.0967 664.269 301.751 659.0439 301.5361 659.2593 c
302.1563 658.6392 302.583 658.2119 Y
302.1494 667.5156 313.543 661.4351 V
334.1357 646.1909 348.0352 663.3691 Y
353 668.0195 354.1592 680.7764 v
355.3193 695.0225 344.8115 701.7295 Y
f100 Ar
0 D
351.2285 670.9399 m
350.5684 669.2271 349.5625 667.4756 348.0352 665.9482 c
342.8135 660.7261 333.3682 665.9482 Y
331.875 666.8848 329.4932 668.1069 V
331.1445 669.6489 333.6367 672.4307 336.1162 676.9443 c
340.3691 684.6865 330.4453 688.5034 Y
322.376 690.3003 322.376 692.9746 v
322.376 693.9648 322.8398 694.8633 323.4238 695.604 C
329.0596 695.3433 333.7334 694.4258 340.2178 691.1719 c
342.0859 690.2344 343.7021 689.1655 345.0898 688.0586 C
351.1982 684.5835 352.8223 675.0825 351.2285 670.9399 c
f*U
100 Ar
372.752 665.7788 m
372.752 670.5361 372.752 680.8291 372.752 684.4326 c
372.752 688.0361 377.1328 687.4375 Y
368.8701 692.5708 367.4932 695.7114 V
367.4932 693.8223 356.9775 686.4355 Y
361.8594 688.2368 361.8594 685.6846 v
361.8594 683.1323 361.8594 665.6528 361.8594 662.5234 c
361.8594 659.394 367.4932 654.7617 Y
378.7607 663.9009 L
377.9473 664.7148 L
372.752 661.021 372.752 665.7788 v
f100 Ar
367.2734 696.6602 m
372.1406 699.9819 372.6826 701.9907 V
375.0771 708.8672 369.9004 709.0986 Y
362.252 709.5625 362.252 704.4629 v
362.252 699.3638 367.2734 696.6602 Y
f*u
100 Ar
1 D
399.7168 695.7114 m
395.2734 691.2681 388.6973 688.1016 Y
382.0703 685.9263 382.0703 681.4741 v
382.0703 679.2402 382.0703 664.2173 382.0703 661.4321 c
382.0703 658.647 388.5674 654.5054 388.8184 654.6841 C
391.6963 658.1509 395.4463 660.4697 399.5566 663.8276 C
399.5566 662.0303 399.7051 657.8101 401.9521 655.562 c
402.2705 655.2432 406.3438 650.6519 405.3057 645.9409 C
405.082 644.3638 404.4502 643.1719 403.5918 642.2427 C
400.9658 639.6167 394.2725 639.6992 392.876 640.1519 c
391.8428 640.4868 391.0898 640.9033 390.5352 641.3335 C
393.083 642.0049 394.9297 644.0098 394.9297 646.3799 c
394.9297 649.3003 392.125 651.667 388.665 651.667 c
385.2051 651.667 382.4004 649.3003 382.4004 646.3799 C
383.1719 636.1709 398.6357 637.3975 404.0664 640.2319 C
405.8564 641.022 407.9766 642.1787 410.417 643.8647 c
419.2002 649.9336 410.417 660.6328 Y
410.417 680.2979 410.417 683.3105 v
410.417 686.3232 414.5693 686.0254 Y
414.5693 686.0254 414.5693 687.4629 V
410.5771 687.4629 399.7168 693.5801 399.7168 695.7114 C
f100 Ar
0 D
399.3438 664.7822 m
395.8145 662.4116 395.5342 662.4116 V
392.7354 661.4268 392.7402 664.105 Y
392.7402 686.3691 392.7402 687.6387 V
396.042 684.3374 399.3438 683.4907 Y
399.3438 664.7822 L
f*U
*u
100 Ar
1 D
471.1904 664.6274 m
468.2129 665.8623 466.1162 671.8169 Y
482.8906 681.8262 L
475.1377 695.0776 L
462.3096 689.5786 L
455.7109 686.9258 455.2607 677.7373 V
454.084 666.0337 459.3496 660.9619 Y
461.9619 656.9561 468.9346 654.9277 V
469.668 654.9277 483.7363 665.7559 Y
482.6797 666.813 L
478.7881 661.9824 471.1904 664.6274 V
f100 Ar
0 D
465.7295 689.9233 m
473.0078 678.1069 L
465.5586 673.5674 L
465.7295 689.9233 L
f*U
100 Ar
509.3916 664.9146 m
508.5322 664.4819 506.9814 663.6484 505.5264 663.3184 c
503.7139 662.9058 502.0479 663.1514 502.0479 667.9917 c
502.0479 673.8818 502.0479 684.2134 Y
504.4961 686.6611 L
509.4492 676.585 L
517.7031 684.8394 L
510.6436 695.0864 L
502.1035 686.5449 501.7637 686.2056 V
500.001 693.4263 495.3877 695.1753 Y
484.1162 685.6367 L
485.1406 684.498 L
486.1807 685.5381 486.5068 685.8643 v
487.1104 686.4673 490.9473 687.8677 490.9473 683.8149 c
490.9473 679.4917 490.9473 667.4629 490.9473 666.8501 C
490.6963 664.4272 485.4824 663.6621 Y
491.3506 662.7051 499.0313 655.0259 v
499.209 654.8486 513.377 666.3945 Y
512.5791 667.1914 L
509.749 664.9146 509.3916 664.9146 V
f*u
100 Ar
1 D
437.2773 695.5679 m
432.834 691.1245 426.2588 687.958 Y
419.6309 685.7827 419.6309 681.3306 v
419.6309 679.0977 419.6309 664.0747 419.6309 661.2886 c
419.6309 658.5044 426.1279 654.3628 426.3779 654.5415 C
429.2578 658.0078 433.0068 660.3262 437.1182 663.6841 C
437.1182 661.8877 437.2656 657.6675 439.5137 655.4185 c
439.8311 655.1006 443.9053 650.5093 442.8672 645.7983 C
442.6426 644.2207 442.0107 643.0288 441.1533 642.1001 C
438.5273 639.4741 431.833 639.5566 430.4375 640.0093 c
429.4033 640.3433 428.6514 640.7603 428.0967 641.1909 C
430.6426 641.8618 432.4912 643.8672 432.4912 646.2373 c
432.4912 649.1577 429.6865 651.5234 426.2266 651.5234 c
422.7656 651.5234 419.96 649.1577 419.96 646.2373 C
420.7324 636.0273 436.1963 637.2544 441.626 640.0889 C
443.416 640.8789 445.5371 642.0352 447.9775 643.7222 c
456.7607 649.7905 447.9775 660.4902 Y
447.9775 680.1553 447.9775 683.167 v
447.9775 686.1807 452.1299 685.8818 Y
452.1299 685.8818 452.1299 687.3193 V
448.1367 687.3193 437.2773 693.437 437.2773 695.5679 C
f100 Ar
0 D
436.9043 664.6396 m
433.376 662.269 433.0947 662.269 V
430.2959 661.2842 430.3018 663.9619 Y
430.3018 686.2266 430.3018 687.4951 V
433.6035 684.1948 436.9043 683.3477 Y
436.9043 664.6396 L
f*U
ULB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
