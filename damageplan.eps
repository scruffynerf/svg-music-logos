%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 193 193 
%%LanguageLevel: 1
%%Creator: CorelDRAW 12
%%Title: 132687.eps
%%CreationDate: Tue Aug 23 09:20:08 2005
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Build: CorelDRAW Version 12.154
%Color profile: Disabled
/CorelIsEPS true def
%%BeginResource: procset wCorel12Dict 12.0 0
/wCorel12Dict 300 dict def wCorel12Dict begin
% Copyright (c)1992-2003 Corel Corporation
% All rights reserved.     v12 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge
{pop}{exch pop}ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch
rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll
eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1
exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}
repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1
roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index
.114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb
/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray
ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor
get def/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict
/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor
sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop
/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where{pop
/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld
}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{
pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse
/setoverprint where{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where
{pop}{/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1
roll mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/Corelsetcustomcolor_exists false def/setcustomcolor where{pop
/Corelsetcustomcolor_exists true def}if CorelIsSeps true eq CorelIsInRIPSeps
false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{findcmykcustomcolor exch setcustomcolor}ifelse
SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage
where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi
true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop
daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs
{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors
dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255
div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul
cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{
4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div
$dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3
add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat
0 $dat length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse
/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$fil 4 eq
{CorelShfillDoFill}{$t $c $m $y $k $n $o @scc_5{wfill}{@np}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{
matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M $Y $K
$N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}{@np}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{
5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{
/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{
@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{
@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq{/$ink_5 -1 def}
{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5(Magenta)eq{/$ink_5 1
def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{CurrentInkName_5(Black)eq
{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}ifelse}ifelse}bd/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
% Copyright (c)1992-2003 Corel Corporation
% All rights reserved.     v12 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg false def}
ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel12Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
0.00000 0.00000 192.75591 192.75591 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
0.00000 192.75591 m
192.75591 192.75591 L
192.75591 0.00000 L
0.00000 0.00000 L
0.00000 192.75591 L
@c
F

@rax %Note: Object
8.50394 8.50394 184.25197 184.25197 @E
 0 O 0 @g
1.00 1.00 1.00 1.00 k
/$fm 0 def
8.50394 96.56532 m
96.56532 8.50394 L
184.25197 96.19058 L
96.19058 184.25197 L
8.50394 96.56532 L
@c
F

@rax %Note: Object
13.37556 13.37556 179.38035 179.38035 @E
 0 O 0 @g
0.00 0.00 0.00 0.30 k
/$fm 0 def
13.37556 96.55483 m
96.55483 13.37556 L
179.38035 96.20107 L
96.20107 179.38035 L
13.37556 96.55483 L
@c
F

@rax %Note: Object
47.15121 50.62876 139.72564 150.76687 @E
 0 O 0 @g
1.00 1.00 1.00 1.00 k
/$fm 0 def
71.48608 150.76687 m
71.47729 146.56620 73.58428 144.55162 75.98324 141.35102 C
87.95792 151.98945 105.99761 150.91257 117.86343 140.69509 C
120.34573 143.17824 122.35975 146.41058 122.40737 150.39213 C
127.64920 140.66589 124.72894 137.58378 122.78211 133.76183 C
122.71209 127.53184 123.41424 117.58025 122.78211 115.91376 C
119.66769 113.90230 119.35871 112.72450 117.78491 112.83449 c
115.27370 113.00995 116.72929 108.70129 118.35808 110.07524 c
118.84904 110.48939 119.52510 110.99622 119.83096 109.87058 C
122.41701 109.50180 119.27820 107.46113 118.56614 106.77883 C
118.58031 106.52088 118.38671 105.83376 118.31641 105.11348 c
118.18828 103.80189 118.39861 103.78403 117.12331 103.32680 c
112.81096 101.78022 116.34094 97.04381 113.64718 94.55216 C
113.64718 92.16170 113.50091 89.76983 113.42041 87.38050 c
113.34472 85.13263 113.40539 83.52142 111.91465 81.63184 c
110.95172 80.41096 109.75039 79.75843 108.44731 79.09313 C
112.83987 75.84321 116.35654 74.11011 119.19317 72.18539 c
126.32031 67.34948 133.62576 69.59452 137.17871 66.50702 C
139.43452 64.87682 139.99436 62.81717 139.61764 60.47206 c
138.80665 55.42611 135.00283 57.63231 134.02517 54.35150 c
133.65553 53.11191 131.35124 51.22970 130.05241 50.81244 c
125.18674 49.24942 123.79323 57.91635 120.11187 60.12057 C
101.13959 72.62844 L
99.68825 73.58967 97.74879 73.92813 96.27704 72.79710 C
92.06079 69.65830 88.02935 66.35112 83.81339 63.21231 C
80.62101 60.90350 78.07124 54.57940 76.24431 52.19036 C
73.91254 50.03773 66.21477 49.78290 66.76809 54.88044 C
65.67109 56.07780 62.78287 55.30450 61.54724 57.05405 c
60.05225 59.17011 60.37682 61.24791 61.17364 62.94529 c
63.78888 68.51650 70.77005 68.28406 75.84293 69.39609 C
87.08570 77.54712 L
84.18104 80.07676 81.61115 82.80737 79.77798 85.97934 C
75.60850 89.35228 71.23436 92.43978 67.06488 95.81272 C
64.12394 97.95487 62.05521 100.74217 56.16765 101.29805 C
52.92879 101.80658 50.86091 101.37855 49.28145 105.23282 C
45.61002 107.76586 47.37033 112.30299 49.42176 113.94624 C
49.88324 117.18028 50.47937 117.45950 52.99228 117.94280 c
58.01528 118.90942 60.04630 114.71471 62.67402 111.43729 c
66.97843 106.06847 73.67613 101.99140 79.07528 97.78450 C
77.45924 100.43405 78.65631 103.78290 75.14022 104.81131 C
68.65682 108.30189 69.03099 118.74614 69.90094 124.84403 c
70.23600 127.19282 70.96620 129.52431 71.00929 131.90655 c
71.06655 135.07739 68.86885 137.54183 68.67666 140.87565 c
68.44110 144.95528 70.28419 147.81203 71.48608 150.76687 C
@c
85.36195 94.72762 m
85.11789 94.66441 84.87326 94.37839 85.06488 94.18706 C
85.06460 94.18677 L
85.07254 94.17969 85.07254 94.16920 85.07962 94.16211 C
85.07962 94.16183 L
85.09068 94.15049 L
85.14454 94.04362 85.22872 93.93392 85.32850 93.83386 c
85.54649 93.61502 85.72989 93.48406 85.84724 93.21591 c
85.94249 92.99849 86.82661 92.47720 86.83880 93.07502 C
86.85638 93.15354 86.86290 93.25474 86.84334 93.27969 C
86.84391 93.27940 L
86.84391 93.28989 86.84532 93.30094 86.83852 93.30973 C
86.83909 93.30917 L
86.83909 93.32986 86.84589 93.37351 86.83342 93.38967 C
86.83398 93.38910 L
86.83398 93.53537 86.67751 93.77546 86.60948 93.92854 c
86.59389 93.96340 86.57915 93.99487 86.56498 94.02350 c
86.48362 94.18847 86.38526 94.32227 86.26876 94.42658 C
86.13666 94.65109 85.54280 94.87049 85.36195 94.72762 C
@c
89.21991 76.97225 m
85.39880 74.09991 81.57713 71.22728 77.75631 68.35550 c
76.45606 67.37811 76.18762 67.33162 74.58406 67.20321 c
72.64403 67.04787 70.26917 66.67965 68.31411 65.87405 c
66.99855 65.33178 64.19622 63.79852 64.96809 61.96110 c
65.43014 60.86154 67.06630 61.31962 68.00967 61.41430 c
71.05805 61.72072 72.56409 59.94567 73.84337 57.44948 C
75.62013 57.88517 76.41411 59.24721 77.08479 60.73512 c
78.17839 63.16072 78.28214 63.09921 80.84041 63.84189 C
82.33228 66.90784 85.45890 67.94476 88.05713 69.80287 c
90.21288 71.34463 92.49335 73.19650 94.57569 74.55345 C
92.66627 75.43786 91.75436 76.84186 89.21991 76.97225 C
@c
67.96942 56.58548 m
70.47439 56.58548 L
70.12885 53.82113 L
68.66050 53.73496 L
67.96942 56.58548 L
@c
134.43165 58.94192 m
136.47402 58.73754 L
136.26964 57.81855 L
134.43165 58.94192 L
@c
109.71213 73.89326 m
112.59099 72.07824 115.38170 70.61443 118.36630 68.37307 c
120.18246 67.00904 120.37181 67.02718 122.58340 66.76498 c
124.61216 66.52460 125.80639 65.91203 126.79483 65.36608 c
129.56372 63.83735 130.93002 65.01572 133.67395 64.81077 c
135.06321 64.70731 137.81735 63.83282 137.08091 61.86472 c
136.20898 59.53465 130.50709 61.65723 128.69376 60.32211 c
127.20699 59.22737 129.01238 55.41732 126.56948 55.50378 c
125.38885 55.54545 124.49565 57.20542 124.04693 59.27726 C
124.37631 60.33118 124.56425 61.40863 123.76602 62.65020 C
121.98557 64.19622 119.69008 65.74224 117.16072 67.28797 C
113.51140 68.72570 109.90318 70.22154 107.50507 73.37934 c
106.31480 74.94718 108.96520 74.39272 109.71213 73.89326 C
@c
52.11241 114.59707 m
52.94268 115.18356 54.03827 115.50387 55.03436 115.57446 c
58.59128 115.82674 60.47320 109.26794 63.04876 107.43165 c
67.35827 104.35890 72.39033 102.31483 74.15915 97.18980 C
72.11083 97.31792 72.29906 96.86069 70.97386 98.64425 c
69.67956 100.38643 69.45761 100.20444 67.28910 100.31272 C
65.24135 102.92910 63.84671 104.55959 60.16932 104.55959 C
59.53011 104.37902 59.74781 105.05452 59.79458 105.55880 C
59.91931 105.93354 60.52620 105.66595 60.65121 106.04069 C
58.75257 107.76529 55.37707 108.59017 56.04718 111.80438 C
56.19288 113.45471 54.32258 114.23169 52.11241 114.59707 C
@c
97.86699 113.70898 m
97.92822 113.89266 97.87663 114.09307 97.67424 114.16025 c
97.32983 114.27449 97.23940 113.86488 97.12715 113.63981 C
97.12743 113.63981 L
97.01036 113.40737 96.89357 113.16161 96.76998 112.92576 C
97.18441 112.71855 95.50772 111.63855 97.41827 111.63855 C
98.09631 111.63855 98.17087 113.36400 97.86699 113.70898 C
@c
90.37786 118.85329 m
90.18142 119.03528 89.71852 118.27389 89.62923 118.12847 C
89.62951 118.12819 L
89.50706 117.88526 89.40161 117.65140 89.27235 117.41443 C
89.27235 117.41414 L
89.22614 117.32173 89.18674 117.09269 89.18674 116.99546 C
89.23124 117.03969 L
88.35704 116.16775 90.49578 113.72910 89.96428 113.19789 C
89.71228 112.94589 89.66750 112.41298 89.40557 112.10712 C
88.21389 111.87439 88.32643 109.72091 87.80315 109.13386 c
86.72003 107.92006 84.92655 108.62306 83.98148 109.41534 c
81.77584 111.26523 78.77707 112.93143 78.77707 116.20318 C
78.84312 116.13685 L
78.84312 117.26759 79.09682 117.24746 79.59005 118.38444 C
80.91836 118.68633 80.13827 120.43077 79.25216 120.73550 C
78.07124 121.52778 78.51260 122.74101 78.51260 124.02992 c
78.51260 124.90866 77.16557 125.65219 76.76759 126.25852 C
76.73272 126.45213 76.63323 126.87137 76.53402 127.06498 C
76.53402 127.06498 L
76.38661 127.43320 76.18394 127.75011 75.99118 128.08233 C
75.79247 129.41972 75.85909 129.59802 76.61594 131.11965 c
77.25146 132.39780 75.37351 134.61165 74.98233 133.04523 C
75.02797 133.09087 L
74.87433 132.93751 74.76009 132.61550 74.65918 132.41820 C
74.65918 132.41820 L
74.65691 132.41395 L
74.65691 132.41395 L
73.80709 130.71373 72.57543 128.50866 73.06838 126.80107 c
73.55707 125.10794 74.92706 122.98564 74.92706 121.98104 c
74.92706 121.61339 76.51701 122.35578 77.38072 121.17061 C
77.81414 120.40866 78.81846 119.75471 78.46186 118.73169 C
77.95106 117.97654 77.50460 117.41556 77.50460 116.46737 C
77.60551 116.56828 L
77.14970 116.11304 77.59162 114.97096 77.64803 114.39751 C
77.63669 114.40885 L
77.46718 113.22397 77.70076 110.27537 75.61247 108.59669 c
74.70539 107.86791 77.06721 106.42195 77.52246 106.08151 C
77.81953 105.48794 78.90548 104.77531 79.68444 104.91137 c
79.91291 104.95106 80.55383 105.34706 80.79591 105.58885 C
81.60094 105.90860 82.33767 106.35420 83.09991 106.73887 C
83.09764 106.73887 L
83.33291 106.73887 83.58094 106.83043 83.81027 106.97953 c
84.41773 107.37468 84.62041 107.29134 85.38690 107.23323 c
85.90989 107.19326 86.16472 107.39424 85.96998 106.83751 c
85.81805 106.40324 85.65420 105.98542 85.35402 105.83631 c
85.33644 105.82753 84.56995 105.22120 84.55465 105.20079 C
83.71446 104.89238 82.10409 104.16302 81.45780 103.56009 c
81.07342 103.20151 81.39175 102.36416 81.97143 102.37691 C
82.75323 101.96135 83.98091 101.79978 84.44948 100.95250 C
84.47386 100.77222 84.69893 100.01424 84.80268 99.90709 C
84.80268 99.90709 L
84.70828 100.00120 L
84.70828 99.30331 84.39506 95.93972 86.13184 96.82044 C
87.17896 96.80230 87.18860 95.61175 88.53307 96.15515 C
89.20346 95.82860 89.73865 95.39773 90.59131 95.76794 C
91.12280 95.76794 L
91.02529 95.86545 L
91.24072 95.65313 92.48457 95.37137 92.84117 95.37137 C
92.74365 95.46888 L
93.16743 95.05134 95.63017 95.35521 95.63017 96.20589 c
95.63017 97.10419 95.49808 97.97017 95.49808 98.87783 C
95.40992 98.78967 L
95.63131 99.02580 95.49411 99.32372 95.72712 99.56665 C
96.16876 99.57855 97.03928 99.39118 97.19291 99.97398 C
97.67849 100.17298 97.67339 101.43978 97.83043 101.87858 C
98.41861 102.66605 99.32939 104.47285 98.86847 105.39496 C
98.86847 105.39241 L
98.86847 105.68381 97.83326 107.91666 97.64759 108.10545 C
97.74510 108.00794 L
97.74510 108.49408 98.00022 111.05150 97.04268 111.05150 c
96.33005 111.05150 96.40942 110.13279 96.60472 109.69285 C
96.60472 108.76025 96.24472 107.60797 96.66057 106.73235 C
96.63279 105.33827 96.53868 103.97792 96.53868 102.58838 C
96.63959 102.68929 L
96.31219 102.36246 96.47235 101.48882 96.47235 101.06844 C
96.48397 101.07978 L
96.47575 100.96951 96.40630 100.88391 96.40630 100.75748 C
95.05191 100.99389 92.94576 101.28161 91.59506 101.27027 C
90.91361 101.57981 90.92523 101.67761 91.07575 102.30775 c
91.15257 102.62806 91.20217 102.94866 91.20217 103.30583 C
91.11402 103.21767 L
91.35893 103.47874 91.26822 103.97027 91.26822 104.29710 C
91.18006 104.20923 L
91.38643 104.42891 91.33427 104.74809 91.33427 105.02419 C
91.32265 105.01257 L
91.53298 106.02765 92.45735 107.03055 92.52312 108.06520 C
92.52397 108.06605 L
92.52397 107.99546 L
93.88120 110.03159 93.83017 111.60765 93.80948 113.81754 C
94.43679 114.36435 93.97786 116.97335 93.97786 117.64913 C
94.38520 117.99978 94.05099 118.64580 94.53798 119.13250 c
94.73981 119.33461 94.96318 119.49194 95.16387 119.69263 C
95.02554 119.69263 L
95.02554 119.69348 L
95.43203 119.71587 95.47200 119.88170 95.93178 119.72324 C
97.48403 118.67839 96.93808 121.35118 96.68750 121.85150 C
96.68750 121.84894 L
96.68750 121.97424 96.47773 122.39915 96.30028 122.72400 C
96.63307 123.38957 96.78529 124.28561 96.75808 125.03679 C
96.90491 125.28425 97.14047 125.95578 97.15011 126.25852 C
97.15011 126.20863 L
97.58863 127.07773 97.92964 129.40781 99.22139 129.40781 C
99.85663 129.07077 104.83909 128.01090 105.83263 128.97354 C
105.83263 128.97354 L
105.73824 128.87915 L
106.92255 128.87915 108.08929 130.22050 109.14038 130.66753 C
109.89241 130.75852 111.68447 132.25833 111.75335 132.96189 C
111.75619 132.96302 L
111.75619 132.84822 L
112.20888 133.30091 114.00321 137.18948 112.22135 136.95279 C
111.75335 137.42107 111.49058 137.82813 111.12917 138.36076 C
110.43184 140.35578 109.37820 140.79430 107.41890 140.79203 C
107.41890 140.79231 L
107.58898 140.79231 107.33528 140.82265 107.14082 140.84220 C
107.00674 140.96381 105.68381 141.65121 105.56844 141.65121 C
105.56844 141.65150 L
105.57071 141.65150 L
105.32750 141.77310 105.15628 141.92957 104.88926 142.01858 C
104.88926 142.01858 L
103.95524 142.32699 102.87780 143.23748 101.86724 143.23748 C
101.86724 143.23748 L
101.86923 143.23748 101.69943 143.29304 101.54296 143.33556 C
101.42079 143.45717 100.53865 143.83247 100.34731 143.83247 C
100.34957 143.83247 L
99.88413 144.06718 99.18850 144.25002 98.85770 144.63128 C
98.58557 145.97490 89.68876 144.75770 88.38482 144.55928 c
87.56447 144.43483 84.69780 143.49657 83.97524 143.46680 c
82.47912 143.40557 81.18113 141.56050 80.80356 140.80734 C
80.80328 140.80762 L
80.42995 140.04935 78.79833 139.12526 78.28441 138.77773 C
77.69707 138.57364 75.85172 136.02444 75.85257 135.26532 C
75.85228 135.26532 L
75.85228 133.77997 77.27556 133.53080 78.27222 132.81846 C
78.89102 131.95531 75.41915 129.93987 77.84532 128.11776 c
79.78139 126.66387 79.76409 126.35717 79.48006 124.19263 c
79.31367 122.92554 81.73871 120.30350 83.03357 120.96369 C
84.02315 121.20208 85.79509 120.46167 86.66674 120.95121 C
87.68183 121.00167 88.84431 120.97332 89.61222 121.74151 C
89.49770 121.74151 L
89.49883 121.74406 L
90.16384 121.80983 89.98214 121.55839 90.45439 121.08784 C
89.69074 120.41405 92.01430 118.59506 92.38054 117.93685 C
92.45254 117.41499 92.89077 115.89109 92.57613 115.54214 C
92.30627 116.13317 92.07128 117.09439 91.42923 117.17150 c
90.97257 117.22620 90.57685 118.66876 90.37786 118.85329 c
@c
88.18668 91.31046 m
87.92135 91.31046 87.39836 91.39691 87.39836 90.98476 c
87.39836 89.90702 89.33159 91.31046 88.18668 91.31046 c
@c
94.22476 89.83956 m
94.85858 89.20573 95.03405 91.45701 94.03625 90.86854 C
93.21846 91.35128 93.50787 90.19191 93.50787 90.02750 C
93.68759 89.85458 93.97701 89.70350 94.22476 89.83956 C
@c
102.50957 92.62091 m
102.18926 92.53729 102.26126 92.21924 102.40072 92.00976 C
102.40072 92.03386 L
102.42992 90.88498 104.14630 93.05631 102.50957 92.62091 C
@c
100.07802 94.27493 m
100.09191 94.61395 99.63836 94.73187 99.47565 94.46031 C
99.16129 94.14595 98.99121 92.90636 99.62022 92.90636 c
100.41024 92.90636 100.07802 93.76611 100.07802 94.27493 C
@c
94.04561 93.27373 m
93.82450 93.90019 92.95880 93.02315 93.41263 92.56819 C
93.41263 92.63707 L
93.41263 92.34000 94.70608 91.32208 94.65789 92.26517 C
94.65761 92.26517 L
94.65704 92.27367 L
94.65676 92.27367 L
94.65619 92.28161 L
94.65591 92.28161 L
94.65506 92.28983 L
94.65506 92.28983 L
94.65364 92.29776 L
94.65364 92.29776 L
94.65222 92.30598 L
94.65194 92.30598 L
94.65052 92.31392 L
94.65052 92.31392 L
94.64854 92.32157 L
94.64854 92.32157 L
94.64655 92.32923 L
94.64655 92.32923 L
94.64428 92.33717 L
94.64400 92.33717 L
94.64173 92.34454 L
94.64173 92.34454 L
94.63890 92.35219 L
94.63890 92.35219 L
94.63606 92.35956 L
94.63606 92.35956 L
94.63323 92.36721 L
94.63294 92.36721 L
94.63011 92.37430 L
94.62983 92.37430 L
94.62671 92.38139 L
94.62643 92.38139 L
94.62302 92.38819 L
94.62302 92.38819 L
94.61934 92.39556 L
94.61934 92.39556 L
94.61565 92.40208 L
94.61565 92.40208 L
94.61169 92.40917 L
94.61140 92.40917 L
94.60743 92.41569 L
94.60743 92.41569 L
94.60318 92.42249 L
94.60290 92.42249 L
94.59865 92.42872 L
94.59865 92.42872 L
94.59411 92.43496 L
94.59411 92.43496 L
94.58929 92.44120 L
94.58929 92.44120 L
94.58447 92.44743 L
94.58419 92.44743 L
94.39795 92.67109 94.36365 93.16091 94.04561 93.27373 C
@c
91.16277 93.49115 m
90.30614 93.53395 90.04791 92.31137 91.16561 92.31137 C
91.16561 91.77024 91.60894 91.89354 91.06271 91.34702 c
90.87591 91.16050 90.30643 91.00091 90.30643 90.65424 c
90.30643 89.82227 91.24866 90.68797 91.38246 90.73701 C
92.92110 91.25008 91.96328 94.09946 91.16277 93.49115 C
@c
89.10510 93.33411 m
89.06457 93.69609 88.71619 93.61928 88.48035 93.54076 C
88.48035 93.54047 L
87.88734 93.34233 87.71981 92.19543 88.65043 92.38394 C
88.65298 91.89496 89.76784 90.76564 89.76784 91.71184 c
89.76784 91.80595 89.11672 93.32929 89.10510 93.33411 C
@c
87.50863 108.23244 m
87.57978 108.26164 L
87.56334 108.20920 L
87.51940 108.20920 L
87.50863 108.23244 L
@c
97.50784 100.50180 m
97.45880 100.44198 L
97.50784 100.50180 L
@c
97.92482 93.88261 m
97.74198 94.90791 96.34961 94.65024 96.71783 93.79871 C
95.88047 93.71027 95.61061 92.53814 96.69118 92.40746 C
97.17052 92.12882 97.14586 91.90885 97.28419 91.37055 C
96.89272 90.91871 96.07606 91.03918 96.07606 90.12557 c
96.07606 88.75389 97.71619 89.17483 97.74482 90.24236 C
98.86479 90.59754 98.47191 92.39698 97.84488 93.03761 C
98.11757 93.23887 98.14932 93.63969 97.92482 93.88261 C
@c
107.13231 111.75279 m
108.71773 111.49852 110.28472 111.10791 112.16154 113.03688 C
112.96403 113.92838 113.40992 115.26576 113.07118 117.58450 C
112.39824 118.75436 111.48378 119.69915 110.29805 120.49143 c
109.64920 120.92513 105.16224 121.78545 103.70835 121.11562 C
105.08315 121.23524 106.55858 121.02888 107.90391 120.73238 c
111.57619 119.92309 109.59676 118.61603 111.73351 116.67515 C
109.02274 115.83694 109.78951 113.33991 107.13231 111.75279 C
@c
109.65685 102.31739 m
108.51591 101.46472 107.44498 100.51767 108.53320 96.63959 C
110.24844 97.82249 L
109.45729 98.92517 109.49783 100.58173 109.65685 102.31739 C
@c
82.29997 96.04517 m
82.42129 96.98230 81.11792 96.81902 81.10205 95.69169 C
81.07597 95.64066 81.03033 95.56384 80.98356 95.53266 C
79.50302 94.93455 80.91468 91.51455 80.91468 91.54488 C
81.08419 90.19616 80.51669 90.45071 80.97676 88.86983 C
80.97676 88.94183 L
80.97676 87.17102 83.12910 86.25033 84.61786 86.25033 C
84.54217 86.32800 L
84.99883 85.92945 85.92576 85.87134 86.41786 85.45096 C
88.11524 84.40271 88.99767 83.72835 89.40756 81.83991 C
89.53313 80.61449 91.24441 78.58375 92.79241 78.26287 C
92.73005 78.32551 L
93.01861 78.47093 94.41014 77.91647 94.84668 78.89556 C
94.84668 79.13424 94.70041 79.33890 94.49235 79.42365 C
93.35877 80.55723 92.78022 82.41676 93.93619 83.75443 C
94.36620 84.08296 96.25805 84.67540 95.74072 86.47483 C
95.55024 86.47483 95.06126 87.01625 94.69984 87.01625 C
94.76220 86.95389 L
94.42006 86.95389 93.92145 87.07861 93.51439 87.07861 C
93.61559 86.97713 L
93.40129 87.18831 93.04696 87.13701 92.83691 87.31644 C
92.49704 88.88173 91.60696 87.22290 91.12309 87.72293 C
90.98929 87.72293 90.64035 88.13934 90.34526 88.13934 c
89.76898 88.13934 89.22416 88.07698 88.64702 88.07698 C
88.74850 87.97550 L
88.18101 88.53364 87.25096 88.92992 86.39972 89.12721 c
85.60120 89.31231 85.57597 89.02658 84.98750 89.61506 C
84.98750 89.60060 L
84.59546 89.84920 83.94576 91.48734 83.64472 91.94031 C
83.24419 93.07276 83.24731 95.20469 82.29997 96.04517 C
@c
F

@rax %Note: Object
114.91710 86.64718 145.60469 118.61887 @E
 0 O 0 @g
1.00 1.00 1.00 1.00 k
/$fm 0 def
116.34435 86.64718 m
114.06869 87.76120 115.21729 92.94123 115.13509 95.28576 C
115.96479 95.20328 116.82765 95.20838 117.70016 95.59928 c
120.86589 97.01660 123.67587 100.06781 126.88129 101.56989 c
128.74054 102.44069 130.44898 103.61452 132.15260 104.78778 C
131.98450 106.20057 132.01965 107.28680 132.44400 108.39402 c
133.82844 112.00989 136.52192 114.00378 139.23609 115.93134 C
138.03732 116.15074 136.77335 116.04529 135.35206 115.15181 c
133.46135 113.96381 132.37569 111.34290 131.19420 109.49159 c
128.90126 105.89924 126.24321 102.26154 122.40142 100.16957 c
120.42482 99.09326 118.44794 98.01666 116.47106 96.94035 c
115.43641 96.37710 115.65156 96.48113 115.81540 97.57474 c
116.05663 99.18624 120.82961 101.85704 122.24551 102.90359 c
125.00759 104.94567 127.59477 107.25194 129.51609 110.13534 c
130.77043 112.01783 131.45244 114.39950 133.31225 115.82759 c
134.77323 116.94926 137.34794 118.15710 139.13575 118.47883 c
142.83496 119.14469 143.68791 117.44362 143.81461 113.68545 C
144.31493 113.16728 144.90000 112.69389 145.21323 112.13036 c
146.22236 110.31449 145.18715 106.81257 143.23465 106.55518 c
142.31849 106.43471 141.33770 106.27569 141.55143 105.56929 c
141.73965 104.94624 141.72917 104.77672 140.95304 104.21093 c
139.87672 103.42630 138.98523 103.32567 137.18438 103.04249 c
136.22372 102.89140 135.26957 102.53735 134.31231 102.10989 C
130.53997 99.57827 126.79824 96.89017 123.16876 93.64422 C
121.43735 91.83685 119.12683 90.90935 116.34435 86.64718 C
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel12Dict 12.0 0
%%EOF
