%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 193 193 
%%LanguageLevel: 1
%%Creator: CorelDRAW 12
%%Title: 121969.eps
%%CreationDate: Thu Mar 17 14:29:13 2005
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Build: CorelDRAW Version 12.154
%Color profile: Disabled
/CorelIsEPS true def
%%BeginResource: procset wCorel12Dict 12.0 0
/wCorel12Dict 300 dict def wCorel12Dict begin
% Copyright (c)1992-2003 Corel Corporation
% All rights reserved.     v12 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge
{pop}{exch pop}ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch
rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll
eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1
exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}
repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1
roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index
.114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb
/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray
ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor
get def/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict
/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor
sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop
/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where{pop
/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld
}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{
pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse
/setoverprint where{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where
{pop}{/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1
roll mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/Corelsetcustomcolor_exists false def/setcustomcolor where{pop
/Corelsetcustomcolor_exists true def}if CorelIsSeps true eq CorelIsInRIPSeps
false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{findcmykcustomcolor exch setcustomcolor}ifelse
SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage
where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi
true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop
daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs
{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors
dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255
div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul
cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{
4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div
$dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3
add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat
0 $dat length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse
/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$fil 4 eq
{CorelShfillDoFill}{$t $c $m $y $k $n $o @scc_5{wfill}{@np}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{
matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M $Y $K
$N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}{@np}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{
5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{
/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{
@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{
@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq{/$ink_5 -1 def}
{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5(Magenta)eq{/$ink_5 1
def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{CurrentInkName_5(Black)eq
{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}ifelse}ifelse}bd/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
% Copyright (c)1992-2003 Corel Corporation
% All rights reserved.     v12 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg false def}
ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel12Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
0.00000 0.00000 192.75591 192.75591 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
0.00000 192.75591 m
192.75591 192.75591 L
192.75591 0.00000 L
0.00000 0.00000 L
0.00000 192.75591 L
@c
F

@rax %Note: Object
8.50394 104.39376 29.66655 129.67455 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
11.76718 105.11008 m
11.76718 105.11008 14.29880 104.91222 14.39773 107.70094 C
14.39773 124.98718 L
14.39773 124.98718 16.47439 125.06627 17.06797 125.91666 C
17.02828 124.94750 L
17.02828 124.94750 16.33606 123.70139 16.33606 122.91024 C
16.33606 107.42428 L
16.33606 107.42428 16.88995 105.28809 21.57732 106.13849 C
21.57732 106.13849 27.53036 108.15591 27.31294 117.82743 C
27.31294 117.82743 26.44271 126.72765 18.94677 127.47912 C
8.50394 127.47912 L
8.50394 129.67455 L
8.50394 129.67455 10.85754 128.54721 12.61786 128.64614 C
21.41915 128.64614 L
21.41915 128.64614 29.72580 127.41987 29.66655 116.54192 C
29.66655 116.54192 29.13250 104.95191 21.41915 104.47710 C
21.41915 104.47710 18.39288 104.35861 17.36447 104.69480 C
17.36447 104.69480 15.42614 104.95191 13.82428 104.53663 C
13.82428 104.53663 12.42000 104.25969 11.76718 104.47710 C
11.76718 105.11008 L
@c
F

@rax %Note: Object
29.25128 101.64813 87.51742 127.55537 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
35.58019 105.60444 m
34.39332 105.60444 L
34.39332 105.60444 33.38476 105.66397 33.06841 105.82214 C
33.06841 105.82214 32.07940 106.00016 31.34750 105.72321 C
31.34750 105.72321 29.84457 105.60444 29.34992 105.66397 C
29.34992 106.35619 L
29.34992 106.35619 31.34750 105.90123 31.28825 107.76047 C
31.28825 123.18718 L
31.28825 123.18718 31.50595 124.63115 29.25128 124.57162 C
29.25128 125.44186 L
29.25128 125.44186 33.70110 125.18476 35.83729 125.38261 C
35.83729 125.38261 40.24772 125.16520 40.18847 120.49739 C
40.18847 120.49739 40.24772 116.91751 37.61717 114.97946 C
37.45899 114.66283 L
37.45899 114.66283 42.14636 107.14734 43.17506 107.14734 C
43.17506 122.79175 L
43.17506 122.79175 43.45172 124.47298 41.19704 124.57162 C
41.19704 125.44186 L
41.19704 125.44186 47.56564 124.53222 51.16535 125.38261 C
51.54094 125.38261 L
51.54094 120.33921 L
50.84872 120.33921 L
50.69055 122.37647 L
50.69055 122.37647 50.53238 123.78047 48.55465 123.78047 C
48.55465 123.78047 45.74608 124.01802 45.52838 122.59389 C
45.52838 108.33392 L
45.52838 108.33392 46.22060 106.92964 47.40746 107.04841 C
49.87956 107.04841 L
49.87956 107.04841 51.42246 107.14734 52.35194 109.18431 C
52.35194 109.18431 58.46343 125.46170 59.90712 127.47912 C
59.90712 127.47912 60.54009 127.87455 60.28299 126.86598 C
60.28299 126.86598 60.06529 124.98718 60.28299 124.13650 C
60.28299 124.13650 63.38806 107.42428 65.66258 107.26583 C
65.66258 107.26583 66.23603 106.92964 66.17679 108.76904 C
66.71083 123.34535 L
66.71083 123.34535 66.82961 124.47298 64.83203 124.78932 C
64.83203 125.44186 L
68.33254 125.44186 L
74.66173 112.40816 L
74.66173 112.40816 74.70113 112.36876 75.13625 113.25855 C
81.08957 126.13408 L
82.31584 126.13408 L
82.25631 125.38261 L
82.25631 125.38261 81.88072 124.94750 81.84104 124.31452 C
81.84104 108.45269 L
81.84104 108.45269 82.69143 106.45512 84.72869 106.73178 C
87.49757 106.98917 L
87.49757 106.98917 87.65575 106.51436 87.08230 106.23742 C
87.08230 106.23742 85.63833 105.50580 83.44318 105.50580 C
81.88072 105.50580 L
81.88072 105.50580 80.12041 105.38702 80.12041 107.26583 C
80.12041 120.02287 L
80.12041 120.02287 79.64561 120.67540 79.21049 119.58775 C
74.20677 107.95805 L
74.20677 107.95805 73.63304 106.75162 73.41562 107.91865 C
73.41562 107.91865 73.25745 108.49209 73.57380 109.18431 C
73.47487 109.81729 L
68.70841 119.90409 L
68.70841 119.90409 68.11512 120.73493 68.01619 119.54806 C
67.46230 107.52293 L
67.46230 107.52293 67.42290 106.45512 68.49099 106.45512 C
68.49099 106.45512 69.65773 106.09909 69.18321 105.66397 C
64.41647 105.66397 L
64.41647 105.66397 62.97279 105.56504 62.10255 108.70980 C
62.10255 108.70980 59.17550 118.28239 59.11597 120.71509 C
59.11597 120.71509 58.87871 122.39603 58.34466 121.30838 C
58.34466 121.30838 53.38035 107.70094 53.00476 105.98031 C
52.72781 105.60444 L
44.10454 105.60444 L
44.10454 105.60444 46.77449 102.32135 49.08869 102.22243 C
50.69055 102.22243 L
50.69055 102.22243 50.92781 101.68838 50.43345 101.64898 C
46.29997 101.64898 L
46.29997 101.64898 43.57049 101.45112 39.97077 107.08781 C
39.97077 107.08781 36.68769 111.75562 36.27241 113.06098 C
36.27241 113.06098 35.40217 114.56391 34.39332 114.93978 C
33.95820 114.93978 L
33.95820 115.57276 L
36.27241 115.57276 L
36.27241 115.57276 38.40831 115.98803 38.09197 120.12180 C
38.09197 120.12180 37.91395 123.97833 34.49225 124.09710 C
33.26598 124.09710 L
33.26598 107.62186 L
33.26598 107.62186 33.28583 106.29666 34.94721 106.41543 C
35.58019 106.45512 L
35.58019 105.60444 L
@c
F

@rax %Note: Object
46.11543 113.10038 50.74980 117.70866 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
46.29997 115.51351 m
46.29997 115.51351 45.88441 116.85827 46.29997 117.17461 C
49.24687 117.17461 L
49.24687 117.17461 50.01817 117.07597 50.25543 117.70866 C
50.74980 117.70866 L
50.74980 113.10038 L
50.19619 113.15991 L
50.19619 113.15991 50.21603 115.29581 48.87099 115.29581 C
46.55707 115.29581 L
46.29997 115.51351 L
@c
F

@rax %Note: Object
85.55726 114.24331 88.79783 117.60973 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
86.96353 114.50466 m
86.92413 114.97946 86.82520 116.38375 85.79679 117.01644 C
85.79679 117.01644 85.16381 117.49124 85.95496 117.60973 C
88.74369 117.60973 L
88.74369 117.60973 88.96110 116.99660 88.52598 116.64085 C
87.49757 114.34649 L
87.49757 114.34649 87.02306 114.03014 86.96353 114.50466 C
@c
F

@rax %Note: Object
85.63833 102.69723 104.66504 131.21717 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
93.13427 127.45928 m
93.13427 127.45928 87.41849 127.40003 86.07345 126.98476 C
85.63833 126.98476 L
85.63833 131.21717 L
86.11313 131.05899 L
86.11313 131.05899 86.11313 129.17991 88.58551 129.17991 C
88.58551 129.17991 103.02350 128.94265 104.52643 128.64614 C
104.62535 128.62630 104.66504 128.60646 104.66504 128.58661 C
104.54627 128.27027 103.89373 127.79546 103.04306 127.73622 C
103.04306 127.73622 96.45704 127.24186 95.60665 127.30110 C
95.60665 104.73420 L
95.60665 104.73420 95.98252 103.23128 97.86132 103.23128 C
98.49430 103.23128 L
98.49430 102.69723 L
90.24661 102.69723 L
90.36539 103.13235 L
90.36539 103.13235 93.51014 103.44869 93.35197 105.32778 C
93.13427 127.45928 L
@c
F

@rax %Note: Object
98.21735 103.09493 147.70205 127.77052 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
98.33584 124.73008 m
98.33584 124.73008 101.34227 124.67055 101.28302 122.59389 C
101.28302 107.70094 L
101.28302 107.70094 101.28302 106.19802 99.74013 106.19802 C
99.74013 105.72321 L
105.08031 105.72321 L
105.08031 106.51436 L
104.28917 106.51436 L
104.28917 106.51436 103.12214 106.45512 103.12214 108.45269 C
103.12214 115.25613 L
111.25106 115.25613 L
111.25106 107.76047 L
111.25106 107.76047 111.31030 105.90123 110.83578 105.56504 C
127.82523 105.56504 L
127.82523 105.56504 128.04265 108.05698 128.55685 109.50094 C
132.49276 120.65556 L
132.49276 120.65556 133.06620 122.02044 133.34315 120.89310 C
138.96028 105.60444 L
138.96028 105.60444 139.53373 102.73663 144.75515 103.13235 C
147.70205 103.13235 L
147.66265 103.94334 L
144.69591 103.94334 L
144.69591 103.94334 142.61924 104.77389 141.33345 107.36476 C
134.25307 125.50139 L
134.25307 125.50139 133.81795 127.41987 130.65335 127.57805 C
128.14157 127.57805 L
128.14157 126.76706 L
129.42709 126.76706 L
129.42709 126.76706 131.99839 126.41102 132.27506 123.56306 C
127.11317 108.76904 L
127.11317 108.76904 125.90674 106.92964 124.99682 107.20658 C
121.17969 107.20658 L
121.17969 107.20658 119.93357 107.36476 120.03250 109.61943 C
120.03250 123.46413 L
123.53329 123.46413 L
123.53329 123.46413 125.41209 123.80031 125.51102 120.65556 C
125.94614 120.65556 L
125.94614 125.34321 L
125.94614 125.34321 117.63950 124.74964 115.60224 125.44186 C
115.60224 124.63115 L
115.60224 124.63115 117.95584 124.49254 117.95584 122.85099 C
117.79767 107.91865 L
117.79767 107.91865 117.36255 105.92107 115.42422 106.19802 C
115.42422 106.19802 113.18939 105.92107 113.22879 107.95805 C
113.22879 115.19688 L
113.22879 115.19688 115.16712 115.69124 115.16712 116.70009 C
113.22879 116.81887 L
113.22879 124.35420 L
113.22879 124.35420 113.14970 125.95606 114.25720 127.40003 C
114.25720 127.40003 114.07946 128.13165 113.44649 127.53836 C
113.44649 127.53836 111.31030 125.63972 111.25106 122.94992 C
111.25106 116.54192 L
105.31757 116.54192 L
105.31757 116.54192 103.04306 116.48239 102.94441 117.39231 C
102.94441 125.04643 L
98.21735 125.44186 L
98.33584 124.73008 L
@c
F

@rax %Note: Object
120.62466 113.15991 125.94614 117.66926 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
120.70488 115.19688 m
120.70488 115.19688 120.42822 117.01644 120.90274 117.17461 C
124.70003 117.17461 L
124.70003 117.17461 125.35285 117.13521 125.51102 117.66926 C
125.94614 117.66926 L
125.94614 113.15991 L
125.35285 113.15991 L
125.35285 113.15991 125.39254 114.93978 124.28476 115.13764 C
120.70488 115.19688 L
@c
F

@rax %Note: Object
138.10961 102.42057 184.25197 128.86554 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
138.10961 121.30838 m
138.10961 125.85742 L
138.76243 125.75849 L
138.76243 125.75849 140.89833 124.98718 142.93559 125.04643 C
142.93559 125.04643 158.22397 124.69039 160.51833 125.69896 C
160.89392 125.69896 L
160.89392 120.59631 L
160.41940 120.65556 L
160.41940 120.65556 160.57757 123.40488 158.32290 123.40488 C
156.06822 123.40488 155.41540 123.40488 155.41540 123.40488 C
155.41540 123.40488 155.03981 123.06869 154.98028 122.53465 C
154.98028 109.24384 L
154.98028 109.24384 154.94088 106.83071 157.13631 106.92964 C
160.57757 106.92964 L
160.57757 106.92964 163.08935 107.62186 163.52447 109.50094 C
163.52447 125.10567 L
163.30706 126.01559 L
165.71991 126.01559 L
165.71991 117.66926 L
165.71991 117.66926 170.90164 116.26498 170.84239 122.31694 C
170.84239 122.31694 170.66438 127.95392 164.75074 127.85499 C
164.75074 127.85499 161.76416 127.83515 160.36016 127.24186 C
160.36016 128.48769 L
160.36016 128.48769 165.58157 129.33836 168.98315 128.48769 C
168.98315 128.48769 173.73005 127.08369 173.05767 121.90167 C
173.05767 121.90167 172.95874 118.89553 169.63597 116.97704 C
169.79414 116.42315 L
178.31849 104.79373 L
178.31849 104.79373 179.82170 102.99373 183.08494 103.17175 C
184.25197 103.17175 L
184.25197 102.47953 L
180.45468 102.47953 L
180.45468 102.47953 177.56702 101.64898 173.80913 106.19802 C
167.48022 116.30438 L
167.48022 116.30438 166.82740 117.01644 165.71991 116.85827 C
165.71991 105.98031 L
165.71991 105.98031 166.07594 104.20044 167.59871 104.20044 C
168.29093 104.20044 L
168.29093 103.62671 L
161.30948 103.62671 L
161.30948 104.25969 L
161.30948 104.25969 163.24753 104.23984 163.30706 105.42643 C
163.34646 107.52293 L
163.34646 107.52293 162.14003 105.20901 160.73575 105.32778 C
150.39184 105.32778 L
150.39184 106.23742 L
151.28192 106.23742 L
151.28192 106.23742 152.90362 106.45512 152.62668 108.33392 C
152.74545 124.25528 L
152.74545 124.25528 147.95915 123.18718 146.67364 123.56306 C
146.67364 108.49209 L
146.67364 108.49209 146.29776 106.45512 148.01839 106.41543 C
148.98756 106.41543 L
148.98756 105.56504 L
142.89591 105.56504 L
142.89591 106.35619 L
142.89591 106.35619 144.41896 106.31650 144.37928 107.91865 C
144.37928 123.56306 L
144.37928 123.56306 139.49405 123.60274 139.07877 122.75206 C
139.07877 122.75206 138.76243 122.00060 138.80183 121.46655 C
138.10961 121.30838 L
@c
F

@rax %Note: Object
155.58038 113.69367 160.65666 117.66926 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
155.65294 115.49367 m
155.65294 115.49367 155.39584 117.11537 155.85052 117.25398 C
159.47008 117.25398 L
159.47008 117.25398 160.10306 117.21430 160.24139 117.66926 C
160.65666 117.66926 L
160.65666 113.69367 L
160.10306 113.69367 L
160.10306 113.69367 160.12261 115.25613 159.05480 115.45398 C
155.65294 115.49367 L
@c
F

@rax %Note: Object
74.72098 61.53902 118.01509 97.79216 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
109.70844 88.51635 m
109.70844 69.13389 L
112.29931 71.74460 113.86176 75.12661 113.86176 78.82498 C
113.86176 82.50378 112.29931 85.88580 109.70844 88.51635 C
@c
82.35524 69.76658 m
82.35524 87.88337 L
80.12041 85.35175 78.79521 82.22683 78.79521 78.82498 C
78.79521 75.42312 80.12041 72.27865 82.35524 69.76658 C
@c
95.62649 61.53902 m
88.09087 61.53902 L
88.09087 62.46850 L
88.09087 62.46850 89.93027 62.46850 91.57181 62.96315 C
90.54340 63.14117 89.53483 63.37843 88.56567 63.65537 C
78.20192 63.65537 L
78.20192 64.32775 L
78.20192 64.32775 81.88072 64.48592 82.31584 66.48350 C
77.66787 69.47008 74.72098 73.92019 74.72098 78.86466 C
74.72098 83.84882 77.68772 88.31849 82.37509 91.30507 C
82.33540 92.21471 81.93997 94.17288 78.87430 94.17288 C
78.30085 94.17288 L
78.30085 94.92435 L
87.16139 94.92435 L
87.16139 94.25197 L
87.16139 94.25197 85.85603 94.03427 85.61877 93.02570 C
88.07102 94.09380 90.84019 94.80586 93.78709 95.06296 C
92.93669 95.97260 91.43348 96.84283 88.86217 96.96161 C
87.91285 96.96161 L
87.75468 97.79216 L
95.62649 97.79216 L
104.30901 97.79216 L
104.13099 96.96161 L
103.20151 96.96161 L
100.66989 96.84283 99.18652 96.01228 98.31628 95.12220 C
101.18409 94.92435 103.87389 94.31121 106.30658 93.36189 C
105.89131 94.07395 104.90230 94.25197 104.90230 94.25197 C
104.90230 94.92435 L
113.76283 94.92435 L
113.76283 94.17288 L
113.18939 94.17288 L
110.51915 94.17288 109.86661 92.68951 109.72828 91.70050 C
114.77169 88.71420 118.01509 84.08608 118.01509 78.86466 C
118.01509 73.72233 114.83093 69.11405 109.86661 66.12746 C
110.63792 64.46608 113.86176 64.32775 113.86176 64.32775 C
113.86176 63.65537 L
104.19024 63.65537 L
103.08274 63.33874 101.93556 63.08164 100.74898 62.90362 C
102.31143 62.46850 103.97282 62.46850 103.97282 62.46850 C
103.97282 61.53902 L
95.62649 61.53902 L
@c
91.29487 75.58157 m
87.91285 70.49849 L
86.86460 68.67893 86.62734 67.19556 86.60750 66.32532 C
87.73483 65.69235 88.94126 65.15830 90.20721 64.76287 C
90.97852 64.76287 L
90.97852 64.52561 L
91.78951 64.30791 92.63991 64.12989 93.51014 64.01140 C
93.82649 64.32775 94.02435 64.72318 94.08359 65.17814 C
94.08359 68.04595 L
94.08359 68.04595 93.74740 70.49849 92.73883 72.35773 C
91.29487 75.58157 L
@c
94.93427 80.36787 m
94.22220 80.17002 93.84633 79.37887 93.84633 79.37887 C
92.63991 77.57915 L
93.92542 74.90891 L
93.92542 74.90891 95.11228 74.39471 94.93427 76.17487 C
94.93427 80.36787 L
@c
91.84876 79.22069 m
94.93427 84.20457 L
94.93427 92.88737 L
94.93427 92.88737 94.89458 93.24340 94.67717 93.75761 C
91.51257 93.50050 88.58551 92.53134 86.15282 91.02813 C
91.84876 79.22069 L
@c
84.80778 68.28321 m
85.30214 68.59984 85.63833 69.23282 85.63833 69.23282 C
90.58309 77.18343 L
85.71770 88.00214 L
85.71770 88.00214 84.96595 89.26781 84.80778 87.40885 C
84.80778 68.40198 L
84.80778 68.40198 84.80778 68.36258 84.80778 68.28321 C
@c
101.36211 76.92633 m
106.14841 69.23282 L
106.14841 69.23282 106.62293 68.38214 107.23606 68.16472 C
107.25591 68.30306 107.25591 68.40198 107.25591 68.40198 C
107.25591 87.40885 L
107.09773 89.26781 106.34598 88.00214 106.34598 88.00214 C
101.36211 76.92633 L
@c
97.12942 83.76945 m
100.09616 78.98315 L
106.04948 91.30507 L
103.55726 92.72891 100.59080 93.61899 97.40636 93.79701 C
97.16910 93.26296 97.12942 92.88737 97.12942 92.88737 C
97.12942 83.76945 L
@c
99.30501 77.34161 m
97.94041 79.37887 L
97.94041 79.37887 97.66346 79.97216 97.12942 80.26894 C
97.12942 76.17487 L
96.95140 74.39471 98.13827 74.90891 98.13827 74.90891 C
99.30501 77.34161 L
@c
105.17924 65.87036 m
105.21865 66.56258 105.15940 68.26365 103.87389 70.49849 C
100.65005 75.32447 L
99.32485 72.35773 L
98.31628 70.49849 97.98009 68.04595 97.98009 68.04595 C
97.98009 65.17814 L
98.03934 64.68378 98.27660 64.26850 98.63263 63.95187 C
99.46346 64.03096 100.29402 64.18942 101.08517 64.38699 C
101.08517 64.76287 L
102.19266 64.76287 L
102.46961 64.76287 L
103.39909 65.05965 104.30901 65.43524 105.17924 65.87036 C
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel12Dict 12.0 0
%%EOF
