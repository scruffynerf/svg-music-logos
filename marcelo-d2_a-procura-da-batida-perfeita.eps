%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 81 205 514 637 
%%LanguageLevel: 2
%%Creator: CorelDRAW
%%Title: d2.eps
%%CreationDate: Thu Oct 15 14:06:36 2009
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 2 def
%Build: CorelDRAW Versão 13.0.0.576
%Color profile: Desativado
/CorelIsEPS true def
%%BeginResource: procset wCorel3Dict 3.0 0
/wCorel3Dict 300 dict def wCorel3Dict begin
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/fill_color 6 array def/num_fill_inks 1 def/$o 0 def/$fil 0 def
/outl_color 6 array def/num_outl_inks 1 def/$O 0 def/$PF false def/$bkg false
def/$op false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def
/$stm matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1
}ifelse def/level2 get_ps_level 2 ge def/level3 get_ps_level 3 ge def
/is_distilling{/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse}bd/is_rip_separation{
is_distilling{false}{level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse}bd/is_current_sep_color{
is_separation{gsave false setoverprint 1 1 1 1 5 -1 roll findcmykcustomcolor 1
setcustomcolor currentgray 0 eq grestore}{pop false}ifelse}bd
/get_sep_color_index{dup length 1 sub 0 1 3 -1 roll{dup 3 -1 roll dup 3 -1 roll
get is_current_sep_color{exit}{exch pop}ifelse}for pop -1}bd/is_separation{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
is_rip_separation{true}{1 0 0 0 gsave setcmykcolor currentcmykcolor grestore
add add add 0 ne 0 1 0 0 gsave setcmykcolor currentcmykcolor grestore add add
add 0 ne 0 0 1 0 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne
0 0 0 1 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne and and
and not}ifelse}ifelse}ifelse}bind def/is_composite{is_separation not
is_distilling or}bd/is_sim_devicen{level2 level3 not and{is_distilling
is_rip_separation or}{false}ifelse}bd/@PL{/LV where{pop LV 2 ge level2 not and
{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if level2{/@ssa{true setstrokeadjust}
bd}{/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c
/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N
/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}
bd/@J{@rs}bd/g{1 exch sub 0 0 0 1 null 1 set_fill_color/$fil 0 def}bd/G{1 sub
neg 0 0 0 1 null 1 set_outline_color}bd/set_fill_color{/fill_color exch def
/num_fill_inks fill_color length 6 idiv def/bFillDeviceN num_fill_inks 1 gt def
/$fil 0 def}bd/set_outline_color{/outl_color exch def/num_outl_inks outl_color
length 6 idiv def/bOutlDeviceN num_outl_inks 1 gt def}bd
/get_devicen_color_names{dup length 6 idiv dup 5 mul exch getinterval}bd
/get_devicen_color_specs{dup length 6 idiv dup 4 mul getinterval}bd
/get_devicen_color{dup length 6 idiv 0 exch getinterval}bd/mult_devicen_color{
/colorarray exch def/mult_vals exch def 0 1 mult_vals length 1 sub{colorarray
exch dup mult_vals exch get exch dup colorarray exch get 3 -1 roll mul put}for
colorarray}bd/combine_devicen_colors{/colorarray2 exch def/colorarray1 exch def
/num_inks1 colorarray1 length 6 idiv def/num_inks2 colorarray2 length 6 idiv
def/num3 0 def/colorarray3[num_inks1 num_inks2 add 6 mul{0}repeat]def 0 1
num_inks1 1 sub{colorarray1 exch get colorarray3 num3 3 -1 roll put/num3 num3 1
add def}for 0 1 num_inks2 1 sub{colorarray2 exch get colorarray3 num3 3 -1 roll
put/num3 num3 1 add def}for colorarray1 num_inks1 dup 4 mul getinterval
colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 4 mul add def
colorarray2 num_inks2 dup 4 mul getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 4 mul add def colorarray1 num_inks1 dup 5 mul
exch getinterval colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 add
def colorarray2 num_inks2 dup 5 mul exch getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 add def colorarray3}bd/get_devicen_color_spec{
/colorant_index exch def/colorarray exch def/ncolorants colorarray length 6
idiv def[colorarray colorant_index get colorarray ncolorants colorant_index 4
mul add 4 getinterval aload pop colorarray ncolorants 5 mul colorant_index add
get]}bd/set_devicen_color{level3{/colorarray exch def/numcolorants colorarray
length 6 idiv def colorarray get_devicen_color_specs/tint_params exch def[
/DeviceN colorarray get_devicen_color_names/DeviceCMYK{tint_params
CorelTintTransformFunction}]setcolorspace colorarray get_devicen_color aload
pop setcolor}{/DeviceCMYK setcolorspace devicen_to_cmyk aload pop pop @tc_5
setprocesscolor_5}ifelse}bd/sf{/bmp_fill_fg_color xd}bd/i{dup 0 ne{setflat}
{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld
/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm
exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd
/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp
xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}{$dsa}ifelse $SCP @ss
}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}
ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp
}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}
bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/devicen_to_cmyk{/convertcolor exch def convertcolor
get_devicen_color aload pop convertcolor get_devicen_color_specs
CorelTintTransformFunction}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld
/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2
systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def
/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get
def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/findcmykcustomcolor where{pop}{
/findcmykcustomcolor{5 array astore}bd}ifelse/Corelsetcustomcolor_exists false
def/setcustomcolor where{pop/Corelsetcustomcolor_exists true def}if CorelIsSeps
true eq CorelIsInRIPSeps false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{dup(CorelRegistrationColor)eq{5 rp 1 exch sub
setregcolor}{findcmykcustomcolor exch setcustomcolor}ifelse}ifelse SepMode_5 0
eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/separate_color{
SepMode_5 0 ne{[exch/colorarray_sep exch def/ink_num -1 def colorarray_sep
length 6 idiv 1 gt{colorarray_sep get_devicen_color_names dup length 1 sub 0 1
3 -1 roll{exch dup 3 -1 roll dup 3 1 roll get CurrentInkName_5 eq{/ink_num exch
def}{pop}ifelse}for pop ink_num -1 ne{colorarray_sep ink_num
get_devicen_color_spec aload pop pop SepsColor not{pop pop pop pop 1 0 0 0 5 -1
roll}if null}{0 0 0 0 0 null}ifelse}{colorarray_sep 5 get $ink_5 4 eq{
CurrentInkName_5 eq{colorarray_sep aload pop pop SepsColor not{pop pop pop pop
0 0 0 1}if null}{0 0 0 0 0 null}ifelse}{colorarray_sep 0 get colorarray_sep
$ink_5 1 add get 3 -1 roll null eq{0 0 0 4 -1 roll SepsColor{4 $ink_5 1 add
roll}if null}{pop pop 0 0 0 0 0 null}ifelse}ifelse}ifelse]}if}bd
/separate_cmyk_color{$ink_5 -1 ne{[exch aload pop 3 $ink5 sub index
/colorarray_sep exch def/ink_num -1 def colorarray_sep get_devicen_color_names
dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3 1 roll get
CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1 ne{[
colorarray_sep ink_num get_devicen_color_spec aload pop]}{[0 0 0 0 0 null]
}ifelse}if}bd/set_current_color{dup type/booleantype eq{dup currentoverprint ne
{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse/cur_color exch def
/nNumColors cur_color length 6 idiv def nNumColors 1 eq{cur_color 5 get
(CorelRegistrationColor)eq{cur_color aload pop 5 rp 1 exch sub setregcolor}{
SepMode_5 0 eq{cur_color aload pop dup null eq{pop @tc_5 setprocesscolor_5}{
findcmykcustomcolor exch setcustomcolor}ifelse}{cur_color separate_color aload
pop pop @tc_5 setprocesscolor_5}ifelse}ifelse}{SepMode_5 0 eq{is_distilling
is_rip_separation or{cur_color set_devicen_color}{cur_color devicen_to_cmyk
setprocesscolor_5}ifelse}{cur_color separate_color aload pop pop @tc_5
setprocesscolor_5}ifelse}ifelse SepMode_5 0 eq{true}{GetGry 1 eq
currentoverprint and not}ifelse}bd/colorimage where{pop/ColorImage{colorimage}
def}{/ColorImage{/ncolors xd/$multi xd $multi true eq{ncolors 3 eq{/daqB xd
/daqG xd/daqR xd pop pop exch pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK
xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs{daqC pop daqM pop daqY pop daqK
pop}repeat}ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length
3 div 1 sub{dup 3 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div
$dat 3 index 2 add get 255 div rgb2g 255 mul cvi exch pop $dat 3 1 roll put}
for $dat 0 $dat length 3 idiv getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4
div 1 sub{dup 4 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div
$dat 3 index 2 add get 255 div $dat 4 index 3 add get 255 div cmyk2rgb rgb2g
255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length ncolors idiv
getinterval}if}ifelse}image}ifelse}bd}ifelse/setcmykcolor{1 5 1 roll null 6
array astore currentoverprint set_current_color/$ffpnt xd}bd/currentcmykcolor{
GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd/currentrgbcolor{
currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}bd
/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d fill_color $o set_current_color pop $ctm setmatrix
72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{level3{fill_color $o
set_current_color{wfill}{@np}ifelse}{/overprint_flag $o def is_distilling
is_rip_separation or{0 1 num_fill_inks 1 sub{dup 0 gt{/overprint_flag true def
}if fill_color exch get_devicen_color_spec overprint_flag set_current_color{
@gs wfill @gr}{@np exit}ifelse}for}{fill_color overprint_flag set_current_color
{@gs wfill @gr}{@np exit}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf
$dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix
$SDF{$SCF $SCA $SCP @ss}if level3{outl_color $O set_current_color{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}{/overprint_flag $O def
is_distilling is_rip_separation or{0 1 num_outl_inks 1 sub{dup 0 gt{
/overprint_flag true def}if outl_color exch get_devicen_color_spec
overprint_flag set_current_color{matrix currentmatrix $ptm concat @gs stroke
@gr setmatrix}{@np exit}ifelse}for}{outl_color overprint_flag set_current_color
{matrix currentmatrix $ptm concat @gs stroke @gr setmatrix}{@np exit}ifelse
}ifelse}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S
}bd/b{@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat
readhexstring pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd
/Bblly xd/Bbllx xd}bd/@c{@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore
/$Prm xd}bd/tcc{@cc}def/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5
(Composite)eq{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{
CurrentInkName_5(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2
def}{CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}
ifelse}ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000
-72000 l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer
/exec cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add
def}bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{
eax}ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict
/pdfmark known not{/pdfmark/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}
ifelse}bd level2{/setregcolor{/neg_flag exch def[/Separation/All/DeviceCMYK{
dup dup dup}]setcolorspace 1.0 neg_flag sub setcolor}bd}{/setregcolor{1 exch
sub dup dup dup setcmykcolor}bd}ifelse/CorelTintTransformFunction{
/colorantSpecArray exch def/nColorants colorantSpecArray length 4 idiv def
/inColor nColorants 1 add 1 roll nColorants array astore def/outColor 4 array
def 0 1 3{/nOutInk exch def 1 0 1 nColorants 1 sub{dup inColor exch get exch 4
mul nOutInk add colorantSpecArray exch get mul 1 exch sub mul}for 1 exch sub
outColor nOutInk 3 -1 roll put}for outColor aload pop}bind def
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{bmp_fill_fg_color $O set_current_color/$frg xd}{/$frg false
def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{fill_color set_current_color pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq
$ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi
$ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string
def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def/bImgDeviceN false def/nNumInksDeviceN 0 def
/sNamesDeviceN[]def/tint_params[]def level2{/@I_2{@sm @gs @ii @np/$ury xd/$urx
xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul
8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}
{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly
sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0
1 0 1 0 1 0 1]}ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt
{$hei}{0}ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq
{/DCTDecode filter}{COMP 2 eq{/RunLengthDecode filter}if}ifelse def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse
level2{/@I_2D{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd
/$hei xd/$wid xd $ngx/scanline $wid $bts mul $ncl mul 8 div ceiling cvi string
def/readscanline{currentfile scanline readhexstring pop}bind def level3{[
/DeviceN sNamesDeviceN/DeviceCMYK{tint_params CorelTintTransformFunction}]
setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[nNumInksDeviceN{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0
gt{$hei}{0}ifelse]def/DataSource{readscanline}def currentdict end image}{
/scanline_height $lly $ury sub 1 sub $hei div def/plate_scanline $wid string
def/cmyk_scanline $wid 4 mul string def is_distilling is_rip_separation or{
/bSimDeviceN true def}{/bSimDeviceN false def}ifelse/scanline_img_dict 8 dict
begin/ImageType 1 def/Width $wid def/Height 1 def/BitsPerComponent $bts def
/Decode bSimDeviceN{[0 1]}{[0 1 0 1 0 1 0 1]}ifelse def/ImageMatrix[$wid 0 0 1
neg 0 1]def/DataSource bSimDeviceN{plate_scanline}{cmyk_scanline}ifelse def
currentdict end def 0 1 $hei 1 sub{@gs/nScanIndex exch def readscanline pop
/$t_lly $ury $lly scanline_height nScanIndex mul sub sub ceiling cvi def
/$t_ury $t_lly scanline_height sub ceiling cvi def bSimDeviceN{0 1 $ncl 1 sub{
@gs/nInkIndex exch def 0 1 plate_scanline length 1 sub{dup $ncl mul nInkIndex
add scanline exch get plate_scanline 3 1 roll put}for[0 1 $ncl 1 sub{nInkIndex
eq{1.0}{0.0}ifelse}for]/sepTintTransformParams exch def[/Separation
sNamesDeviceN nInkIndex get/DeviceCMYK{sepTintTransformParams aload pop
tint_params CorelTintTransformFunction @tc_5}]setcolorspace $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale nInkIndex 0 eq currentoverprint not and{false
setoverprint}{true setoverprint}ifelse scanline_img_dict image @gr}for}{0 1
$wid 1 sub{dup $ncl mul scanline exch $ncl getinterval 0 1 $ncl 1 sub{2 copy
get 255 div 3 1 roll pop}for pop tint_params CorelTintTransformFunction 5 -1
roll cmyk_scanline exch 0 1 3{3 1 roll 2 copy 5 -1 roll dup 8 exch sub index
255 mul cvi 3 1 roll exch 4 mul add exch put}for 6 rp}for/DeviceCMYK
setcolorspace $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale
scanline_img_dict image}ifelse @gr}for}ifelse $SDF{$dsf $dsa $dsp @ss}if @gr
$ctm setmatrix}bd}{/@I_2D{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury xd/$urx xd/$lly
xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx bImgDeviceN{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]}{$ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse}ifelse setcolorspace $llx $lly Tl $urx
$llx sub $ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}
ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode
filter}{COMP 2 eq{/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7
dict def MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop bImgDeviceN{@I_2D}{@I_2}ifelse}{11 index
1 eq{12 -1 roll pop @i}{7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
/disable_raster_output{/@BMP load/old_raster_func exch bind def/@BMP{8 rp/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi string def 0 1 $hei 1 sub{currentfile scanline
readhexstring pop pop pop}for}def}bd/enable_raster_output{/old_raster_func
where{pop/old_raster_func load/@BMP exch bd}if}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel3Dict begin
@BeginSysCorelDict
@ssa
1.00 setflat
/$fst 256 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 0 1 1 0
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
102.02967 291.46365 493.24592 550.42611 @E
/$fm 0 def
 0 O 0 @g
[ 1.00 0.59 0.40 0.90 0.05 null ] set_fill_color
119.66740 550.42696 m
291.87071 550.42696 L
291.87269 513.88781 L
146.12797 513.88781 L
146.12797 439.96082 L
102.02967 439.96082 L
102.02967 532.78753 l
102.02967 542.48797 109.96639 550.42696 119.66740 550.42696 c
@c
121.34948 305.15386 m
121.41609 305.15386 L
123.82554 298.24356 L
118.91877 298.24356 L
121.34948 305.15386 L
@c
113.73647 291.85058 m
116.64510 291.85058 L
118.15370 296.10539 L
124.56822 296.10539 L
126.07739 291.85058 L
129.09430 291.85058 L
122.90343 307.92416 L
119.90891 307.92416 L
113.73647 291.85058 L
@c
139.69814 305.62753 m
143.86167 305.62753 l
145.34759 305.62753 146.63055 305.08696 146.63055 302.95984 c
146.63055 300.92598 145.07717 300.29187 143.81631 300.29187 c
139.69814 300.29187 L
139.69814 305.62753 L
@c
136.88306 291.85058 m
139.69814 291.85058 L
139.69814 297.99524 L
143.97392 297.99524 l
148.56718 297.97342 149.44479 300.94838 149.44479 302.93688 c
149.44479 304.94750 148.56718 307.92416 143.97392 307.92416 c
136.88306 307.92416 L
136.88306 291.85058 L
@c
154.71213 305.62753 m
159.28356 305.62753 l
160.74454 305.62753 162.07342 305.22189 162.07342 303.17301 c
162.07342 301.48469 161.10624 300.60794 159.32721 300.60794 c
154.71213 300.60794 L
154.71213 305.62753 L
@c
151.89817 291.85058 m
154.71213 291.85058 L
154.71213 298.46863 L
158.85354 298.46863 l
161.44299 298.46863 162.05102 297.16271 162.05102 294.21468 c
162.05102 293.42608 162.05102 292.54791 162.47934 291.85058 C
165.49427 291.85058 L
164.88765 292.50369 164.61694 294.21468 164.61694 296.08271 c
164.61694 298.62652 163.19991 299.34709 162.23074 299.48145 C
162.23074 299.52652 L
162.74835 299.70652 164.88765 300.49398 164.88765 303.57836 c
164.88765 306.30217 163.08624 307.92416 159.57468 307.92416 c
151.89817 307.92416 L
151.89817 291.85058 L
@c
174.59065 308.30598 m
169.77231 308.30598 166.89005 304.47950 166.89005 299.88709 c
166.89005 295.29354 169.77231 291.46280 174.59065 291.46280 c
179.40869 291.46280 182.28869 295.29354 182.28869 299.88709 c
182.28869 304.47950 179.40869 308.30598 174.59065 308.30598 c
@c
174.59065 306.00964 m
178.03446 306.00964 179.47559 302.97090 179.47559 299.88709 c
179.47559 296.80271 178.03446 293.76482 174.59065 293.76482 c
171.14627 293.76482 169.70513 296.80271 169.70513 299.88709 c
169.70513 302.97090 171.14627 306.00964 174.59065 306.00964 c
@c
198.52072 302.81386 m
198.18227 306.28006 195.32438 308.28331 191.69915 308.30598 c
186.88167 308.30598 184.00054 304.47950 184.00054 299.88709 c
184.00054 295.29354 186.88167 291.46280 191.69915 291.46280 c
195.59339 291.46280 198.31748 294.12397 198.54255 297.97342 C
195.79663 297.97342 L
195.57099 295.63087 194.19732 293.76482 191.69915 293.76482 c
188.25420 293.76482 186.81392 296.80271 186.81392 299.88709 c
186.81392 302.97090 188.25420 306.00964 191.69915 306.00964 c
194.04057 306.00964 195.23225 304.65921 195.70649 302.81386 C
198.52072 302.81386 L
@c
200.92847 297.63609 m
200.92847 293.51622 203.56271 291.46280 207.52498 291.46280 c
211.48639 291.46280 214.12035 293.51622 214.12035 297.63609 c
214.12035 307.92416 L
211.30724 307.92416 L
211.30724 298.55792 l
211.30724 296.39679 211.17317 293.89861 207.52498 293.89861 c
203.87820 293.89861 203.74328 296.39679 203.74328 298.55792 c
203.74328 307.92416 L
200.92847 307.92416 L
200.92847 297.63609 l
@c
220.17628 305.62753 m
224.74658 305.62753 l
226.20898 305.62753 227.53899 305.22189 227.53899 303.17301 c
227.53899 301.48469 226.57068 300.60794 224.79165 300.60794 c
220.17628 300.60794 L
220.17628 305.62753 L
@c
217.36290 291.85058 m
220.17628 291.85058 L
220.17628 298.46863 L
224.31855 298.46863 l
226.90687 298.46863 227.51461 297.16271 227.51461 294.21468 c
227.51461 293.42608 227.51461 292.54791 227.94265 291.85058 C
230.95871 291.85058 L
230.35238 292.50369 230.08139 294.21468 230.08139 296.08271 c
230.08139 298.62652 228.66321 299.34709 227.69546 299.48145 C
227.69546 299.52652 L
228.21279 299.70652 230.35238 300.49398 230.35238 303.57836 c
230.35238 306.30217 228.55153 307.92416 225.03827 307.92416 c
217.36290 307.92416 L
217.36290 291.85058 L
@c
238.95213 305.15386 m
239.01931 305.15386 L
241.42791 298.24356 L
236.51972 298.24356 L
238.95213 305.15386 L
@c
231.33827 291.85058 m
234.24661 291.85058 L
235.75408 296.10539 L
242.17143 296.10539 L
243.67861 291.85058 L
246.69496 291.85058 L
240.50438 307.92416 L
237.51128 307.92416 L
231.33827 291.85058 L
@c
257.29909 305.62753 m
260.06825 305.62753 l
264.47924 305.62753 265.42517 303.10583 265.42517 299.88709 c
265.42517 296.66721 264.47924 294.14665 260.06825 294.14665 c
257.29909 294.14665 L
257.29909 305.62753 L
@c
254.48485 291.85058 m
261.14825 291.85058 l
266.10009 291.85058 268.23940 295.45257 268.23940 299.88709 c
268.23940 304.32161 266.10009 307.92416 261.14825 307.92416 c
254.48485 307.92416 L
254.48485 291.85058 L
@c
276.47887 305.15386 m
276.54548 305.15386 L
278.95351 298.24356 L
274.04646 298.24356 L
276.47887 305.15386 L
@c
268.86557 291.85058 m
271.77449 291.85058 L
273.28167 296.10539 L
279.69732 296.10539 L
281.20564 291.85058 L
284.22312 291.85058 L
278.03254 307.92416 L
275.03660 307.92416 L
268.86557 291.85058 L
@c
294.82526 299.16624 m
299.80091 299.16624 l
301.51219 299.16624 302.50318 298.26482 302.50318 296.69074 c
302.50318 295.06876 301.51219 294.14665 299.80091 294.14665 c
294.82526 294.14665 L
294.82526 299.16624 L
@c
292.01074 291.85058 m
299.39641 291.85058 l
303.55994 291.85058 305.31685 293.80847 305.31685 296.32847 c
305.31685 298.51427 304.25811 300.04384 302.29909 300.47244 C
302.29909 300.51609 L
303.76290 301.14765 304.59657 302.31751 304.59657 303.93921 c
304.59657 306.61739 302.70387 307.92416 299.82359 307.92416 c
292.01074 307.92416 L
292.01074 291.85058 L
@c
294.82526 305.62753 m
299.41852 305.62753 l
300.94923 305.62753 301.78176 305.04189 301.78176 303.42104 c
301.78176 301.98076 300.76753 301.19131 299.41852 301.19131 c
294.82526 301.19131 L
294.82526 305.62753 L
@c
313.60167 305.15386 m
313.66800 305.15386 L
316.07688 298.24356 L
311.16841 298.24356 L
313.60167 305.15386 L
@c
305.98781 291.85058 m
308.89474 291.85058 L
310.40334 296.10539 L
316.81984 296.10539 L
318.32759 291.85058 L
321.34507 291.85058 L
315.15477 307.92416 L
312.15940 307.92416 L
305.98781 291.85058 L
@c
319.27323 305.49203 m
324.36000 305.49203 L
324.36000 291.85058 L
327.17395 291.85058 L
327.17395 305.49203 L
332.28510 305.49203 L
332.28510 307.92416 L
319.27323 307.92416 L
319.27323 305.49203 L
@c
334.15398 291.85058 m
336.96794 291.85058 L
336.96794 307.92416 L
334.15398 307.92416 L
334.15398 291.85058 L
@c
343.22740 305.62753 m
345.99543 305.62753 l
350.40813 305.62753 351.35291 303.10583 351.35291 299.88709 c
351.35291 296.66721 350.40813 294.14665 345.99543 294.14665 c
343.22740 294.14665 L
343.22740 305.62753 L
@c
340.41260 291.85058 m
347.07628 291.85058 l
352.02784 291.85058 354.16658 295.45257 354.16658 299.88709 c
354.16658 304.32161 352.02784 307.92416 347.07628 307.92416 c
340.41260 307.92416 L
340.41260 291.85058 L
@c
362.40605 305.15386 m
362.47408 305.15386 L
364.88324 298.24356 L
359.97392 298.24356 L
362.40605 305.15386 L
@c
354.79361 291.85058 m
357.70139 291.85058 L
359.20998 296.10539 L
365.62592 296.10539 L
367.13339 291.85058 L
370.15087 291.85058 L
363.95943 307.92416 L
360.96520 307.92416 L
354.79361 291.85058 L
@c
380.75414 305.62753 m
384.91767 305.62753 l
386.40387 305.62753 387.68627 305.08696 387.68627 302.95984 c
387.68627 300.92598 386.13317 300.29187 384.87317 300.29187 c
380.75414 300.29187 L
380.75414 305.62753 L
@c
377.93962 291.85058 m
380.75414 291.85058 L
380.75414 297.99524 L
385.03049 297.99524 l
389.62346 297.97342 390.50135 300.94838 390.50135 302.93688 c
390.50135 304.94750 389.62346 307.92416 385.03049 307.92416 c
377.93962 307.92416 L
377.93962 291.85058 L
@c
392.95474 291.85058 m
404.68422 291.85058 L
404.68422 294.28129 L
395.76813 294.28129 L
395.76813 298.98624 L
403.87266 298.98624 L
403.87266 301.28258 L
395.76813 301.28258 L
395.76813 305.49203 L
404.52576 305.49203 L
404.52576 307.92416 L
392.95474 307.92416 L
392.95474 291.85058 L
@c
409.95099 305.62753 m
414.52129 305.62753 l
415.98369 305.62753 417.31285 305.22189 417.31285 303.17301 c
417.31285 301.48469 416.34482 300.60794 414.56523 300.60794 c
409.95099 300.60794 L
409.95099 305.62753 L
@c
407.13676 291.85058 m
409.95099 291.85058 L
409.95099 298.46863 L
414.09411 298.46863 l
416.68157 298.46863 417.29017 297.16271 417.29017 294.21468 c
417.29017 293.42608 417.29017 292.54791 417.71820 291.85058 C
420.73427 291.85058 L
420.12567 292.50369 419.85609 294.21468 419.85609 296.08271 c
419.85609 298.62652 418.43877 299.34709 417.47017 299.48145 C
417.47017 299.52652 L
417.98835 299.70652 420.12567 300.49398 420.12567 303.57836 c
420.12567 306.30217 418.32454 307.92416 414.81383 307.92416 c
407.13676 307.92416 L
407.13676 291.85058 L
@c
422.98554 291.85058 m
425.79893 291.85058 L
425.79893 298.98624 L
433.07093 298.98624 L
433.07093 301.28258 L
425.79893 301.28258 L
425.79893 305.49203 L
434.08375 305.49203 L
434.08375 307.92416 L
422.98554 307.92416 L
422.98554 291.85058 L
@c
436.33559 291.85058 m
448.06365 291.85058 L
448.06365 294.28129 L
439.14926 294.28129 L
439.14926 298.98624 L
447.25294 298.98624 L
447.25294 301.28258 L
439.14926 301.28258 L
439.14926 305.49203 L
447.90718 305.49203 L
447.90718 307.92416 L
436.33559 307.92416 L
436.33559 291.85058 L
@c
450.51647 291.85058 m
453.33184 291.85058 L
453.33184 307.92416 L
450.51647 307.92416 L
450.51647 291.85058 L
@c
455.24523 305.49203 m
460.33285 305.49203 L
460.33285 291.85058 L
463.14652 291.85058 L
463.14652 305.49203 L
468.25739 305.49203 L
468.25739 307.92416 L
455.24523 307.92416 L
455.24523 305.49203 L
@c
473.79487 305.15386 m
473.86233 305.15386 L
476.27178 298.24356 L
471.36416 298.24356 L
473.79487 305.15386 L
@c
466.18186 291.85058 m
469.09020 291.85058 L
470.59824 296.10539 L
477.01332 296.10539 L
478.52220 291.85058 L
481.53912 291.85058 L
475.34712 307.92416 L
472.35345 307.92416 L
466.18186 291.85058 L
@c
322.56822 493.68387 m
364.16324 493.68387 L
364.16324 459.11650 L
349.26803 459.11650 L
349.26803 453.77631 L
303.73767 453.77631 L
303.73767 474.85332 l
303.73767 485.21140 312.21156 493.68387 322.56822 493.68387 c
@c
374.84306 493.68387 m
416.18494 493.68387 l
426.54076 493.68387 435.01436 485.21140 435.01436 474.85332 c
435.01436 433.54120 L
434.70624 433.54120 L
434.70624 432.13465 l
434.70624 421.77940 426.23150 413.30494 415.87455 413.30494 c
360.22904 413.30494 L
360.22904 441.97172 L
360.50854 441.97172 L
360.50854 442.53411 L
388.61376 442.53411 L
388.61376 459.11650 L
374.84306 459.11650 L
374.84306 493.68387 L
@c
435.01436 406.27928 m
435.01436 371.99083 L
303.73767 371.99083 L
303.73767 421.73688 L
303.73767 423.14173 L
303.73767 433.49839 312.21156 441.97172 322.56822 441.97172 c
349.54838 441.97172 L
349.54838 413.30494 L
349.54838 407.68469 L
349.54838 406.27928 L
435.01436 406.27928 L
@c
158.99839 493.68387 m
206.42967 493.68387 L
206.42967 371.99083 L
158.99839 371.99083 L
158.99839 493.68387 L
@c
216.60633 493.68387 m
274.50850 493.68387 l
284.24693 493.68387 292.21483 485.71597 292.21483 475.97783 c
292.21483 389.69745 l
292.21483 379.95987 284.24693 371.99083 274.50850 371.99083 c
216.60633 371.99083 L
216.60633 404.65417 L
245.64954 404.65417 L
245.64954 458.71342 L
216.60633 458.71342 L
216.60633 493.68387 L
@c
303.40290 550.42696 m
475.60819 550.42696 l
485.30920 550.42696 493.24592 542.48797 493.24592 532.78753 c
493.24592 439.96110 L
449.14762 439.96110 L
449.14762 513.88781 L
303.40290 513.88781 L
303.40290 550.42696 L
@c
493.24592 428.42806 m
493.24592 335.60249 l
493.24592 325.90148 485.30920 317.96391 475.60819 317.96391 c
303.40488 317.96391 L
303.40290 354.50362 L
449.14762 354.50362 L
449.14762 428.42806 L
493.24592 428.42806 L
@c
291.87269 317.96391 m
119.66740 317.96391 l
109.96639 317.96391 102.02967 325.90148 102.02967 335.60249 c
102.02967 428.42806 L
146.12797 428.42806 L
146.12797 354.50362 L
291.87269 354.50362 L
291.87269 317.96391 L
@c
F

@rax %Note: Object
81.93005 205.23713 513.34554 636.65263 @E
/$fm 0 def
81.93005 636.65263 m
513.34554 636.65263 L
513.34554 205.23713 L
81.93005 205.23713 L
81.93005 636.65263 L
@c
N

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel3Dict 3.0 0
%%EOF
