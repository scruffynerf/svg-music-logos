%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 193 193 
%%LanguageLevel: 2
%%Creator: CorelDRAW 11
%%Title: 25.eps
%%CreationDate: Mon Sep 29 09:04:14 2003
%%For: ldn
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 2 def
/CMYKMarks true def
/UseLevel 2 def
%Build: CorelDRAW 11 Version 11.633
%Color profile: Disabled
/CorelIsEPS true def
%%BeginResource: procset wCorel11Dict 11.0 0
/wCorel11Dict 300 dict def wCorel11Dict begin
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge
{pop}{exch pop}ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch
rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll
eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1
exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}
repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1
roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index
.114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb
/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray
ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor
get def/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict
/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor
sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop
/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where{pop
/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld
}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{
pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse
/setoverprint where{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where
{pop}{/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1
roll mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/Corelsetcustomcolor_exists false def/setcustomcolor where{pop
/Corelsetcustomcolor_exists true def}if CorelIsSeps true eq CorelIsInRIPSeps
false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{findcmykcustomcolor exch setcustomcolor}ifelse
SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage
where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi
true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop
daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs
{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors
dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255
div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul
cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{
4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div
$dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3
add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat
0 $dat length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse
/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$fil 4 eq
{CorelShfillDoFill}{$t $c $m $y $k $n $o @scc_5{wfill}{@np}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{
matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M $Y $K
$N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}{@np}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{
5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{
/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{
@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{
@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq{/$ink_5 -1 def}
{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5(Magenta)eq{/$ink_5 1
def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{CurrentInkName_5(Black)eq
{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}ifelse}ifelse}bd/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg false def}
ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.0
/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true def}{@gs $t $c $m $y $k $n $o
@scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd/$pyf xd/$pxf xd/$pn xd}bd
/CorelPtrnDoFill{@gs $ctm setmatrix $pm concat CorelPtrnSetBBox wclip @sv Bburx
Bbury $pm itransform/$tury xd/$turx xd Bbllx Bblly $pm itransform/$tlly xd
/$tllx xd newpath $tllx $tlly m $tllx $tury l $turx $tury l $turx $tlly l $tllx
$tlly m @cp pathbbox @rs/$tury xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx
sub def/$hei $tury $tlly sub def @gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{
$t $c $m $y $k $n $o @scc_5{SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei
scale <00> 8 1 false[8 0 0 1 0 0]{}imagemask}{/$bkg true def}ifelse}if}ifelse
@gr $wid 0 gt $hei 0 gt and{$pn cvlit load aload pop/$pd xd 3 -1 roll sub
/$phei xd exch sub/$pwid xd $wid $pwid div ceiling 1 add/$tlx xd $hei $phei div
ceiling 1 add/$tly xd currentdict/CorelPtrnL2Pattern known $psy 0 eq and $psx 0
eq and{CorelPtrnL2Pattern}{$psx 0 eq{CorelPtrnTileVeritcal}{CorelPtrnTileHoriz
}ifelse}ifelse}if @gr @np/$bkg false def}bd/CorelPtrnSetBBox{pathbbox/$ury xd
/$urx xd/$lly xd/$llx xd}bd/CorelPtrnSetFirstTile{$tllx $pxf add dup $tllx gt
{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei add}if/$ty xd}bd/p{/$pm
xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}bd/CorelPtrnDraw{@ep}bd
/CorelPtrnPutTile{@sv/$in true def 2 copy dup $lly le{/$in false def}if $phei
sub $ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add $llx le{
/$in false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl 0
$phei rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1 roll 3
index sub Tl matrix currentmatrix/$ctm xd CorelPtrnDraw pop pop pop pop}{pop
pop}ifelse @rs}bd/CorelPtrnTileHoriz{CorelPtrnSetFirstTile 0 1 $tly 1 sub{dup
$psx mul $tx add{dup $llx gt{$pwid sub}{exit}ifelse}loop exch $phei mul $ty
exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy 3 -1 roll add exch CorelPtrnPutTile
pop}for pop pop}for}bd/CorelPtrnTileVeritcal{CorelPtrnSetFirstTile 0 1 $tlx 1
sub{dup $pwid mul $tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}
{exit}ifelse}loop 0 1 $tly 1 sub{$phei mul 3 copy sub CorelPtrnPutTile pop}for
pop pop}for}bd L2? UseLevel 2 ge and{/CorelPtrnL2Pattern{@sv[$pn cvlit load
aload pop pop]$pwid $phei $pn cvlit load aload pop pop pop pop pathbbox pop pop
2 index sub exch 3 index sub 4 -2 roll pop pop exch matrix identmatrix
translate/PatternMatrix xd/PatternYStep xd/PatternXStep xd/PatternBBox xd
currentdict/PatternMainDict xd <</PaintType 1/PatternType 1/TilingType 1/BBox
PatternBBox/XStep PatternXStep/YStep PatternYStep/PaintProc{begin
PatternMainDict begin $ctm currentmatrix pop 0 CorelPtrnDraw end end}bind >>
PatternMatrix makepattern setpattern fill @rs}def}if
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel11Dict begin
@BeginSysCorelDict
@ssa
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
0.00000 0.00000 192.75591 192.75591 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
0.00000 192.75591 m
192.75591 192.75591 L
192.75591 0.00000 L
0.00000 0.00000 L
0.00000 192.75591 L
@c
F

@rax %Note: Object
10.24044 8.50394 182.51518 184.25197 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
133.84743 72.88639 m
135.42803 77.33424 137.09509 81.75402 139.05638 86.02639 c
139.52494 86.02639 l
140.34444 83.36353 139.99266 79.29553 139.99266 76.22277 c
138.29528 74.75953 135.92551 73.23789 133.84743 72.88639 c
133.84743 72.88639 l
@c
160.39049 64.10721 m
160.01065 64.37083 159.62995 64.63389 159.27846 64.89751 c
158.16643 68.67269 159.92249 80.78854 161.47361 83.71502 c
164.95654 85.55811 163.81446 78.88592 163.78554 77.36428 c
161.70746 73.55934 161.47361 71.27660 161.26923 66.85767 c
162.14712 65.98006 165.10252 68.61373 165.89225 69.19937 c
168.00009 71.71597 171.24831 73.44283 173.55969 75.90076 c
175.66668 76.98359 179.85146 82.71950 182.51518 80.72957 c
182.45594 78.91512 180.93458 79.47099 179.67600 78.82724 c
174.67172 75.08154 170.13572 70.51635 165.45317 66.38995 c
163.28806 64.86775 162.64403 64.34107 160.39049 64.10721 c
160.39049 64.10721 L
@c
36.48359 57.28847 m
34.61046 59.74668 37.03946 72.21345 37.91707 72.91559 c
38.82444 83.68526 39.43899 94.48413 40.66809 104.93178 c
40.60942 105.75099 40.58022 106.57077 40.55131 107.36079 c
37.65373 107.36079 35.69329 105.04857 33.17641 104.22907 c
26.72050 100.50094 19.63616 97.01178 15.88110 90.24066 c
15.06104 87.46016 14.47597 84.97304 11.22746 86.87509 c
10.20331 89.24542 9.64743 89.47956 11.22746 91.32321 c
13.94901 93.40129 17.34406 96.24019 20.47521 97.79131 c
22.96318 99.83962 26.24060 101.36126 28.84507 103.26359 c
33.70337 105.86778 38.59030 108.47282 43.47780 111.04809 c
54.27609 115.73036 65.04576 120.11981 76.25424 124.12913 c
76.54706 124.12913 76.83959 124.12913 77.13213 124.09994 c
77.13213 123.57326 77.13213 123.57326 76.89798 123.33940 c
66.36246 119.85647 56.47096 115.32047 46.46239 110.87235 c
43.50671 109.26255 43.50671 109.26255 43.00951 108.79427 c
42.80428 107.03877 42.80428 107.03877 42.42416 98.63972 c
40.08302 78.35924 40.08302 78.35924 39.87808 74.84740 c
38.47323 69.69685 40.58022 64.40003 38.70709 59.04425 c
38.29776 58.51757 37.88816 57.96198 37.47855 57.40554 c
37.12677 57.37635 36.80504 57.34715 36.48359 57.28847 c
36.48359 57.28847 L
@c
43.71165 54.15761 m
43.53591 54.27411 43.38964 54.39146 43.24365 54.50797 c
43.24365 63.99014 45.55531 73.47203 45.55531 82.83685 c
44.44356 85.35345 45.73077 87.60699 46.31641 89.88945 c
46.37480 91.26482 46.37480 96.12283 48.77490 93.72331 c
49.82797 90.41613 49.44756 87.22630 49.44756 83.62715 c
47.89672 77.56894 47.89672 77.56894 47.72098 76.22277 c
49.18394 76.07650 53.89569 78.56419 55.09559 79.76381 c
55.88589 85.06063 56.67619 90.35745 57.46620 95.62564 c
57.93449 95.97657 58.28542 95.85950 58.92945 95.53720 c
58.98784 91.08907 58.19754 86.61175 58.54904 81.98844 c
59.63159 81.98844 60.83178 82.80765 62.29502 82.86576 c
62.29502 84.06624 62.32365 85.26529 62.35370 86.43657 c
63.23131 87.31417 63.72907 89.65559 64.10920 90.73843 c
65.19203 90.76762 65.19203 90.76762 66.30406 90.56239 c
68.41134 91.85017 70.19631 93.69383 72.47906 94.77638 c
72.80107 95.59616 73.67896 95.68375 74.52765 95.85950 c
75.49313 96.62031 78.21496 98.17143 85.17997 102.82422 c
85.85320 102.85398 85.85320 102.85398 86.29200 102.64904 c
86.29200 101.03924 85.58957 100.95165 84.06794 100.30762 c
79.59061 96.79578 l
76.40079 95.12787 73.94202 92.14271 70.81058 90.53348 c
69.49417 89.21594 68.03065 87.95792 67.03597 86.37789 c
66.83074 83.30485 65.19203 80.61250 65.01657 77.45187 c
68.93773 78.62258 72.06888 84.38769 76.10769 85.00224 c
76.04929 84.65131 75.99033 84.30009 75.96113 83.94888 c
72.04025 80.78854 65.13335 74.78929 63.28970 70.34088 c
62.99717 68.23332 61.85594 61.00498 63.02693 59.54173 c
66.24567 59.54173 71.36731 66.79956 72.50854 69.08202 c
73.24016 69.08202 l
72.83027 67.00450 70.95713 65.07298 69.90350 63.08306 c
67.79679 60.24387 64.95789 55.97150 60.97833 57.61049 c
59.60268 61.18101 60.56844 65.68781 60.94857 69.17017 c
60.56844 70.92567 59.83625 70.25329 60.59735 72.21345 c
62.06088 73.53043 61.85594 79.35420 61.91433 80.90504 c
61.79726 80.96343 61.68019 80.99320 61.56312 81.02239 c
60.04176 79.99767 58.87077 79.17874 57.64195 77.94964 c
56.79298 75.43276 56.35389 72.94507 55.88589 70.16513 c
55.88589 69.37483 55.65175 61.70712 54.33506 62.14620 c
54.33506 66.44835 54.33506 66.44835 54.13011 70.16513 c
53.57367 71.21849 54.77386 74.93528 54.59811 76.51587 c
52.81285 76.51587 48.56939 73.44283 46.93096 72.12586 c
45.99468 66.41887 45.08731 60.42019 44.56035 54.50797 c
44.29701 54.27411 44.29701 54.27411 43.71165 54.15761 c
43.71165 54.15761 L
@c
147.89480 43.03672 m
146.89984 43.91433 146.89984 43.91433 146.60674 44.41209 c
144.64630 55.76655 149.06523 67.99918 148.65591 79.26633 c
146.98715 79.26633 142.92000 74.87631 141.92419 73.85216 c
141.36831 70.19433 141.71981 65.68781 141.71981 61.61981 c
142.21672 60.50750 142.30488 57.61049 140.40283 57.61049 c
139.52494 62.76104 140.51991 67.58986 139.87587 72.41868 c
137.56394 72.41868 133.02794 67.38491 131.59417 65.48315 c
131.15509 63.96094 130.86255 60.85871 130.21852 59.62989 c
130.21852 56.84967 130.30583 55.64920 127.37962 55.64920 c
126.12161 56.08857 126.12161 56.23427 126.12161 57.31767 c
129.10649 65.80431 132.23735 74.20337 135.48643 82.48564 c
138.61729 89.30409 138.61729 89.30409 139.08586 89.97704 c
139.93427 90.44561 140.54882 90.03600 141.51402 89.56800 c
142.07074 86.05587 141.92419 82.10494 141.92419 78.38844 c
142.15890 77.80309 142.15890 77.80309 142.39276 77.68602 c
145.72857 79.26633 145.72857 79.26633 148.86028 80.43676 c
149.53323 83.01203 149.35748 89.30409 150.99676 90.56239 c
152.95691 90.56239 154.15710 90.12331 153.04507 87.89981 c
153.04507 84.97304 153.42576 81.84161 152.25449 78.88592 c
151.87408 78.53471 151.87408 78.53471 151.08406 76.98359 c
149.06523 67.00450 147.77773 57.58072 147.77773 47.16255 c
148.15843 45.99213 148.15843 45.99213 148.65591 45.31890 c
150.03071 45.31890 l
154.71298 49.18224 158.34274 55.03521 162.49720 59.57093 c
163.31669 61.23912 163.96072 61.67820 165.89225 61.67820 c
166.12696 61.41515 166.12696 61.41515 166.09748 60.53698 c
159.65915 56.23427 155.94180 48.83102 150.23565 43.56340 c
149.06523 43.15351 149.06523 43.15351 147.89480 43.03672 c
147.89480 43.03672 L
@c
107.71398 8.50394 m
107.39197 9.67436 107.01128 12.80551 106.60195 14.15225 c
105.05027 34.05231 105.05027 34.05231 104.84617 34.46164 c
104.52416 55.97150 104.14346 77.18882 104.05531 98.46397 c
103.93852 98.52236 103.82145 98.55213 103.70438 98.58104 c
102.18246 96.29830 100.98312 91.11827 100.16362 88.10391 c
99.78321 87.31417 99.78321 87.31417 96.65178 75.43276 c
95.62734 70.66261 94.74945 63.60973 92.96447 58.45890 c
91.79376 50.23559 90.56466 42.10016 89.83304 33.67162 c
89.04302 29.19430 89.04302 29.19430 88.04806 25.03871 c
87.46299 24.45307 86.99443 24.65830 86.35011 24.65830 c
86.14545 24.95055 85.94079 25.21417 85.73613 25.47780 c
85.53118 27.02863 85.53118 27.02863 85.35572 38.00296 c
85.53118 38.96872 85.94079 45.81694 86.11654 46.57748 c
87.17046 70.19433 88.07754 93.98693 87.69685 117.36907 c
87.28724 121.08557 87.28724 121.08557 87.31644 123.51515 c
88.10646 123.95424 88.04806 123.95424 89.21849 123.71981 c
89.59861 122.92923 90.00850 122.13921 90.41839 121.31972 c
89.83304 103.70211 89.83304 103.70211 88.86756 83.21698 c
88.98463 79.88031 88.63313 77.13014 88.28192 73.67669 c
87.96019 62.02913 87.17046 50.70387 87.31644 38.96872 c
87.43323 38.85165 87.55002 38.73458 87.69685 38.61780 c
91.58910 59.07373 91.58910 59.07373 91.79376 61.03446 c
92.17417 61.99994 94.89572 74.08658 95.30561 75.08154 c
98.02715 85.32397 100.95420 95.12787 104.49439 104.98989 c
104.93348 105.19512 104.93348 105.19512 107.18702 105.16564 c
108.26986 104.08280 106.25046 100.36630 105.84170 99.02013 c
105.75298 97.87861 105.66567 96.73767 105.60699 95.59616 c
105.72406 95.59616 105.84170 95.56724 105.95792 95.53720 c
104.43600 74.02791 107.18702 52.48913 107.18702 30.77461 c
107.39197 30.39449 107.59635 25.50671 107.77238 24.68750 c
107.77238 22.55131 108.06576 20.32696 108.38693 17.89767 c
108.50400 17.86847 108.62079 17.83956 108.76734 17.78088 c
110.37685 20.18098 109.52844 24.10214 110.52340 26.50139 c
110.69887 29.34057 111.57704 31.88636 112.07367 34.49083 c
112.07367 35.36929 112.07367 36.24661 112.10400 37.09559 c
112.89402 37.68094 113.71266 40.98813 114.03553 41.89521 c
115.58636 47.89417 117.40025 54.06917 119.47805 59.65852 c
119.56620 60.47858 119.53672 60.88791 120.06369 61.41515 c
123.86835 71.56970 128.31676 81.43172 132.56022 91.26482 c
136.15937 98.25931 139.84696 105.13644 143.50535 112.01386 c
145.02671 114.26683 145.02671 114.26683 148.15843 119.56394 c
150.93808 122.84192 153.92296 127.37792 155.79609 131.32828 c
158.22510 133.34797 158.25458 139.87361 162.96605 138.93704 c
164.31194 136.91792 162.05839 134.43080 160.62520 132.73313 c
156.87921 129.77773 155.09339 126.35320 152.48920 122.28576 c
150.67474 120.06142 150.67474 120.06142 150.11858 119.71049 c
148.09918 114.70620 144.23613 110.40435 142.15890 105.31219 c
140.25713 102.35622 138.99855 99.22507 137.41795 96.06387 c
135.31039 93.95717 134.92970 89.88945 132.35499 87.72350 c
128.78447 80.49515 124.04353 72.30132 122.78494 64.25348 c
122.52217 63.90198 122.28831 63.55077 122.05361 63.17065 c
118.74671 54.09865 115.08831 43.68019 114.03553 34.05231 c
112.98132 31.00847 112.27861 28.14066 111.86929 24.83376 c
111.72359 24.65830 111.60595 24.48255 111.48888 24.30680 c
110.69887 19.24441 109.93776 12.60057 109.35298 9.29424 c
109.17751 9.08929 109.03096 8.85515 108.88441 8.62101 c
108.47424 8.59209 108.09468 8.56233 107.71398 8.50394 c
107.71398 8.50394 L
@c
97.82561 109.65600 m
97.65014 109.83146 97.47468 110.00721 97.32813 110.18239 c
95.83087 113.48277 94.33899 116.74488 92.96022 120.00756 c
92.82472 120.71055 92.54806 121.36337 92.16028 121.93512 c
90.45099 126.13294 88.96450 130.34353 87.93383 134.64822 c
87.64129 134.91099 87.64129 134.91099 87.26088 134.91099 c
84.77320 132.01427 84.97814 127.47827 84.80296 123.64441 c
83.77824 123.05906 83.63197 123.20561 82.87115 123.67389 c
83.01713 131.07770 83.10529 138.53991 84.62721 145.56387 c
84.83187 145.85613 85.03625 146.14894 85.24205 146.41257 c
88.66545 146.41257 89.10482 143.39820 89.07506 140.14970 c
90.91928 140.14970 103.91244 151.56283 103.32765 148.02208 c
99.23017 145.00772 93.14306 141.78898 90.48019 137.34000 c
90.48019 128.38535 94.48923 119.98602 97.91376 111.61701 c
98.38176 111.00189 98.46964 110.94350 98.46964 109.77307 c
98.23493 109.74387 98.03083 109.71439 97.82561 109.65600 c
97.82561 109.65600 L
@c
130.98331 118.43546 m
127.91027 121.50794 132.09506 129.35112 130.68992 130.46315 c
129.78227 135.90652 128.67052 140.94000 130.10428 146.03187 c
133.35279 146.03187 133.29439 143.48580 133.79187 140.50120 c
133.49934 138.15950 132.18236 136.98935 132.27052 134.06287 c
132.38674 134.03339 132.50438 133.97499 132.62145 133.91631 c
133.38255 135.02835 133.38255 135.02835 134.58246 137.36976 c
135.25540 140.47172 139.00139 142.87124 139.87871 146.03187 c
140.14233 146.17814 140.43543 146.32469 140.72797 146.47124 c
146.08318 152.29474 151.70202 157.50369 157.78885 162.53745 c
158.22794 163.67896 161.53483 165.31767 162.85266 166.63465 c
164.75443 167.86403 167.59276 170.58557 170.25647 170.40954 c
170.46057 170.14649 170.46057 170.14649 170.46057 169.09285 c
166.97820 168.71244 162.96888 165.25899 160.21843 163.18091 c
156.29641 159.55228 150.47320 155.95285 147.37039 151.70967 c
142.19065 146.93924 137.68441 140.76425 134.58246 134.41408 c
133.64532 131.60438 133.99682 131.22425 133.99682 128.18041 c
132.76715 125.13713 132.91398 122.70784 132.82639 119.19657 c
132.65036 118.99106 132.50438 118.78639 132.35811 118.55254 c
131.89011 118.52306 131.42154 118.49357 130.98331 118.43546 c
130.98331 118.43546 L
@c
137.80063 120.36671 m
136.92331 121.50794 139.00139 123.05906 139.64485 123.90803 c
139.52778 127.39039 139.29392 130.72649 139.29392 133.91631 c
141.22517 135.46772 140.99074 140.88161 141.04998 143.28113 c
145.08822 145.32973 150.56050 146.06107 150.56050 139.88665 c
149.15622 134.00391 144.94167 128.18041 140.84476 123.70337 c
140.02526 122.26876 139.05921 121.15701 138.85483 120.51326 c
138.50334 120.48406 138.15213 120.42539 137.80063 120.36671 c
137.80063 120.36671 L
@c
110.11691 120.57137 m
108.47792 122.21065 109.23902 124.66885 109.20926 126.65906 c
109.58995 132.30680 110.37969 138.94980 110.35077 140.67694 c
105.96076 145.06668 113.30617 146.73430 114.27222 143.63235 c
114.27222 141.64243 l
112.48724 135.35036 111.66775 130.93143 111.37465 124.49310 c
111.49172 124.46362 111.60935 124.43471 111.75534 124.37603 c
114.33061 126.21997 116.90561 129.23376 120.30123 129.05858 c
120.30123 128.12202 l
119.21839 127.39039 118.16476 126.65906 117.11140 125.92715 c
114.12652 123.11773 112.07792 120.89367 111.66775 120.68901 c
111.14079 120.65924 110.61439 120.63005 110.11691 120.57137 c
110.11691 120.57137 L
@c
56.44488 123.70337 m
56.32781 124.02454 56.23994 124.34683 56.15263 124.66885 c
56.15263 139.30129 56.15263 139.30129 55.94712 145.73962 c
55.12819 147.23206 55.15739 147.26098 55.94712 148.49036 c
56.12258 154.28438 56.41540 159.99137 56.94265 165.52261 c
57.87865 165.52261 l
58.78630 161.22076 58.28882 156.74287 58.31802 152.20715 c
58.58135 152.11899 l
60.54236 154.08000 61.80009 156.71367 63.73191 158.64548 c
66.51241 162.71291 69.78983 166.81011 70.95997 171.52157 c
70.95997 177.31616 67.03880 176.05786 63.08816 175.12129 c
58.40589 173.54126 52.58211 170.26328 49.47959 166.54649 c
48.13370 165.75647 46.81672 164.96617 45.49946 164.17644 c
43.89024 162.24435 42.66142 160.89846 40.17373 160.89846 c
40.02775 163.38614 43.50983 164.76123 44.15386 167.01506 c
44.53455 167.13213 44.53455 167.13213 51.76290 172.80964 c
56.85477 175.91131 64.37565 179.83304 70.52145 177.08230 c
73.00885 175.00450 72.80419 173.36551 72.54057 169.91235 c
70.95997 166.02009 70.95997 166.02009 70.57984 164.46841 c
69.37994 162.44957 66.10252 158.03093 64.52220 155.63083 c
62.73666 153.96236 62.12211 151.29978 60.13219 149.71918 c
59.45924 148.66583 59.37109 147.87581 58.84469 146.85137 c
57.67398 146.52935 57.82025 146.64671 57.49880 145.53468 c
57.49880 130.52211 57.32277 129.35112 57.49880 124.66885 c
57.20598 124.20057 56.97156 123.90803 56.44488 123.70337 c
56.44488 123.70337 L
@c
79.27172 123.87827 m
78.97890 124.25896 75.87694 131.25345 75.46677 132.65830 c
74.47209 134.61874 73.47713 136.57918 72.51165 138.53991 c
72.36482 138.53991 72.24860 138.53991 72.13068 138.51099 c
72.13068 136.49159 73.91594 126.68825 69.64328 126.95187 c
68.58964 128.00494 68.70699 130.19981 68.61940 131.34104 c
68.70699 134.03339 68.26819 143.92517 70.28702 146.64671 c
71.28227 146.88085 72.97965 147.64167 73.71128 146.14894 c
73.85726 141.75921 74.03329 135.14513 77.57376 131.60438 c
78.53981 132.07266 78.39383 137.19402 78.39383 138.36444 c
80.41294 153.67039 84.89055 166.95694 91.67981 180.56466 c
92.03102 180.88668 92.85052 182.70057 94.02094 184.25197 c
94.54819 184.25197 94.54819 184.25197 94.81124 183.98835 c
93.20173 180.79880 92.82104 180.44731 89.68989 174.21392 c
86.26564 165.93222 83.69093 158.23559 81.49550 149.39773 c
80.35455 142.08123 78.01313 132.45307 80.52973 125.07846 c
80.52973 124.05402 80.09121 124.02454 79.27172 123.87827 c
79.27172 123.87827 L
@c
103.47335 123.87827 m
103.35657 124.02454 103.23950 124.14189 103.15134 124.25896 c
103.61991 130.78488 104.17521 137.25241 104.32176 143.60287 c
103.56151 143.77890 102.68362 143.13487 101.83436 143.13487 c
100.75209 144.36369 103.97083 146.20791 104.73194 146.73430 c
105.17102 149.63102 109.09304 164.61553 105.05395 165.96142 c
101.89361 164.35162 98.76132 162.85946 95.92356 160.69380 c
95.24976 160.69380 95.24976 160.69380 94.81124 160.89846 c
94.81124 163.15228 98.64510 165.43446 100.51824 166.54649 c
103.06346 166.92718 105.40488 167.92214 107.83389 169.35647 c
108.53631 170.99518 108.74154 172.72176 109.03380 174.30180 c
110.93556 175.56038 111.08239 172.72176 111.49172 171.22932 c
111.84321 171.28800 112.22391 171.34639 112.60431 171.40479 c
121.09124 175.00450 129.81118 177.81364 138.97191 179.30608 c
138.91323 179.10142 138.88431 178.89676 138.85483 178.66205 c
135.84104 177.22828 132.18236 176.58454 129.22639 175.12129 c
122.64208 174.47726 117.14031 171.31663 112.51701 166.98614 c
112.10683 164.70283 110.81934 162.39090 110.17531 159.96246 c
110.00013 156.27487 l
109.53128 153.99213 108.47792 151.56283 108.65395 149.07572 c
109.70674 148.72450 112.80954 151.00724 115.23827 150.88989 c
115.44265 150.65575 115.44265 150.65575 115.44265 149.39773 c
114.71131 148.66583 113.13071 148.43197 112.25339 148.19783 c
110.37969 147.26098 109.03380 146.35389 107.45405 145.15398 c
107.48296 143.42769 107.62951 143.28113 107.62951 142.54951 c
104.93717 140.29625 106.69294 132.48227 104.73194 128.56110 c
104.32176 126.42463 104.32176 126.42463 104.11739 124.23005 c
103.88353 124.11269 103.67858 123.99591 103.47335 123.87827 c
103.47335 123.87827 L
@c
141.31276 126.80532 m
141.60586 130.90224 141.81080 131.48759 142.57106 141.64243 c
143.65502 144.04224 147.57562 143.60287 149.00967 141.43748 c
149.79940 136.96016 144.88328 129.93647 141.92702 126.98079 c
141.31276 126.80532 L
141.31276 126.80532 L
@c
64.46353 127.59534 m
62.23918 129.26353 63.79087 136.84280 63.93657 138.94980 c
65.10756 147.90501 65.10756 147.90501 65.34142 148.37357 c
65.86838 148.37357 l
68.53124 145.71014 66.65811 139.18365 66.10252 135.58450 c
66.01436 133.09710 65.92677 130.60998 65.86838 128.12202 c
65.25383 127.71213 65.25383 127.71213 64.46353 127.59534 c
64.46353 127.59534 L
@c
122.58369 130.72649 m
119.04208 131.48759 119.56989 133.06791 119.56989 135.99383 c
120.38882 139.38888 122.34898 147.08551 127.11940 143.66183 c
129.89934 140.06211 126.50513 133.38964 123.37370 130.81436 c
122.58369 130.72649 L
122.58369 130.72649 L
@c
122.58369 133.06791 m
121.64712 135.61427 122.73024 139.06743 123.05169 141.46696 c
123.72463 142.78337 123.57865 142.69550 125.18816 142.69550 c
127.20756 139.09635 125.65672 136.66734 123.78387 133.18498 c
123.37370 133.15550 122.96409 133.12630 122.58369 133.06791 c
122.58369 133.06791 L
@c
139.96687 178.89676 m
139.90819 179.01354 139.84980 179.13033 139.82031 179.21820 c
140.25997 179.80384 140.75660 179.68649 141.57638 179.77436 c
141.57638 179.42343 l
141.02022 179.24825 140.49383 179.07222 139.96687 178.89676 c
139.96687 178.89676 l
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel11Dict 11.0 0
%%EOF
